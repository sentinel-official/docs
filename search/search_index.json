{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Sentinel documentation site!</p> <p>Please note this documentation site will improve over time and is still a work-in-progress.</p>"},{"location":"clients/CLI/API/","title":"API","text":""},{"location":"clients/CLI/installation/","title":"Installation","text":""},{"location":"clients/CLI/installation/#install-the-dependencies","title":"Install the dependencies","text":""},{"location":"clients/CLI/installation/#linux","title":"Linux","text":"<pre><code>sudo apt-get update &amp;&amp; \\\nsudo apt-get install openresolv wireguard-tools\n</code></pre>"},{"location":"clients/CLI/installation/#mac","title":"Mac","text":"<pre><code>/bin/bash -c \"$(curl -fsLS https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" &amp;&amp; \\\nbrew install wireguard-tools\n</code></pre> Tip <p>To install the dependency <code>wireguard-tools</code> you can also use MacPorts</p>"},{"location":"clients/CLI/installation/#prebuilt-binaries","title":"Prebuilt binaries","text":"<pre><code>curl -fsLS https://raw.githubusercontent.com/sentinel-official/cli-client/development/scripts/install.sh | sh\n</code></pre>"},{"location":"clients/CLI/installation/#from-source","title":"From source","text":"<p>TBU</p>"},{"location":"clients/CLI/commands/VPN/","title":"VPN","text":""},{"location":"clients/CLI/commands/VPN/#connect","title":"Connect","text":"<pre><code>sudo sentinelcli connect \\\n--home \"${HOME}/.sentinelcli\" \\\n--keyring-backend os \\\n--chain-id sentinelhub-2 \\\n--node https://rpc.sentinel.co:443 \\\n--yes \\\n--from &lt;KEY_NAME&gt; &lt;SUBSCRIPTION_ID&gt; &lt;NODE_ADDRESS&gt;\n</code></pre>"},{"location":"clients/CLI/commands/VPN/#disconnect","title":"Disconnect","text":"<pre><code>sudo sentinelcli disconnect \\\n--home \"${HOME}/.sentinelcli\"\n</code></pre>"},{"location":"clients/CLI/commands/keys/","title":"Keys","text":""},{"location":"clients/CLI/commands/keys/#add-a-key","title":"Add a key","text":"<pre><code>sentinelcli keys add \\\n--home \"${HOME}/.sentinelcli\" \\\n--keyring-backend os \\\n&lt;KEY_NAME&gt;\n</code></pre> <p>Pass flag <code>--recover</code> to recover the key with Mnemonic</p>"},{"location":"clients/CLI/commands/keys/#list-keys","title":"List keys","text":"<pre><code>sentinelcli keys list \\\n--home \"${HOME}/.sentinelcli\" \\\n--keyring-backend os\n</code></pre>"},{"location":"clients/CLI/commands/queries/","title":"Queries","text":""},{"location":"clients/CLI/commands/queries/#query-nodes","title":"Query nodes","text":"<pre><code>sentinelcli query nodes \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n--page 1\n</code></pre> <p>Additionally, you can pass flags <code>--provider &lt;PROVIDER_ADDRESS&gt;</code> and <code>--status &lt;STATUS&gt;</code></p>"},{"location":"clients/CLI/commands/queries/#query-a-node","title":"Query a node","text":"<pre><code>sentinelcli query node \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n&lt;NODE_ADDRESS&gt;\n</code></pre>"},{"location":"clients/CLI/commands/queries/#query-subscriptions","title":"Query subscriptions","text":"<pre><code>sentinelcli query subscriptions \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n--page 1\n</code></pre> <p>Additionally, you can pass flags <code>--address &lt;ACCOUNT_ADDRESS&gt;</code> and <code>--status &lt;STATUS&gt;</code></p>"},{"location":"clients/CLI/commands/queries/#query-a-subscription","title":"Query a subscription","text":"<pre><code>sentinelcli query subscription \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n&lt;SUBSCRIPTION_ID&gt;\n</code></pre>"},{"location":"clients/CLI/commands/queries/#query-quotas","title":"Query quotas","text":"<pre><code>sentinelcli query quotas \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n--page 1 &lt;SUBSCRIPTION_ID&gt;\n</code></pre>"},{"location":"clients/CLI/commands/queries/#query-a-quota","title":"Query a quota","text":"<pre><code>sentinelcli query quota \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n&lt;SUBSCRIPTION_ID&gt; &lt;ACCOUNT_ADDRESS&gt;\n</code></pre>"},{"location":"clients/CLI/commands/queries/#query-sessions","title":"Query sessions","text":"<pre><code>sentinelcli query sessions \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n--page 1\n</code></pre> <p>Additionally, you can pass flags <code>--address &lt;ACCOUNT_ADDRESS&gt;</code>, <code>--subscription &lt;SUBSCRIPTION_ID&gt;</code> and <code>--status &lt;STATUS&gt;</code></p>"},{"location":"clients/CLI/commands/queries/#query-a-session","title":"Query a session","text":"<pre><code>sentinelcli query session \\\n--home \"${HOME}/.sentinelcli\" \\\n--node https://rpc.sentinel.co:443 \\\n&lt;SESSION_ID&gt;\n</code></pre>"},{"location":"clients/CLI/commands/transactions/","title":"Transactions","text":""},{"location":"clients/CLI/commands/transactions/#subscribe-to-a-node","title":"Subscribe to a node","text":"<pre><code>sentinelcli tx subscription subscribe-to-node \\\n--home \"${HOME}/.sentinelcli\" \\\n--keyring-backend os \\\n--chain-id sentinelhub-2 \\\n--node https://rpc.sentinel.co:443 \\\n--from &lt;KEY_NAME&gt; &lt;NODE_ADDRESS&gt; &lt;DEPOSIT&gt;\n</code></pre>"},{"location":"dVPN-node/API/","title":"API","text":""},{"location":"dVPN-node/setup/","title":"Setup","text":"<p>Minimum machine configuration required</p> Key Value CPU cores 2GHz, 1 RAM 1 Gigabyte Disk space 10 Gigabytes Disk type HDD Operating System Ubuntu 22.04"},{"location":"dVPN-node/setup/#install-docker","title":"Install Docker","text":"<ol> <li> <p>Update the list of available software packages</p> <pre><code>sudo apt-get update\n</code></pre> </li> <li> <p>Install cURL package</p> <pre><code>sudo apt-get install --yes curl\n</code></pre> </li> <li> <p>Get the official Docker installation script</p> <pre><code>curl -fsSL get.docker.com -o ${HOME}/get-docker.sh\n</code></pre> </li> <li> <p>Install Docker</p> <pre><code>sudo sh ${HOME}/get-docker.sh\n</code></pre> </li> <li> <p>Add user to Docker group</p> <pre><code>sudo usermod -aG docker $(whoami)\n</code></pre> </li> <li> <p>Reboot the machine</p> </li> </ol>"},{"location":"dVPN-node/setup/#enable-ipv6-support-for-docker-optional","title":"Enable IPv6 support for Docker (optional)","text":"<ol> <li> <p>Open the file <code>/etc/docker/daemon.json</code> with a text editor</p> </li> <li> <p>Paste the following configuration</p> <pre><code>{\n    \"ipv6\": true,\n    \"fixed-cidr-v6\": \"2001:db8:1::/64\"\n}\n</code></pre> </li> <li> <p>Save the file</p> </li> <li> <p>Restart the Docker process</p> <pre><code>sudo systemctl restart docker\n</code></pre> </li> <li> <p>Install <code>iptables-persistent</code> package</p> <pre><code>sudo apt-get install --yes iptables-persistent\n</code></pre> </li> <li> <p>Enable NAT for the private Docker subnet on the host</p> <pre><code>rule=\"POSTROUTING -s 2001:db8:1::/64 ! -o docker0 -j MASQUERADE\" &amp;&amp; \\\nsudo ip6tables -t nat -C ${rule} || \\\nsudo ip6tables -t nat -A ${rule} &amp;&amp; \\\nsudo sh -c \"ip6tables-save &gt; /etc/iptables/rules.v6\"\n</code></pre> </li> </ol>"},{"location":"dVPN-node/setup/#preparing-the-docker-image","title":"Preparing the Docker image","text":""},{"location":"dVPN-node/setup/#prebuilt","title":"Prebuilt","text":"<ol> <li> <p>Pull the image</p> <pre><code>docker pull ghcr.io/sentinel-official/dvpn-node:latest\n</code></pre> </li> <li> <p>Tag the image</p> <pre><code>docker tag ghcr.io/sentinel-official/dvpn-node:latest sentinel-dvpn-node\n</code></pre> </li> </ol>"},{"location":"dVPN-node/setup/#from-source","title":"From source","text":"<ol> <li> <p>Install Git package</p> <pre><code>sudo apt-get install --yes git\n</code></pre> </li> <li> <p>Clone the GitHub repository</p> <pre><code>git clone https://github.com/sentinel-official/dvpn-node.git \\\n${HOME}/dvpn-node/\n</code></pre> </li> <li> <p>Checkout to the latest tag</p> <pre><code>cd ${HOME}/dvpn-node/ &amp;&amp; \\\ncommit=$(git rev-list --tags --max-count=1) &amp;&amp; \\\ngit checkout $(git describe --tags ${commit})\n</code></pre> </li> <li> <p>Build the image</p> <pre><code>docker build --file Dockerfile \\\n--tag sentinel-dvpn-node \\\n--force-rm \\\n--no-cache \\\n--compress .\n</code></pre> </li> </ol>"},{"location":"dVPN-node/setup/#create-a-self-signed-tls-certificate","title":"Create a self-signed TLS certificate","text":"<ol> <li> <p>Install <code>openssl</code> package</p> <pre><code>sudo apt-get install --yes openssl\n</code></pre> </li> <li> <p>Create a certificate</p> <pre><code>openssl req -new \\\n-newkey ec \\\n-pkeyopt ec_paramgen_curve:prime256v1 \\\n-x509 \\\n-sha256 \\\n-days 365 \\\n-nodes \\\n-out ${HOME}/tls.crt \\\n-keyout ${HOME}/tls.key\n</code></pre> </li> </ol>"},{"location":"dVPN-node/start/","title":"Start","text":""},{"location":"dVPN-node/start/#initialize-the-configuration","title":"Initialize the configuration","text":"<ol> <li> <p>Initialize the application configuration</p> <pre><code>docker run --rm \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\nsentinel-dvpn-node process config init\n</code></pre> </li> <li> <p>Edit the configuration file ${HOME}/.sentinelnode/config.toml if required</p> Example <pre><code>[chain]\ngas_adjustment = 1.05\ngas = 200000\ngas_prices = \"0.1udvpn\"\nid = \"sentinelhub-2\"\nrpc_address = \"https://rpc.sentinel.co:443\"\nsimulate_and_execute = true\n\n[handshake]\nenable = true\npeers = 8\n\n[keyring]\nbackend = \"file\"\nfrom = \"operator\"\n\n[node]\ninterval_set_sessions = \"2m0s\"\ninterval_update_sessions = \"1h55m0s\"\ninterval_update_status = \"55m0s\"\nlisten_on = \"0.0.0.0:8585\"\nmoniker = \"Example\"\nprice = \"1000000udvpn\"\nprovider = \"\"\nremote_url = \"https://135.24.97.86:8585\"\ntype = \"wireguard\"\n\n[qos]\nmax_peers = 250\n</code></pre> </li> <li> <p>Initialize the V2Ray configuration</p> <pre><code>docker run --rm \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\nsentinel-dvpn-node process v2ray config init\n</code></pre> </li> <li> <p>Edit the configuration file ${HOME}/.sentinelnode/v2ray.toml if required</p> Example <pre><code>listen_port = 60299\ntransport = \"grpc\"\n</code></pre> </li> <li> <p>Initialize the WireGuard configuration</p> <pre><code>docker run --rm \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\nsentinel-dvpn-node process wireguard config init\n</code></pre> </li> <li> <p>Edit the configuration file ${HOME}/.sentinelnode/wireguard.toml if required</p> Example <pre><code>device = \"wg0\"\nlisten_port = 60299\nprivate_key = \"O9efCDKZO8hS0U+4iZWkZp6fyfU3Kb3ReytcREFq3s0=\"\n</code></pre> </li> </ol>"},{"location":"dVPN-node/start/#add-an-account-key","title":"Add an account key","text":"Warning <p>Please write the Mnemonic phrase in a safe place. It is the only way to recover your account.</p> <pre><code>docker run --rm \\\n--interactive \\\n--tty \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\nsentinel-dvpn-node process keys add\n</code></pre> <p>Pass flag <code>--recover</code> to recover the key with Mnemonic</p> <p>Get the list of keys by executing the below command</p> <pre><code>docker run --rm \\\n--interactive \\\n--tty \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\nsentinel-dvpn-node process keys list\n</code></pre>"},{"location":"dVPN-node/start/#move-created-tls-keys","title":"Move created TLS keys","text":"<pre><code>mv ${HOME}/tls.crt ${HOME}/.sentinelnode/tls.crt &amp;&amp; \\\nmv ${HOME}/tls.key ${HOME}/.sentinelnode/tls.key\n\nsudo chown root:root ${HOME}/.sentinelnode/tls.crt &amp;&amp; \\\nsudo chown root:root ${HOME}/.sentinelnode/tls.key\n</code></pre>"},{"location":"dVPN-node/start/#run-the-node","title":"Run the node","text":"<p>Use software like GNU Screen or Tmux to run the process in the background</p> Note <p>The account must have some $DVPN to start the node</p> Tip <ul> <li>The <code>&lt;API_PORT&gt;</code> is the port number set for the field <code>remote_url</code> under the section <code>node</code> in the application configuration</li> <li>The <code>&lt;V2RAY_PORT&gt;</code> is the value set for the field <code>listen_port</code> in the V2Ray configuration</li> <li>The <code>&lt;WIREGUARD_PORT&gt;</code> is the value set for the field <code>listen_port</code> in the WireGaurd configuration</li> </ul>"},{"location":"dVPN-node/start/#v2ray","title":"V2Ray","text":"<pre><code>docker run --rm \\\n--interactive \\\n--tty \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n--publish &lt;API_PORT&gt;:&lt;API_PORT&gt;/tcp \\\n--publish &lt;V2RAY_PORT&gt;:&lt;V2RAY_PORT&gt;/tcp \\\nsentinel-dvpn-node process start\n</code></pre>"},{"location":"dVPN-node/start/#wireguard","title":"WireGuard","text":"<pre><code>docker run --rm \\\n--interactive \\\n--tty \\\n--volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n--volume /lib/modules:/lib/modules \\\n--cap-drop ALL \\\n--cap-add NET_ADMIN \\\n--cap-add NET_BIND_SERVICE \\\n--cap-add NET_RAW \\\n--cap-add SYS_MODULE \\\n--sysctl net.ipv4.ip_forward=1 \\\n--sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n--sysctl net.ipv6.conf.all.forwarding=1 \\\n--sysctl net.ipv6.conf.default.forwarding=1 \\\n--publish &lt;API_PORT&gt;:&lt;API_PORT&gt;/tcp \\\n--publish &lt;WIREGUARD_PORT&gt;:&lt;WIREGUARD_PORT&gt;/udp \\\nsentinel-dvpn-node process start\n</code></pre>"},{"location":"dVPN-node/troubleshoot/","title":"Troubleshoot","text":""},{"location":"dVPN-node/configuration/application/","title":"Application","text":"Tip <p>To know the public IP execute the command <code>curl --silent ifconfig.me</code></p>"},{"location":"dVPN-node/configuration/application/#chain","title":"Chain","text":"Name Description Default Gas Adjustment Gas adjustment factor 1.05 Gas Gas limit to set per transaction 200000 Gas Prices Gas prices to determine the transaction fee 0.1udvpn ID The network chain ID sentinelhub-2 RPC Address Tendermint RPC interface for the chain https://rpc.sentinel.co:443 Simulate And Execute Calculate the approx gas units before broadcast true"},{"location":"dVPN-node/configuration/application/#handshake","title":"Handshake","text":"Name Description Default Enable Enable Handshake DNS resolver.  Must be disabled incase the VPN type is <code>v2ray</code> true Peers Number of peers 8"},{"location":"dVPN-node/configuration/application/#keyring","title":"Keyring","text":"Name Description Default Backend Underlying keyring type for key management  Values: [file, test] file From Name of the key with which to sign operator"},{"location":"dVPN-node/configuration/application/#node","title":"Node","text":"Name Description Default Interval Set Sessions Time interval between each set_sessions operation 2m0s Interval Update Sessions Time interval between each update_session transactions 1h48m0s Interval Update Status Time interval between each update_status transaction 54m0s Listen On API listen-address.  Format: <code>0.0.0.0:&lt;API_PORT&gt;</code> Moniker Name of the node Price Per Gigabyte price to charge against the provided bandwidth Provider Address of the provider the node wants to operate under Remote URL Publicly accessible URL of the node.  Format: <code>https://&lt;PUBLIC_IP&gt;:&lt;API_PORT&gt;</code> Type VPN type  Values: [wireguard, v2ray] wireguard"},{"location":"dVPN-node/configuration/application/#qos","title":"QOS","text":"Name Description Default Max Peers Maximum number of concurrent peers 250"},{"location":"dVPN-node/configuration/v2ray/","title":"V2Ray","text":""},{"location":"dVPN-node/configuration/v2ray/#vmess","title":"VMess","text":"Name Description Default Listen Port Port number to accept the incoming connections Transport Transport protocol  Values: [tcp, mkcp, websocket, http, domainsocker, quic, gun, grpc] grpc"},{"location":"dVPN-node/configuration/wireguard/","title":"WireGuard","text":"Name Description Default Device Name of the Network interface wg0 Listen Port Port number to accept the incoming connections Private Key Server private key"},{"location":"sentinelhub/become-a-validator/","title":"Become a validator","text":"<ol> <li> <p>Add the operator key</p> <pre><code>KEY_NAME=\n\nsentinelhub keys add ${KEY_NAME}\n</code></pre> <p>Pass flag <code>--recover</code> to recover the key with Mnemonic</p> </li> <li> <p>Get the consensus public key</p> <pre><code>CONSENSUS_PUBLIC_KEY=$(sentinelhub tendermint show-validator)\n</code></pre> </li> <li> <p>Make the <code>create-validator</code> transaction</p> <pre><code>COMMISSION_MAX_CHANGE_RATE=0.01\nCOMMISION_MAX_RATE=0.2\nCOMMISSION_RATE=0.05\nTX_GAS=500000\n\nCHAIN_ID=\nDELEGATION_AMOUNT=\nMONIKER=\nTX_FEES=\n\nsentinelhub tx staking create-validator \\\n--broadcast-mode block \\\n--min-self-delegation 1 \\\n--amount ${DELEGATION_AMOUNT} \\\n--chain-id ${CHAIN_ID} \\\n--commission-max-change-rate ${COMMISSION_MAX_CHANGE_RATE} \\\n--commission-max-rate ${COMMISION_MAX_RATE} \\\n--commission-rate ${COMMISSION_RATE} \\\n--fees ${TX_FEES} \\\n--from ${KEY_NAME} \\\n--gas ${TX_GAS} \\\n--moniker ${MONIKER} \\\n--pubkey ${CONSENSUS_PUBLIC_KEY}\n</code></pre> </li> </ol>"},{"location":"sentinelhub/gentx/","title":"GenTx","text":"<ol> <li> <p>Fork the official networks repository into your GitHub account</p> </li> <li> <p>Clone the forked networks repository from GitHub</p> <pre><code>CHAIN_ID=\nUSERNAME=\n\nrm -rf ${HOME}/networks/ &amp;&amp; cd ${HOME}/ &amp;&amp; \\\ngit clone https://github.com/${USERNAME}/networks.git &amp;&amp; cd ${HOME}/networks/ &amp;&amp; \\\ngit checkout ${CHAIN_ID}\n</code></pre> </li> <li> <p>Initialize the blockchain configuration files</p> <pre><code>MONIKER=\n\nsentinelhub init ${MONIKER} \\\n--chain-id ${CHAIN_ID}\n</code></pre> </li> <li> <p>Unzip the Genesis to the blockchain configuration directory</p> <pre><code>unzip ${HOME}/networks/${CHAIN_ID}/genesis.zip \\\n-d ${HOME}/.sentinelhub/config/\n</code></pre> </li> <li> <p>Add an account key</p> <pre><code>KEY_NAME=\n\nsentinelhub keys add ${KEY_NAME}\n</code></pre> Tip <p>Pass flag <code>--recover</code> to recover the key</p> </li> <li> <p>Add the Genesis account</p> <pre><code>ADDRESS=$(sentinelhub keys show --address ${KEY_NAME})\nSTAKING_DENOM=\n\nsentinelhub add-genesis-account ${ADDRESS} 1000000000${STAKING_DENOM}\n</code></pre> </li> <li> <p>Create an offline Genesis transaction</p> <pre><code>sentinelhub gentx ${KEY_NAME} 100000000${STAKING_DENOM} \\\n--chain-id ${CHAIN_ID} \\\n--commission-rate 0.1 \\\n--commission-max-rate 0.2 \\\n--commission-max-change-rate 0.01\n</code></pre> </li> <li> <p>Copy the GenTx file to the folder <code>networks</code></p> <pre><code>cp ${HOME}/.sentinelhub/config/gentx/gentx-*.json ${HOME}/networks/${CHAIN_ID}/gentx/\n</code></pre> </li> <li> <p>Commit and push it to the forked GitHub repository</p> <pre><code>cd ${HOME}/networks/ &amp;&amp; \\\ngit add . &amp;&amp; \\\ngit commit -m \"Add GenTx of ${MONIKER}\" &amp;&amp; \\\ngit push origin ${CHAIN_ID}\n</code></pre> </li> <li> <p>Create a pull request from the forked repository to the official repository</p> </li> </ol>"},{"location":"sentinelhub/installation/","title":"Installation","text":""},{"location":"sentinelhub/installation/#prebuilt","title":"Prebuilt","text":"<p>TBU</p>"},{"location":"sentinelhub/installation/#from-source","title":"From source","text":""},{"location":"sentinelhub/installation/#install-the-dependencies","title":"Install the dependencies","text":"<ol> <li> <p>Add the Golang PPA repository to get the latest version of Golang</p> <pre><code>sudo add-apt-repository ppa:longsleep/golang-backports\n</code></pre> </li> <li> <p>Update the packages list</p> <pre><code>sudo apt-get update\n</code></pre> </li> <li> <p>Install Golang and other required packages</p> <pre><code>sudo apt-get install --yes curl git golang-go make unzip\n</code></pre> </li> <li> <p>Export Golang environment variables</p> <pre><code>export GOROOT=/usr/lib/go\nexport GOPATH=${HOME}/go\nexport GOBIN=${GOPATH}/bin\nexport PATH=${PATH}:${GOROOT}/bin:${GOBIN}\n</code></pre> Tip <p>Append the above lines to the file <code>${HOME}/.bashrc</code> and execute the command <code>source ${HOME}/.bashrc</code> to reflect in the current Terminal session</p> </li> </ol>"},{"location":"sentinelhub/installation/#clone-the-source-code","title":"Clone the source code","text":"<pre><code>CHAIN_ID=\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\nVERSION=$(curl -fsLS https://raw.githubusercontent.com/sentinel-official/networks/main/${CHAIN_ID}/version.txt)\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre>"},{"location":"sentinelhub/installation/#build-and-install-the-software","title":"Build and install the software","text":"<pre><code>make install\n</code></pre>"},{"location":"sentinelhub/running-a-full-node/","title":"Running a full node","text":""},{"location":"sentinelhub/running-a-full-node/#setup","title":"Setup","text":"<ol> <li> <p>Initialize the blockchain configuration files</p> <pre><code>MONIKER=\nCHAIN_ID=\n\nsentinelhub init ${MONIKER} \\\n--chain-id ${CHAIN_ID}\n</code></pre> </li> <li> <p>Download the Genesis file</p> <pre><code>curl -fsLS https://raw.githubusercontent.com/sentinel-official/networks/main/${CHAIN_ID}/genesis.zip \\\n-o ${HOME}/genesis.zip\n</code></pre> </li> <li> <p>Unzip the Genesis to the blockchain configuration directory</p> <pre><code>unzip ${HOME}/genesis.zip \\\n-d ${HOME}/.sentinelhub/config/\n</code></pre> </li> <li> <p>Set minimun gas prices</p> <ul> <li>Open the file <code>${HOME}/.sentinelhub/config/app.toml</code></li> <li>Go to the line which contains the field <code>minimum-gas-prices = \"\"</code></li> <li> <p>Insert the output of the below command</p> <pre><code>curl -fsLS https://raw.githubusercontent.com/sentinel-official/networks/main/${CHAIN_ID}/minimum-gas-prices.txt\n</code></pre> </li> <li> <p>Save the file</p> </li> </ul> </li> <li> <p>Set peers and seeds</p> <ul> <li>Open the file <code>${HOME}/.sentinelhub/config/config.toml</code></li> <li>Go to the line which contains the field <code>persistent_peers = \"\"</code></li> <li> <p>Insert the output of the below command</p> <pre><code>curl -fsLS https://raw.githubusercontent.com/sentinel-official/networks/main/${CHAIN_ID}/persistent_peers.txt\n</code></pre> </li> <li> <p>Go to the line which contains the field <code>seeds = \"\"</code></p> </li> <li> <p>Insert the output of the below command</p> <pre><code>curl -fsLS https://raw.githubusercontent.com/sentinel-official/networks/main/${CHAIN_ID}/seeds.txt\n</code></pre> </li> <li> <p>Save the file</p> </li> </ul> </li> </ol>"},{"location":"sentinelhub/running-a-full-node/#start","title":"Start","text":"<ol> <li>Start the Sentinel Hub daemon</li> </ol>"},{"location":"sentinelhub/modules/deposit/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/deposit/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/deposit/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/deposit/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/deposit/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/deposit/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/deposit/types/","title":"Types","text":""},{"location":"sentinelhub/modules/node/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/node/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/node/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/node/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/node/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/node/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/node/types/","title":"Types","text":""},{"location":"sentinelhub/modules/plan/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/plan/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/plan/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/plan/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/plan/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/plan/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/plan/types/","title":"Types","text":""},{"location":"sentinelhub/modules/provider/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/provider/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/provider/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/provider/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/provider/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/provider/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/provider/types/","title":"Types","text":""},{"location":"sentinelhub/modules/session/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/session/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/session/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/session/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/session/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/session/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/session/types/","title":"Types","text":""},{"location":"sentinelhub/modules/subscription/ABCI/","title":"ABCI","text":""},{"location":"sentinelhub/modules/subscription/commands/","title":"Commands","text":""},{"location":"sentinelhub/modules/subscription/introduction/","title":"Introduction","text":""},{"location":"sentinelhub/modules/subscription/keeper/","title":"Keeper","text":""},{"location":"sentinelhub/modules/subscription/messages/","title":"Messages","text":""},{"location":"sentinelhub/modules/subscription/queries/","title":"Queries","text":""},{"location":"sentinelhub/modules/subscription/types/","title":"Types","text":""},{"location":"sentinelhub/upgrades/sentinelhub-2/","title":"SentinelHub - 2","text":"<p>Hardfork upgrade from blockchain <code>sentinelhub-1</code> to <code>sentinelhub-2</code></p>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#set-halt-block-height","title":"Set halt block height","text":"<ol> <li> <p>Open the file <code>${HOME}/.sentinelhubd/config/app.toml</code> with a text editor</p> </li> <li> <p>Set the value <code>halt-height = 901800</code></p> </li> <li> <p>Save and close the file</p> </li> <li> <p>Restart the Sentinel Hub daemon</p> </li> <li> <p>Wait until the blockchain halt</p> </li> </ol> Warning <p>Follow the next steps only after the blockchain halt!</p>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#export-the-state","title":"Export the state","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhubd version --long\n</code></pre> Note <p>Commit hash must be <code>1aed4ffff291f6cec7e3768806bebef4e9f4442c</code></p> </li> <li> <p>Export the Blockchain state</p> <pre><code>HALT_HEIGHT=901800\n\nsentinelhubd export --height ${HALT_HEIGHT} &gt; ${HOME}/${HALT_HEIGHT}.json\n</code></pre> </li> <li> <p>Verify the SHA256 of the JSON file</p> <pre><code>jq -cSM '' ${HOME}/${HALT_HEIGHT}.json | sha256sum\n</code></pre> Note <p>Exported Genesis file hash must be <code>e519a0dbb7e7e177c72965c0f7cd8507a537548f56e696c44bd01360424137ad</code></p> </li> </ol>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#install-the-new-software","title":"Install the new software","text":"<ol> <li> <p>Clone the source code</p> <pre><code>VERSION=v0.6.2\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre> </li> <li> <p>Build and install the software</p> <pre><code>make install\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#migrate-the-state","title":"Migrate the state","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhub version --long\n</code></pre> Note <p>Commit hash must be <code>4cd6b2bb3609b6ca86414d50216568e90b847c28</code></p> </li> <li> <p>Migrate the exported Blockchain state</p> <pre><code>CHAIN_ID=sentinelhub-2\nGENESIS_TIME=2021-05-29T14:30:00Z\nINITIAL_HEIGHT=901801\n\nsentinelhub migrate \\\n--chain-id=${CHAIN_ID} \\\n--genesis-time=${GENESIS_TIME} \\\n--initial-height=${INITIAL_HEIGHT} \\\n${HALT_HEIGHT}.json &gt; ${HOME}/genesis.json\n</code></pre> </li> <li> <p>Verify the SHA256 of the JSON file</p> <pre><code>jq -cSM '' ${HOME}/genesis.json | sha256sum\n</code></pre> Note <p>Migreated Genesis file hash must be <code>1dbcd7d58845b4b0696d31daafa2096bb3d729e51f8e8fa17e9e73eda1376382</code></p> </li> </ol>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#setup","title":"Setup","text":"<ol> <li> <p>Initialize the chain configuration files</p> <pre><code>MONIKER=\n\nsentinelhub init ${MONIKER} \\\n--chain-id ${CHAIN_ID}\n</code></pre> </li> <li> <p>Copy validator node and consensus private keys</p> <pre><code>FROM_DIR=${HOME}/.sentinelhubd/config\nTO_DIR=${HOME}/.sentinelhub/config\n\ncp ${FROM_DIR}/node_key.json ${TO_DIR}/node_key.json\ncp ${FROM_DIR}/priv_validator_key.json ${TO_DIR}/priv_validator_key.json\n</code></pre> </li> <li> <p>Copy migrated Genesis file</p> <pre><code>cp ${HOME}/genesis.json ${TO_DIR}/genesis.json\n</code></pre> </li> <li> <p>Set minimun gas prices</p> <ul> <li>Open the file <code>${HOME}/.sentinelhub/config/app.toml</code></li> <li>Go to the line which contains the field <code>minimum-gas-prices = \"\"</code></li> <li>Change the value to <code>minimum-gas-prices = \"0.1udvpn\"</code></li> <li>Save the file</li> </ul> </li> <li> <p>Set peers and seeds</p> <ul> <li>Open the file <code>${HOME}/.sentinelhub/config/config.toml</code></li> <li>Go to the line which contains the field <code>persistent_peers = \"\"</code></li> <li> <p>Insert the below node addresses</p> <pre><code>05fe2a7847fd27345250915fd06752c424f40651@85.222.234.135:26656,387027e3b1180d3a619cbbf3462704a490785963@54.176.90.228:26656,63bd9cfce0f0d274aad5b166dd06d829021aec43@121.78.247.243:56656,855807cc6a919c22ec943050ebb5c80b23724ed0@3.239.11.246:26656,8caefbf8f4318ecc93f2c901cf11470e4a16c818@161.97.135.122:26656,9174af5f16f74660cccf49f893d243949af45f7f@54.177.29.46:26656,9fa528bd2b9e7c80724a1d8a4e1a2a8a83e7d123@142.93.72.221:26656,a77f6a094578dad899e2f40e0626b4c6d4705311@3.36.165.232:26656,bd45a11390d16d128a9eeea3935b53d7a1a3c120@15.236.127.69:26656,cdb8dd7628460a546ce1594ca0bc0c20366514cf@34.72.64.178:26656,d1efceccb04ded9a604e5235f76da86872157d68@161.97.149.223:26656,e00b23444cc8dbb353d5faa765ab36cfc0116b57@83.60.98.134:28685,e5ee89bd4fc371c6a0e66d2b8daefd891b6b87b5@157.90.117.58:26656,f7ceb735606f90df7eb6cd987641876955b6e325@46.4.55.150:36656\n</code></pre> </li> <li> <p>Go to the line which contains the field <code>seeds = \"\"</code></p> </li> <li> <p>Insert the below node addresses</p> <pre><code>c3aa0ff9b3eb17be1b0a26d7c8a5683e8e528e1a@159.89.192.105:26656\n</code></pre> </li> <li> <p>Save the file</p> </li> </ul> </li> </ol>"},{"location":"sentinelhub/upgrades/sentinelhub-2/#start","title":"Start","text":"<ol> <li>Start the Sentinel Hub daemon</li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-1/","title":"Software upgrade - 1","text":"Warning <p>At block height <code>1272000</code> the Blockchain will stop producing the blocks. Follow the next steps only after the blockchain halt!</p>"},{"location":"sentinelhub/upgrades/software-upgrade-1/#stop-the-node","title":"Stop the node","text":"<ol> <li> <p>Check the latest block height. It must match with the upgrade height</p> <pre><code>curl -fsLS http://127.0.0.1:26657/status | jq -r '.result.sync_info.latest_block_height'\n</code></pre> </li> <li> <p>Stop the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-1/#install-the-new-version","title":"Install the new version","text":"<ol> <li> <p>Clone the source code</p> <pre><code>VERSION=v0.7.0\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre> </li> <li> <p>Build and install the software</p> <pre><code>make install\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-1/#start-the-node","title":"Start the node","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhub version --long\n</code></pre> Note <p>Commit hash must be <code>600fd5f8b71f60332656b826df2e3fa3bc6c5e5e</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-1/#in-case-the-upgrade-fails","title":"In case the upgrade fails","text":"Warning <p>Follow the next steps in case the upgrade fails!</p> <ol> <li> <p>Install the Sentinel Hub software <code>v0.6.3</code></p> </li> <li> <p>Verfiy the software version commit is <code>9d0e491ad9a6057e55556e01c142ae52fed7edbb</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process with flag <code>unsafe-skip-upgrades</code></p> <pre><code>sentinelhub start --unsafe-skip-upgrades 1272000\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-2/","title":"Software upgrade - 2","text":"Warning <p>At block height <code>2586000</code> the Blockchain will stop producing the blocks. Follow the next steps only after the blockchain halt!</p>"},{"location":"sentinelhub/upgrades/software-upgrade-2/#stop-the-node","title":"Stop the node","text":"<ol> <li> <p>Check the latest block height. It must match with the upgrade height</p> <pre><code>curl -fsLS http://127.0.0.1:26657/status | jq -r '.result.sync_info.latest_block_height'\n</code></pre> </li> <li> <p>Stop the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-2/#install-the-new-version","title":"Install the new version","text":"<ol> <li> <p>Clone the source code</p> <pre><code>VERSION=v0.8.3\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre> </li> <li> <p>Build and install the software</p> <pre><code>make install\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-2/#start-the-node","title":"Start the node","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhub version --long\n</code></pre> Note <p>Commit hash must be <code>fa7cd3c7d5f427308d8a837a18b951482ce5c9e2</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-2/#in-case-the-upgrade-fails","title":"In case the upgrade fails","text":"Warning <p>Follow the next steps in case the upgrade fails!</p> <ol> <li> <p>Install the Sentinel Hub software <code>v0.7.0</code></p> </li> <li> <p>Verfiy the software version commit is <code>600fd5f8b71f60332656b826df2e3fa3bc6c5e5e</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process with flag <code>unsafe-skip-upgrades</code></p> <pre><code>sentinelhub start --unsafe-skip-upgrades 2586000\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-3/","title":"Software upgrade - 3","text":"Warning <p>At block height <code>5125000</code> the Blockchain will stop producing the blocks. Follow the next steps only after the blockchain halt!</p>"},{"location":"sentinelhub/upgrades/software-upgrade-3/#stop-the-node","title":"Stop the node","text":"<ol> <li> <p>Check the latest block height. It must match with the upgrade height</p> <pre><code>curl -fsLS http://127.0.0.1:26657/status | jq -r '.result.sync_info.latest_block_height'\n</code></pre> </li> <li> <p>Stop the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-3/#install-the-new-version","title":"Install the new version","text":"<ol> <li> <p>Clone the source code</p> <pre><code>VERSION=v0.9.2\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre> </li> <li> <p>Build and install the software</p> <pre><code>make install\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-3/#start-the-node","title":"Start the node","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhub version --long\n</code></pre> Note <p>Commit hash must be <code>d04a4004600c9d19e326f61a13fcef853616e3ed</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-3/#in-case-the-upgrade-fails","title":"In case the upgrade fails","text":"Warning <p>Follow the next steps in case the upgrade fails!</p> <ol> <li> <p>Install the Sentinel Hub software <code>v0.8.3</code></p> </li> <li> <p>Verfiy the software version commit is <code>fa7cd3c7d5f427308d8a837a18b951482ce5c9e2</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process with flag <code>unsafe-skip-upgrades</code></p> <pre><code>sentinelhub start --unsafe-skip-upgrades 5125000\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-4/","title":"Software upgrade - 4","text":"Warning <p>At block height <code>9348475</code> the Blockchain will stop producing the blocks. Follow the next steps only after the blockchain halt!</p>"},{"location":"sentinelhub/upgrades/software-upgrade-4/#stop-the-node","title":"Stop the node","text":"<ol> <li> <p>Check the latest block height. It must match with the upgrade height</p> <pre><code>curl -fsLS http://127.0.0.1:26657/status | jq -r '.result.sync_info.latest_block_height'\n</code></pre> </li> <li> <p>Stop the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-4/#install-the-new-version","title":"Install the new version","text":"<ol> <li> <p>Make sure you are using Go verion 1.19+</p> <pre><code>go version\n</code></pre> </li> <li> <p>Clone the source code</p> <pre><code>VERSION=v0.10.1\nBASE_DIRECTORY=${GOPATH}/src/github.com/sentinel-official\n\nrm -rf ${BASE_DIRECTORY}/hub/ &amp;&amp; mkdir -p ${BASE_DIRECTORY} &amp;&amp; cd ${BASE_DIRECTORY}/ &amp;&amp; \\\ngit clone https://github.com/sentinel-official/hub.git &amp;&amp; cd ${BASE_DIRECTORY}/hub/ &amp;&amp; \\\ngit checkout ${VERSION}\n</code></pre> </li> <li> <p>Build and install the software</p> <pre><code>rm -rf ./vendor &amp;&amp; \\\nmake install\n</code></pre> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-4/#start-the-node","title":"Start the node","text":"<ol> <li> <p>Verify the software version</p> <pre><code>sentinelhub version --long\n</code></pre> Note <p>Commit hash must be <code>bbe6fab51c81863551a69aeb4977ec4c19fcd60a</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process</p> </li> </ol>"},{"location":"sentinelhub/upgrades/software-upgrade-4/#in-case-the-upgrade-fails","title":"In case the upgrade fails","text":"Warning <p>Follow the next steps in case the upgrade fails!</p> <ol> <li> <p>Install the Sentinel Hub software <code>v0.9.3</code></p> </li> <li> <p>Verfiy the software version commit is <code>810200fe2dfd5e5b29a7ac8f95c7fa225c131800</code></p> </li> <li> <p>Start the <code>sentinelhub</code> process with flag <code>unsafe-skip-upgrades</code></p> <pre><code>sentinelhub start --unsafe-skip-upgrades 9348475\n</code></pre> </li> </ol>"}]}