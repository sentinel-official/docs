components:
  schemas:
    cosmos.auth.v1beta1.Params:
      description: Params defines the parameters for the auth module.
      properties:
        max_memo_characters:
          format: uint64
          type: string
        sig_verify_cost_ed25519:
          format: uint64
          type: string
        sig_verify_cost_secp256k1:
          format: uint64
          type: string
        tx_sig_limit:
          format: uint64
          type: string
        tx_size_cost_per_byte:
          format: uint64
          type: string
      type: object
    cosmos.auth.v1beta1.QueryAccountResponse:
      description: QueryAccountResponse is the response type for the Query/Account
        RPC method.
      properties:
        account:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
      type: object
    cosmos.auth.v1beta1.QueryAccountsResponse:
      description: 'QueryAccountsResponse is the response type for the Query/Accounts
        RPC method.


        Since: cosmos-sdk 0.43'
      properties:
        accounts:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          title: accounts are the existing accounts
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.auth.v1beta1.QueryModuleAccountsResponse:
      description: QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts
        RPC method.
      properties:
        accounts:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
      type: object
    cosmos.auth.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            max_memo_characters:
              format: uint64
              type: string
            sig_verify_cost_ed25519:
              format: uint64
              type: string
            sig_verify_cost_secp256k1:
              format: uint64
              type: string
            tx_sig_limit:
              format: uint64
              type: string
            tx_size_cost_per_byte:
              format: uint64
              type: string
          type: object
      type: object
    cosmos.authz.v1beta1.Grant:
      description: 'Grant gives permissions to execute

        the provide method with expiration time.'
      properties:
        authorization:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        expiration:
          format: date-time
          type: string
      type: object
    cosmos.authz.v1beta1.GrantAuthorization:
      properties:
        authorization:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        expiration:
          format: date-time
          type: string
        grantee:
          type: string
        granter:
          type: string
      title: 'GrantAuthorization extends a grant with both the addresses of the grantee
        and granter.

        It is used in genesis.proto and query.proto'
      type: object
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
      description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants
        RPC method.
      properties:
        grants:
          description: grants is a list of grants granted to the grantee.
          items:
            properties:
              authorization:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                type: string
              grantee:
                type: string
              granter:
                type: string
            title: 'GrantAuthorization extends a grant with both the addresses of
              the grantee and granter.

              It is used in genesis.proto and query.proto'
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
      description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants
        RPC method.
      properties:
        grants:
          description: grants is a list of grants granted by the granter.
          items:
            properties:
              authorization:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                type: string
              grantee:
                type: string
              granter:
                type: string
            title: 'GrantAuthorization extends a grant with both the addresses of
              the grantee and granter.

              It is used in genesis.proto and query.proto'
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.authz.v1beta1.QueryGrantsResponse:
      description: QueryGrantsResponse is the response type for the Query/Authorizations
        RPC method.
      properties:
        grants:
          description: authorizations is a list of grants granted for grantee by granter.
          items:
            description: 'Grant gives permissions to execute

              the provide method with expiration time.'
            properties:
              authorization:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              expiration:
                format: date-time
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.DenomUnit:
      description: 'DenomUnit represents a struct that describes a given

        denomination unit of the basic token.'
      properties:
        aliases:
          items:
            type: string
          title: aliases is a list of string aliases for the given denom
          type: array
        denom:
          description: denom represents the string name of the given denom unit (e.g
            uatom).
          type: string
        exponent:
          description: 'exponent represents power of 10 exponent that one must

            raise the base_denom to in order to equal the given DenomUnit''s denom

            1 denom = 1^exponent base_denom

            (e.g. with a base_denom of uatom, one can create a DenomUnit of ''atom''
            with

            exponent = 6, thus: 1 atom = 10^6 uatom).'
          format: int64
          type: integer
      type: object
    cosmos.bank.v1beta1.Metadata:
      description: 'Metadata represents a struct that describes

        a basic token.'
      properties:
        base:
          description: base represents the base denom (should be the DenomUnit with
            exponent = 0).
          type: string
        denom_units:
          items:
            description: 'DenomUnit represents a struct that describes a given

              denomination unit of the basic token.'
            properties:
              aliases:
                items:
                  type: string
                title: aliases is a list of string aliases for the given denom
                type: array
              denom:
                description: denom represents the string name of the given denom unit
                  (e.g uatom).
                type: string
              exponent:
                description: 'exponent represents power of 10 exponent that one must

                  raise the base_denom to in order to equal the given DenomUnit''s
                  denom

                  1 denom = 1^exponent base_denom

                  (e.g. with a base_denom of uatom, one can create a DenomUnit of
                  ''atom'' with

                  exponent = 6, thus: 1 atom = 10^6 uatom).'
                format: int64
                type: integer
            type: object
          title: denom_units represents the list of DenomUnit's for a given coin
          type: array
        description:
          type: string
        display:
          description: 'display indicates the suggested denom that should be

            displayed in clients.'
          type: string
        name:
          description: 'Since: cosmos-sdk 0.43'
          title: 'name defines the name of the token (eg: Cosmos Atom)'
          type: string
        symbol:
          description: 'symbol is the token symbol usually shown on exchanges (eg:
            ATOM). This can

            be the same as the display.


            Since: cosmos-sdk 0.43'
          type: string
      type: object
    cosmos.bank.v1beta1.Params:
      description: Params defines the parameters for the bank module.
      properties:
        default_send_enabled:
          type: boolean
        send_enabled:
          items:
            description: 'SendEnabled maps coin denom to a send_enabled status (whether
              a denom is

              sendable).'
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            type: object
          type: array
      type: object
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      description: 'QueryAllBalancesResponse is the response type for the Query/AllBalances
        RPC

        method.'
      properties:
        balances:
          description: balances is the balances of all the coins.
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QueryBalanceResponse:
      description: QueryBalanceResponse is the response type for the Query/Balance
        RPC method.
      properties:
        balance:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QueryBaseDenomResponse:
      description: QueryBaseDenomResponse defines the response type for the BaseDenom
        gRPC method.
      properties:
        base_denom:
          type: string
      type: object
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      description: 'QueryDenomMetadataResponse is the response type for the Query/DenomMetadata
        RPC

        method.'
      properties:
        metadata:
          description: 'Metadata represents a struct that describes

            a basic token.'
          properties:
            base:
              description: base represents the base denom (should be the DenomUnit
                with exponent = 0).
              type: string
            denom_units:
              items:
                description: 'DenomUnit represents a struct that describes a given

                  denomination unit of the basic token.'
                properties:
                  aliases:
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                    type: array
                  denom:
                    description: denom represents the string name of the given denom
                      unit (e.g uatom).
                    type: string
                  exponent:
                    description: 'exponent represents power of 10 exponent that one
                      must

                      raise the base_denom to in order to equal the given DenomUnit''s
                      denom

                      1 denom = 1^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a DenomUnit
                      of ''atom'' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).'
                    format: int64
                    type: integer
                type: object
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
            description:
              type: string
            display:
              description: 'display indicates the suggested denom that should be

                displayed in clients.'
              type: string
            name:
              description: 'Since: cosmos-sdk 0.43'
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
            symbol:
              description: 'symbol is the token symbol usually shown on exchanges
                (eg: ATOM). This can

                be the same as the display.


                Since: cosmos-sdk 0.43'
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      description: 'QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata
        RPC

        method.'
      properties:
        metadatas:
          description: metadata provides the client information for all the registered
            tokens.
          items:
            description: 'Metadata represents a struct that describes

              a basic token.'
            properties:
              base:
                description: base represents the base denom (should be the DenomUnit
                  with exponent = 0).
                type: string
              denom_units:
                items:
                  description: 'DenomUnit represents a struct that describes a given

                    denomination unit of the basic token.'
                  properties:
                    aliases:
                      items:
                        type: string
                      title: aliases is a list of string aliases for the given denom
                      type: array
                    denom:
                      description: denom represents the string name of the given denom
                        unit (e.g uatom).
                      type: string
                    exponent:
                      description: 'exponent represents power of 10 exponent that
                        one must

                        raise the base_denom to in order to equal the given DenomUnit''s
                        denom

                        1 denom = 1^exponent base_denom

                        (e.g. with a base_denom of uatom, one can create a DenomUnit
                        of ''atom'' with

                        exponent = 6, thus: 1 atom = 10^6 uatom).'
                      format: int64
                      type: integer
                  type: object
                title: denom_units represents the list of DenomUnit's for a given
                  coin
                type: array
              description:
                type: string
              display:
                description: 'display indicates the suggested denom that should be

                  displayed in clients.'
                type: string
              name:
                description: 'Since: cosmos-sdk 0.43'
                title: 'name defines the name of the token (eg: Cosmos Atom)'
                type: string
              symbol:
                description: 'symbol is the token symbol usually shown on exchanges
                  (eg: ATOM). This can

                  be the same as the display.


                  Since: cosmos-sdk 0.43'
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse defines the response type for querying x/bank
        parameters.
      properties:
        params:
          description: Params defines the parameters for the bank module.
          properties:
            default_send_enabled:
              type: boolean
            send_enabled:
              items:
                description: 'SendEnabled maps coin denom to a send_enabled status
                  (whether a denom is

                  sendable).'
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                type: object
              type: array
          type: object
      type: object
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
        RPC method.
      properties:
        amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QuerySupplyOfWithoutOffsetResponse:
      description: QuerySupplyOfWithoutOffsetResponse is the response type for the
        Query/SupplyOfWithoutOffset RPC method.
      properties:
        amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      properties:
        pagination:
          description: 'pagination defines the pagination in the response.


            Since: cosmos-sdk 0.43'
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        supply:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: supply is the supply of the coins
          type: array
      title: 'QueryTotalSupplyResponse is the response type for the Query/TotalSupply
        RPC

        method'
      type: object
    cosmos.bank.v1beta1.QueryTotalSupplyWithoutOffsetResponse:
      properties:
        pagination:
          description: 'pagination defines the pagination in the response.


            Since: cosmos-sdk 0.43'
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        supply:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: supply is the supply of the coins
          type: array
      title: 'QueryTotalSupplyWithoutOffsetResponse is the response type for the Query/TotalSupplyWithoutOffset
        RPC

        method'
      type: object
    cosmos.bank.v1beta1.SendEnabled:
      description: 'SendEnabled maps coin denom to a send_enabled status (whether
        a denom is

        sendable).'
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      type: object
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI
        message log.
      properties:
        events:
          description: 'Events contains a slice of Event objects that were emitted
            during some

            execution.'
          items:
            description: 'StringEvent defines en Event object wrapper where all the
              attributes

              contain key/value pairs that are strings instead of raw bytes.'
            properties:
              attributes:
                items:
                  description: 'Attribute defines an attribute wrapper where the key
                    and value are

                    strings instead of raw bytes.'
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        log:
          type: string
        msg_index:
          format: int64
          type: integer
      type: object
    cosmos.base.abci.v1beta1.Attribute:
      description: 'Attribute defines an attribute wrapper where the key and value
        are

        strings instead of raw bytes.'
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    cosmos.base.abci.v1beta1.GasInfo:
      description: GasInfo defines tx execution gas context.
      properties:
        gas_used:
          description: GasUsed is the amount of gas actually consumed.
          format: uint64
          type: string
        gas_wanted:
          description: GasWanted is the maximum units of work we allow this tx to
            perform.
          format: uint64
          type: string
      type: object
    cosmos.base.abci.v1beta1.Result:
      description: Result is the union of ResponseFormat and ResponseCheckTx.
      properties:
        data:
          description: 'Data is any data returned from message or handler execution.
            It MUST be

            length prefixed in order to separate data from multiple message executions.'
          format: byte
          type: string
        events:
          description: 'Events contains a slice of Event objects that were emitted
            during message

            or handler execution.'
          items:
            description: 'Event allows application developers to attach additional
              information to

              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

              Later, transactions may be queried using these events.'
            properties:
              attributes:
                items:
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
                  properties:
                    index:
                      type: boolean
                    key:
                      format: byte
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        log:
          description: Log contains the log information from message or handler execution.
          type: string
      type: object
    cosmos.base.abci.v1beta1.StringEvent:
      description: 'StringEvent defines en Event object wrapper where all the attributes

        contain key/value pairs that are strings instead of raw bytes.'
      properties:
        attributes:
          items:
            description: 'Attribute defines an attribute wrapper where the key and
              value are

              strings instead of raw bytes.'
            properties:
              key:
                type: string
              value:
                type: string
            type: object
          type: array
        type:
          type: string
      type: object
    cosmos.base.abci.v1beta1.TxResponse:
      description: 'TxResponse defines a structure containing relevant tx data and
        metadata. The

        tags are stringified and the log is JSON decoded.'
      properties:
        code:
          description: Response code.
          format: int64
          type: integer
        codespace:
          title: Namespace for the Code
          type: string
        data:
          description: Result bytes, if any.
          type: string
        events:
          description: 'Events defines all the events emitted by processing a transaction.
            Note,

            these events include those emitted by processing all the messages and
            those

            emitted from the ante handler. Whereas Logs contains the events, with

            additional metadata, emitted only by processing the messages.


            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
          items:
            description: 'Event allows application developers to attach additional
              information to

              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

              Later, transactions may be queried using these events.'
            properties:
              attributes:
                items:
                  description: EventAttribute is a single key-value pair, associated
                    with an event.
                  properties:
                    index:
                      type: boolean
                    key:
                      format: byte
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              type:
                type: string
            type: object
          type: array
        gas_used:
          description: Amount of gas consumed by transaction.
          format: int64
          type: string
        gas_wanted:
          description: Amount of gas requested for transaction.
          format: int64
          type: string
        height:
          format: int64
          title: The block height
          type: string
        info:
          description: Additional information. May be non-deterministic.
          type: string
        logs:
          description: The output of the application's logger (typed). May be non-deterministic.
          items:
            description: ABCIMessageLog defines a structure containing an indexed
              tx ABCI message log.
            properties:
              events:
                description: 'Events contains a slice of Event objects that were emitted
                  during some

                  execution.'
                items:
                  description: 'StringEvent defines en Event object wrapper where
                    all the attributes

                    contain key/value pairs that are strings instead of raw bytes.'
                  properties:
                    attributes:
                      items:
                        description: 'Attribute defines an attribute wrapper where
                          the key and value are

                          strings instead of raw bytes.'
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                type: array
              log:
                type: string
              msg_index:
                format: int64
                type: integer
            type: object
          type: array
        raw_log:
          description: 'The output of the application''s logger (raw string). May
            be

            non-deterministic.'
          type: string
        timestamp:
          description: 'Time of the previous block. For heights > 1, it''s the weighted
            median of

            the timestamps of the valid votes in the block.LastCommit. For height
            == 1,

            it''s genesis time.'
          type: string
        tx:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        txhash:
          description: The transaction hash.
          type: string
      type: object
    cosmos.base.query.v1beta1.PageRequest:
      description: "message SomeRequest {\n         Foo some_parameter = 1;\n    \
        \     PageRequest pagination = 2;\n }"
      properties:
        count_total:
          description: 'count_total is set to true  to indicate that the result set
            should include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when
            key

            is set.'
          type: boolean
        key:
          description: 'key is a value returned in PageResponse.next_key to begin

            querying the next page most efficiently. Only one of offset or key

            should be set.'
          format: byte
          type: string
        limit:
          description: 'limit is the total number of results to be returned in the
            result page.

            If left empty it will default to a value to be set by each app.'
          format: uint64
          type: string
        offset:
          description: 'offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.'
          format: uint64
          type: string
        reverse:
          description: 'reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43'
          type: boolean
      title: 'PageRequest is to be embedded in gRPC request messages for efficient

        pagination. Ex:'
      type: object
    cosmos.base.query.v1beta1.PageResponse:
      description: "PageResponse is to be embedded in gRPC response messages where\
        \ the\ncorresponding request message has used PageRequest.\n\n message SomeResponse\
        \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n\
        \ }"
      properties:
        next_key:
          format: byte
          title: 'next_key is the key to be passed to PageRequest.key to

            query the next page most efficiently'
          type: string
        total:
          format: uint64
          title: 'total is total number of results available if PageRequest.count_total

            was set, its value is undefined otherwise'
          type: string
      type: object
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      description: GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight
        RPC method.
      properties:
        block:
          properties:
            data:
              properties:
                txs:
                  description: 'Txs that will be applied by state @ block.Height+1.

                    NOTE: not all txs here are valid.  We''re just agreeing on the
                    order first.

                    This means that block.AppHash does not include these txs.'
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: 'Vote represents a prevote, precommit, or
                              commit vote from validators for

                              consensus.'
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: "SignedMsgType is a type of signed message\
                                  \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                  \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: 'Vote represents a prevote, precommit, or
                              commit vote from validators for

                              consensus.'
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: "SignedMsgType is a type of signed message\
                                  \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                  \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a
                                      Tendermint block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the
                                          prev block
                                        type: string
                                      version:
                                        description: 'Consensus captures the consensus
                                          rules for processing a block in the blockchain,

                                          including all blockchain data structures
                                          and the rules of the application''s

                                          state transition machine.'
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Tendermint Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available
                                            for use with Tendermint Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: 'Consensus captures the consensus rules for processing
                    a block in the blockchain,

                    including all blockchain data structures and the rules of the
                    application''s

                    state transition machine.'
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed
                by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
      type: object
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
        RPC method.
      properties:
        block:
          properties:
            data:
              properties:
                txs:
                  description: 'Txs that will be applied by state @ block.Height+1.

                    NOTE: not all txs here are valid.  We''re just agreeing on the
                    order first.

                    This means that block.AppHash does not include these txs.'
                  items:
                    format: byte
                    type: string
                  type: array
              title: Data contains the set of transactions included in the block
              type: object
            evidence:
              properties:
                evidence:
                  items:
                    properties:
                      duplicate_vote_evidence:
                        description: DuplicateVoteEvidence contains evidence of a
                          validator signed two conflicting votes.
                        properties:
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                          validator_power:
                            format: int64
                            type: string
                          vote_a:
                            description: 'Vote represents a prevote, precommit, or
                              commit vote from validators for

                              consensus.'
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: "SignedMsgType is a type of signed message\
                                  \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                  \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                          vote_b:
                            description: 'Vote represents a prevote, precommit, or
                              commit vote from validators for

                              consensus.'
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              type:
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: "SignedMsgType is a type of signed message\
                                  \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                                  \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                                type: string
                              validator_address:
                                format: byte
                                type: string
                              validator_index:
                                format: int32
                                type: integer
                            type: object
                        type: object
                      light_client_attack_evidence:
                        description: LightClientAttackEvidence contains evidence of
                          a set of validators attempting to mislead a light client.
                        properties:
                          byzantine_validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                          common_height:
                            format: int64
                            type: string
                          conflicting_block:
                            properties:
                              signed_header:
                                properties:
                                  commit:
                                    description: Commit contains the evidence that
                                      a block was committed by a set of validators.
                                    properties:
                                      block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      height:
                                        format: int64
                                        type: string
                                      round:
                                        format: int32
                                        type: integer
                                      signatures:
                                        items:
                                          description: CommitSig is a part of the
                                            Vote included in a Commit.
                                          properties:
                                            block_id_flag:
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                              title: BlockIdFlag indicates which BlcokID
                                                the signature is for
                                              type: string
                                            signature:
                                              format: byte
                                              type: string
                                            timestamp:
                                              format: date-time
                                              type: string
                                            validator_address:
                                              format: byte
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  header:
                                    description: Header defines the structure of a
                                      Tendermint block header.
                                    properties:
                                      app_hash:
                                        format: byte
                                        type: string
                                      chain_id:
                                        type: string
                                      consensus_hash:
                                        format: byte
                                        type: string
                                      data_hash:
                                        format: byte
                                        type: string
                                      evidence_hash:
                                        format: byte
                                        title: consensus info
                                        type: string
                                      height:
                                        format: int64
                                        type: string
                                      last_block_id:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          part_set_header:
                                            properties:
                                              hash:
                                                format: byte
                                                type: string
                                              total:
                                                format: int64
                                                type: integer
                                            title: PartsetHeader
                                            type: object
                                        title: BlockID
                                        type: object
                                      last_commit_hash:
                                        format: byte
                                        title: hashes of block data
                                        type: string
                                      last_results_hash:
                                        format: byte
                                        type: string
                                      next_validators_hash:
                                        format: byte
                                        type: string
                                      proposer_address:
                                        format: byte
                                        type: string
                                      time:
                                        format: date-time
                                        type: string
                                      validators_hash:
                                        format: byte
                                        title: hashes from the app output from the
                                          prev block
                                        type: string
                                      version:
                                        description: 'Consensus captures the consensus
                                          rules for processing a block in the blockchain,

                                          including all blockchain data structures
                                          and the rules of the application''s

                                          state transition machine.'
                                        properties:
                                          app:
                                            format: uint64
                                            type: string
                                          block:
                                            format: uint64
                                            type: string
                                        title: basic block info
                                        type: object
                                    type: object
                                type: object
                              validator_set:
                                properties:
                                  proposer:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: PublicKey defines the keys available
                                          for use with Tendermint Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  total_voting_power:
                                    format: int64
                                    type: string
                                  validators:
                                    items:
                                      properties:
                                        address:
                                          format: byte
                                          type: string
                                        proposer_priority:
                                          format: int64
                                          type: string
                                        pub_key:
                                          properties:
                                            ed25519:
                                              format: byte
                                              type: string
                                            secp256k1:
                                              format: byte
                                              type: string
                                          title: PublicKey defines the keys available
                                            for use with Tendermint Validators
                                          type: object
                                        voting_power:
                                          format: int64
                                          type: string
                                      type: object
                                    type: array
                                type: object
                            type: object
                          timestamp:
                            format: date-time
                            type: string
                          total_voting_power:
                            format: int64
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: 'Consensus captures the consensus rules for processing
                    a block in the blockchain,

                    including all blockchain data structures and the rules of the
                    application''s

                    state transition machine.'
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            last_commit:
              description: Commit contains the evidence that a block was committed
                by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
      type: object
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      description: GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
      properties:
        block_height:
          format: int64
          type: string
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        validators:
          items:
            description: Validator is the type for the validator-set.
            properties:
              address:
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
        RPC method.
      properties:
        application_version:
          description: VersionInfo is the type for the GetNodeInfoResponse message.
          properties:
            app_name:
              type: string
            build_deps:
              items:
                properties:
                  path:
                    title: module path
                    type: string
                  sum:
                    title: checksum
                    type: string
                  version:
                    title: module version
                    type: string
                title: Module is the type for VersionInfo
                type: object
              type: array
            build_tags:
              type: string
            cosmos_sdk_version:
              title: 'Since: cosmos-sdk 0.43'
              type: string
            git_commit:
              type: string
            go_version:
              type: string
            name:
              type: string
            version:
              type: string
          type: object
        default_node_info:
          properties:
            channels:
              format: byte
              type: string
            default_node_id:
              type: string
            listen_addr:
              type: string
            moniker:
              type: string
            network:
              type: string
            other:
              properties:
                rpc_address:
                  type: string
                tx_index:
                  type: string
              type: object
            protocol_version:
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
                p2p:
                  format: uint64
                  type: string
              type: object
            version:
              type: string
          type: object
      type: object
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      description: GetSyncingResponse is the response type for the Query/GetSyncing
        RPC method.
      properties:
        syncing:
          type: boolean
      type: object
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      description: GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight
        RPC method.
      properties:
        block_height:
          format: int64
          type: string
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        validators:
          items:
            description: Validator is the type for the validator-set.
            properties:
              address:
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
    cosmos.base.tendermint.v1beta1.Module:
      properties:
        path:
          title: module path
          type: string
        sum:
          title: checksum
          type: string
        version:
          title: module version
          type: string
      title: Module is the type for VersionInfo
      type: object
    cosmos.base.tendermint.v1beta1.Validator:
      description: Validator is the type for the validator-set.
      properties:
        address:
          type: string
        proposer_priority:
          format: int64
          type: string
        pub_key:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        voting_power:
          format: int64
          type: string
      type: object
    cosmos.base.tendermint.v1beta1.VersionInfo:
      description: VersionInfo is the type for the GetNodeInfoResponse message.
      properties:
        app_name:
          type: string
        build_deps:
          items:
            properties:
              path:
                title: module path
                type: string
              sum:
                title: checksum
                type: string
              version:
                title: module version
                type: string
            title: Module is the type for VersionInfo
            type: object
          type: array
        build_tags:
          type: string
        cosmos_sdk_version:
          title: 'Since: cosmos-sdk 0.43'
          type: string
        git_commit:
          type: string
        go_version:
          type: string
        name:
          type: string
        version:
          type: string
      type: object
    cosmos.base.v1beta1.Coin:
      description: 'Coin defines a token with a denomination and an amount.


        NOTE: The amount field is an Int which implements the custom method

        signatures required by gogoproto.'
      properties:
        amount:
          type: string
        denom:
          type: string
      type: object
    cosmos.base.v1beta1.DecCoin:
      description: 'DecCoin defines a token with a denomination and a decimal amount.


        NOTE: The amount field is an Dec which implements the custom method

        signatures required by gogoproto.'
      properties:
        amount:
          type: string
        denom:
          type: string
      type: object
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      description: 'CompactBitArray is an implementation of a space efficient bit
        array.

        This is used to ensure that the encoded data takes up a minimal amount of

        space after proto encoding.

        This is not thread safe, and is not intended for concurrent usage.'
      properties:
        elems:
          format: byte
          type: string
        extra_bits_stored:
          format: int64
          type: integer
      type: object
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      description: 'DelegationDelegatorReward represents the properties

        of a delegator''s delegation reward.'
      properties:
        reward:
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        validator_address:
          type: string
      type: object
    cosmos.distribution.v1beta1.Params:
      description: Params defines the set of params for the distribution module.
      properties:
        base_proposer_reward:
          type: string
        bonus_proposer_reward:
          type: string
        community_tax:
          type: string
        withdraw_addr_enabled:
          type: boolean
      type: object
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      description: 'QueryCommunityPoolResponse is the response type for the Query/CommunityPool

        RPC method.'
      properties:
        pool:
          description: pool defines community pool's coins.
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      description: 'QueryDelegationRewardsResponse is the response type for the

        Query/DelegationRewards RPC method.'
      properties:
        rewards:
          description: rewards defines the rewards accrued by a delegation.
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      description: 'QueryDelegationTotalRewardsResponse is the response type for the

        Query/DelegationTotalRewards RPC method.'
      properties:
        rewards:
          description: rewards defines all the rewards accrued by a delegator.
          items:
            description: 'DelegationDelegatorReward represents the properties

              of a delegator''s delegation reward.'
            properties:
              reward:
                items:
                  description: 'DecCoin defines a token with a denomination and a
                    decimal amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              validator_address:
                type: string
            type: object
          type: array
        total:
          description: total defines the sum of all the rewards.
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      description: 'QueryDelegatorValidatorsResponse is the response type for the

        Query/DelegatorValidators RPC method.'
      properties:
        validators:
          description: validators defines the validators a delegator is delegating
            for.
          items:
            type: string
          type: array
      type: object
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      description: 'QueryDelegatorWithdrawAddressResponse is the response type for
        the

        Query/DelegatorWithdrawAddress RPC method.'
      properties:
        withdraw_address:
          description: withdraw_address defines the delegator address to query for.
          type: string
      type: object
    cosmos.distribution.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            base_proposer_reward:
              type: string
            bonus_proposer_reward:
              type: string
            community_tax:
              type: string
            withdraw_addr_enabled:
              type: boolean
          type: object
      type: object
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      properties:
        commission:
          description: commission defines the commision the validator received.
          properties:
            commission:
              items:
                description: 'DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
      title: 'QueryValidatorCommissionResponse is the response type for the

        Query/ValidatorCommission RPC method'
      type: object
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      description: 'QueryValidatorOutstandingRewardsResponse is the response type
        for the

        Query/ValidatorOutstandingRewards RPC method.'
      properties:
        rewards:
          description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
            rewards

            for a validator inexpensive to track, allows simple sanity checks.'
          properties:
            rewards:
              items:
                description: 'DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
          type: object
      type: object
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      description: 'QueryValidatorSlashesResponse is the response type for the

        Query/ValidatorSlashes RPC method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        slashes:
          description: slashes defines the slashes the validator received.
          items:
            description: 'ValidatorSlashEvent represents a validator slash event.

              Height is implicit within the store key.

              This is needed to calculate appropriate amount of staking tokens

              for delegations which are withdrawn after a slash has occurred.'
            properties:
              fraction:
                type: string
              validator_period:
                format: uint64
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      description: 'ValidatorAccumulatedCommission represents accumulated commission

        for a validator kept as a running counter, can be withdrawn at any time.'
      properties:
        commission:
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
        rewards

        for a validator inexpensive to track, allows simple sanity checks.'
      properties:
        rewards:
          items:
            description: 'DecCoin defines a token with a denomination and a decimal
              amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      description: 'ValidatorSlashEvent represents a validator slash event.

        Height is implicit within the store key.

        This is needed to calculate appropriate amount of staking tokens

        for delegations which are withdrawn after a slash has occurred.'
      properties:
        fraction:
          type: string
        validator_period:
          format: uint64
          type: string
      type: object
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      description: 'QueryAllEvidenceResponse is the response type for the Query/AllEvidence
        RPC

        method.'
      properties:
        evidence:
          description: evidence returns all evidences.
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      description: QueryEvidenceResponse is the response type for the Query/Evidence
        RPC method.
      properties:
        evidence:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
      type: object
    cosmos.feegrant.v1beta1.Grant:
      properties:
        allowance:
          description: allowance can be any of basic and filtered fee allowance.
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        grantee:
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
          type: string
        granter:
          description: granter is the address of the user granting an allowance of
            their funds.
          type: string
      title: Grant is stored in the KVStore to record a grant with full context
      type: object
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      description: QueryAllowanceResponse is the response type for the Query/Allowance
        RPC method.
      properties:
        allowance:
          description: allowance is a allowance granted for grantee by granter.
          properties:
            allowance:
              description: allowance can be any of basic and filtered fee allowance.
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            grantee:
              description: grantee is the address of the user being granted an allowance
                of another user's funds.
              type: string
            granter:
              description: granter is the address of the user granting an allowance
                of their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
      type: object
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      description: QueryAllowancesResponse is the response type for the Query/Allowances
        RPC method.
      properties:
        allowances:
          description: allowances are allowance's granted for grantee by granter.
          items:
            properties:
              allowance:
                description: allowance can be any of basic and filtered fee allowance.
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              grantee:
                description: grantee is the address of the user being granted an allowance
                  of another user's funds.
                type: string
              granter:
                description: granter is the address of the user granting an allowance
                  of their funds.
                type: string
            title: Grant is stored in the KVStore to record a grant with full context
            type: object
          type: array
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.Deposit:
      description: 'Deposit defines an amount deposited by an account address to an
        active

        proposal.'
      properties:
        amount:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        depositor:
          type: string
        proposal_id:
          format: uint64
          type: string
      type: object
    cosmos.gov.v1beta1.DepositParams:
      description: DepositParams defines the params for deposits on governance proposals.
      properties:
        max_deposit_period:
          description: "Maximum period for Atom holders to deposit on a proposal.\
            \ Initial value: 2\n\n months."
          type: string
        min_deposit:
          description: Minimum deposit for a proposal to enter voting period.
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        min_expedited_deposit:
          description: Minimum expedited deposit for a proposal to enter voting period.
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        min_initial_deposit_ratio:
          description: The ratio representing the proportion of the deposit value
            that must be paid at proposal submission.
          type: string
      type: object
    cosmos.gov.v1beta1.Proposal:
      description: Proposal defines the core field members of a governance proposal.
      properties:
        content:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        deposit_end_time:
          format: date-time
          type: string
        final_tally_result:
          description: TallyResult defines a standard tally for a governance proposal.
          properties:
            true:
              type: string
            abstain:
              type: string
            false:
              type: string
            no_with_veto:
              type: string
          type: object
        is_expedited:
          type: boolean
        proposal_id:
          format: uint64
          type: string
        status:
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: "ProposalStatus enumerates the valid statuses of a proposal.\n\
            \n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines\
            \ the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
            \ defines a proposal status during the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD:\
            \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
            period.\n\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a\
            \ proposal status of a proposal that has\npassed.\n\n - PROPOSAL_STATUS_REJECTED:\
            \ PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that\
            \ has\nbeen rejected.\n\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED\
            \ defines a proposal status of a proposal that has\nfailed."
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
          type: string
        submit_time:
          format: date-time
          type: string
        total_deposit:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        voting_end_time:
          format: date-time
          type: string
        voting_start_time:
          format: date-time
          type: string
      type: object
    cosmos.gov.v1beta1.ProposalStatus:
      default: PROPOSAL_STATUS_UNSPECIFIED
      description: "ProposalStatus enumerates the valid statuses of a proposal.\n\n\
        \n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the\
        \ default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
        \ defines a proposal status during the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD:\
        \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
        period.\n\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
        \ status of a proposal that has\npassed.\n\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
        \ defines a proposal status of a proposal that has\nbeen rejected.\n\n - PROPOSAL_STATUS_FAILED:\
        \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
        failed."
      enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
      type: string
    cosmos.gov.v1beta1.ProposalVotingPeriod:
      description: 'ProposalVotingPeriod defines custom voting periods for a unique
        governance

        proposal type.'
      properties:
        proposal_type:
          type: string
        voting_period:
          type: string
      type: object
    cosmos.gov.v1beta1.QueryDepositResponse:
      description: QueryDepositResponse is the response type for the Query/Deposit
        RPC method.
      properties:
        deposit:
          description: 'Deposit defines an amount deposited by an account address
            to an active

            proposal.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            depositor:
              type: string
            proposal_id:
              format: uint64
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryDepositsResponse:
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
      properties:
        deposits:
          items:
            description: 'Deposit defines an amount deposited by an account address
              to an active

              proposal.'
            properties:
              amount:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              depositor:
                type: string
              proposal_id:
                format: uint64
                type: string
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        deposit_params:
          description: deposit_params defines the parameters related to deposit.
          properties:
            max_deposit_period:
              description: "Maximum period for Atom holders to deposit on a proposal.\
                \ Initial value: 2\n\n months."
              type: string
            min_deposit:
              description: Minimum deposit for a proposal to enter voting period.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            min_expedited_deposit:
              description: Minimum expedited deposit for a proposal to enter voting
                period.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            min_initial_deposit_ratio:
              description: The ratio representing the proportion of the deposit value
                that must be paid at proposal submission.
              type: string
          type: object
        tally_params:
          description: tally_params defines the parameters related to tally.
          properties:
            expedited_quorum:
              description: 'Minimum proportion of Yes votes for an expedited proposal
                to reach quorum. Default value: 0.67.'
              format: byte
              type: string
            expedited_threshold:
              description: 'Minimum proportion of Yes votes for an expedited proposal
                to pass. Default value: 0.67.'
              format: byte
              type: string
            quorum:
              description: "Minimum percentage of total stake needed to vote for a\
                \ result to be\n\n considered valid."
              format: byte
              type: string
            threshold:
              description: 'Minimum proportion of Yes votes for proposal to pass.
                Default value: 0.5.'
              format: byte
              type: string
            veto_threshold:
              description: "Minimum value of Veto votes to Total votes ratio for proposal\
                \ to be\n\n vetoed. Default value: 1/3."
              format: byte
              type: string
          type: object
        voting_params:
          description: voting_params defines the parameters related to voting.
          properties:
            expedited_voting_period:
              description: Length of the expedited voting period.
              type: string
            proposal_voting_periods:
              description: proposal_voting_periods defines custom voting periods for
                proposal types.
              items:
                description: 'ProposalVotingPeriod defines custom voting periods for
                  a unique governance

                  proposal type.'
                properties:
                  proposal_type:
                    type: string
                  voting_period:
                    type: string
                type: object
              type: array
            voting_period:
              description: voting_period defines the length of the voting period.
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryProposalResponse:
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
      properties:
        proposal:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            content:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            deposit_end_time:
              format: date-time
              type: string
            final_tally_result:
              description: TallyResult defines a standard tally for a governance proposal.
              properties:
                true:
                  type: string
                abstain:
                  type: string
                false:
                  type: string
                no_with_veto:
                  type: string
              type: object
            is_expedited:
              type: boolean
            proposal_id:
              format: uint64
              type: string
            status:
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: "ProposalStatus enumerates the valid statuses of a proposal.\n\
                \n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines\
                \ the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
                \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during\
                \ the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
                \ defines a proposal status during the voting\nperiod.\n\n - PROPOSAL_STATUS_PASSED:\
                \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that\
                \ has\npassed.\n\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
                \ defines a proposal status of a proposal that has\nbeen rejected.\n\
                \n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal\
                \ status of a proposal that has\nfailed."
              enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              format: date-time
              type: string
            total_deposit:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              format: date-time
              type: string
            voting_start_time:
              format: date-time
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryProposalsResponse:
      description: 'QueryProposalsResponse is the response type for the Query/Proposals
        RPC

        method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        proposals:
          items:
            description: Proposal defines the core field members of a governance proposal.
            properties:
              content:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              deposit_end_time:
                format: date-time
                type: string
              final_tally_result:
                description: TallyResult defines a standard tally for a governance
                  proposal.
                properties:
                  true:
                    type: string
                  abstain:
                    type: string
                  false:
                    type: string
                  no_with_veto:
                    type: string
                type: object
              is_expedited:
                type: boolean
              proposal_id:
                format: uint64
                type: string
              status:
                default: PROPOSAL_STATUS_UNSPECIFIED
                description: "ProposalStatus enumerates the valid statuses of a proposal.\n\
                  \n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED\
                  \ defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
                  \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during\
                  \ the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
                  \ defines a proposal status during the voting\nperiod.\n\n - PROPOSAL_STATUS_PASSED:\
                  \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal\
                  \ that has\npassed.\n\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
                  \ defines a proposal status of a proposal that has\nbeen rejected.\n\
                  \n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal\
                  \ status of a proposal that has\nfailed."
                enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
                type: string
              submit_time:
                format: date-time
                type: string
              total_deposit:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              voting_end_time:
                format: date-time
                type: string
              voting_start_time:
                format: date-time
                type: string
            type: object
          type: array
      type: object
    cosmos.gov.v1beta1.QueryTallyResultResponse:
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
      properties:
        tally:
          description: TallyResult defines a standard tally for a governance proposal.
          properties:
            true:
              type: string
            abstain:
              type: string
            false:
              type: string
            no_with_veto:
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryVoteResponse:
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
      properties:
        vote:
          description: 'Vote defines a vote on a governance proposal.

            A Vote consists of a proposal ID, the voter, and the vote option.'
          properties:
            option:
              default: VOTE_OPTION_UNSPECIFIED
              description: 'Deprecated: Prefer to use `options` instead. This field
                is set in queries

                if and only if `len(options) == 1` and that option has weight 1. In
                all

                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
              enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
              type: string
            options:
              items:
                description: 'WeightedVoteOption defines a unit of vote for vote split.


                  Since: cosmos-sdk 0.43'
                properties:
                  option:
                    default: VOTE_OPTION_UNSPECIFIED
                    description: "VoteOption enumerates the valid vote options for\
                      \ a given governance proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED:\
                      \ VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES:\
                      \ VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN:\
                      \ VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO:\
                      \ VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
                      \ VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
                    enum:
                    - VOTE_OPTION_UNSPECIFIED
                    - VOTE_OPTION_YES
                    - VOTE_OPTION_ABSTAIN
                    - VOTE_OPTION_NO
                    - VOTE_OPTION_NO_WITH_VETO
                    type: string
                  weight:
                    type: string
                type: object
              title: 'Since: cosmos-sdk 0.43'
              type: array
            proposal_id:
              format: uint64
              type: string
            voter:
              type: string
          type: object
      type: object
    cosmos.gov.v1beta1.QueryVotesResponse:
      description: QueryVotesResponse is the response type for the Query/Votes RPC
        method.
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        votes:
          description: votes defined the queried votes.
          items:
            description: 'Vote defines a vote on a governance proposal.

              A Vote consists of a proposal ID, the voter, and the vote option.'
            properties:
              option:
                default: VOTE_OPTION_UNSPECIFIED
                description: 'Deprecated: Prefer to use `options` instead. This field
                  is set in queries

                  if and only if `len(options) == 1` and that option has weight 1.
                  In all

                  other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
                type: string
              options:
                items:
                  description: 'WeightedVoteOption defines a unit of vote for vote
                    split.


                    Since: cosmos-sdk 0.43'
                  properties:
                    option:
                      default: VOTE_OPTION_UNSPECIFIED
                      description: "VoteOption enumerates the valid vote options for\
                        \ a given governance proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED:\
                        \ VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n -\
                        \ VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n\
                        \ - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain\
                        \ vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines\
                        \ a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO\
                        \ defines a no with veto vote option."
                      enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                      type: string
                    weight:
                      type: string
                  type: object
                title: 'Since: cosmos-sdk 0.43'
                type: array
              proposal_id:
                format: uint64
                type: string
              voter:
                type: string
            type: object
          type: array
      type: object
    cosmos.gov.v1beta1.TallyParams:
      description: TallyParams defines the params for tallying votes on governance
        proposals.
      properties:
        expedited_quorum:
          description: 'Minimum proportion of Yes votes for an expedited proposal
            to reach quorum. Default value: 0.67.'
          format: byte
          type: string
        expedited_threshold:
          description: 'Minimum proportion of Yes votes for an expedited proposal
            to pass. Default value: 0.67.'
          format: byte
          type: string
        quorum:
          description: "Minimum percentage of total stake needed to vote for a result\
            \ to be\n considered valid."
          format: byte
          type: string
        threshold:
          description: 'Minimum proportion of Yes votes for proposal to pass. Default
            value: 0.5.'
          format: byte
          type: string
        veto_threshold:
          description: "Minimum value of Veto votes to Total votes ratio for proposal\
            \ to be\n vetoed. Default value: 1/3."
          format: byte
          type: string
      type: object
    cosmos.gov.v1beta1.TallyResult:
      description: TallyResult defines a standard tally for a governance proposal.
      properties:
        true:
          type: string
        abstain:
          type: string
        false:
          type: string
        no_with_veto:
          type: string
      type: object
    cosmos.gov.v1beta1.Vote:
      description: 'Vote defines a vote on a governance proposal.

        A Vote consists of a proposal ID, the voter, and the vote option.'
      properties:
        option:
          default: VOTE_OPTION_UNSPECIFIED
          description: 'Deprecated: Prefer to use `options` instead. This field is
            set in queries

            if and only if `len(options) == 1` and that option has weight 1. In all

            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
          type: string
        options:
          items:
            description: 'WeightedVoteOption defines a unit of vote for vote split.


              Since: cosmos-sdk 0.43'
            properties:
              option:
                default: VOTE_OPTION_UNSPECIFIED
                description: "VoteOption enumerates the valid vote options for a given\
                  \ governance proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED\
                  \ defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES\
                  \ defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN\
                  \ defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO\
                  \ defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO\
                  \ defines a no with veto vote option."
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
                type: string
              weight:
                type: string
            type: object
          title: 'Since: cosmos-sdk 0.43'
          type: array
        proposal_id:
          format: uint64
          type: string
        voter:
          type: string
      type: object
    cosmos.gov.v1beta1.VoteOption:
      default: VOTE_OPTION_UNSPECIFIED
      description: "VoteOption enumerates the valid vote options for a given governance\
        \ proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines\
        \ a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes\
        \ vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain\
        \ vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n\
        \ - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto\
        \ vote option."
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
      type: string
    cosmos.gov.v1beta1.VotingParams:
      description: VotingParams defines the params for voting on governance proposals.
      properties:
        expedited_voting_period:
          description: Length of the expedited voting period.
          type: string
        proposal_voting_periods:
          description: proposal_voting_periods defines custom voting periods for proposal
            types.
          items:
            description: 'ProposalVotingPeriod defines custom voting periods for a
              unique governance

              proposal type.'
            properties:
              proposal_type:
                type: string
              voting_period:
                type: string
            type: object
          type: array
        voting_period:
          description: voting_period defines the length of the voting period.
          type: string
      type: object
    cosmos.gov.v1beta1.WeightedVoteOption:
      description: 'WeightedVoteOption defines a unit of vote for vote split.


        Since: cosmos-sdk 0.43'
      properties:
        option:
          default: VOTE_OPTION_UNSPECIFIED
          description: "VoteOption enumerates the valid vote options for a given governance\
            \ proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines\
            \ a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a\
            \ yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines\
            \ an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a\
            \ no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO\
            \ defines a no with veto vote option."
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
          type: string
        weight:
          type: string
      type: object
    cosmos.mint.v1beta1.Params:
      description: Params holds parameters for the mint module.
      properties:
        blocks_per_year:
          format: uint64
          title: expected blocks per year
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        mint_denom:
          title: type of coin to mint
          type: string
      type: object
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      description: 'QueryAnnualProvisionsResponse is the response type for the

        Query/AnnualProvisions RPC method.'
      properties:
        annual_provisions:
          description: annual_provisions is the current minting annual provisions
            value.
          format: byte
          type: string
      type: object
    cosmos.mint.v1beta1.QueryInflationResponse:
      description: 'QueryInflationResponse is the response type for the Query/Inflation
        RPC

        method.'
      properties:
        inflation:
          description: inflation is the current minting inflation value.
          format: byte
          type: string
      type: object
    cosmos.mint.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            blocks_per_year:
              format: uint64
              title: expected blocks per year
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            mint_denom:
              title: type of coin to mint
              type: string
          type: object
      type: object
    cosmos.params.v1beta1.ParamChange:
      description: 'ParamChange defines an individual parameter change, for use in

        ParameterChangeProposal.'
      properties:
        key:
          type: string
        subspace:
          type: string
        value:
          type: string
      type: object
    cosmos.params.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is response type for the Query/Params RPC method.
      properties:
        param:
          description: param defines the queried parameter.
          properties:
            key:
              type: string
            subspace:
              type: string
            value:
              type: string
          type: object
      type: object
    cosmos.slashing.v1beta1.Params:
      description: Params represents the parameters used for by the slashing module.
      properties:
        downtime_jail_duration:
          type: string
        min_signed_per_window:
          format: byte
          type: string
        signed_blocks_window:
          format: int64
          type: string
        slash_fraction_double_sign:
          format: byte
          type: string
        slash_fraction_downtime:
          format: byte
          type: string
      type: object
    cosmos.slashing.v1beta1.QueryParamsResponse:
      properties:
        params:
          description: Params represents the parameters used for by the slashing module.
          properties:
            downtime_jail_duration:
              type: string
            min_signed_per_window:
              format: byte
              type: string
            signed_blocks_window:
              format: int64
              type: string
            slash_fraction_double_sign:
              format: byte
              type: string
            slash_fraction_downtime:
              format: byte
              type: string
          type: object
      title: QueryParamsResponse is the response type for the Query/Params RPC method
      type: object
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      properties:
        val_signing_info:
          description: 'ValidatorSigningInfo defines a validator''s signing info for
            monitoring their

            liveness activity.'
          properties:
            address:
              type: string
            index_offset:
              description: 'Index which is incremented each time the validator was
                a bonded

                in a block and may have signed a precommit or not. This in conjunction
                with the

                `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.'
              format: int64
              type: string
            jailed_until:
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
              type: string
            missed_blocks_counter:
              description: 'A counter kept to avoid unnecessary array reads.

                Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
              format: int64
              type: string
            start_height:
              format: int64
              title: Height at which validator was first a candidate OR was unjailed
              type: string
            tombstoned:
              description: 'Whether or not a validator has been tombstoned (killed
                out of validator set). It is set

                once the validator commits an equivocation or for any other configured
                misbehiavor.'
              type: boolean
          title: val_signing_info is the signing info of requested val cons address
          type: object
      title: 'QuerySigningInfoResponse is the response type for the Query/SigningInfo
        RPC

        method'
      type: object
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      properties:
        info:
          items:
            description: 'ValidatorSigningInfo defines a validator''s signing info
              for monitoring their

              liveness activity.'
            properties:
              address:
                type: string
              index_offset:
                description: 'Index which is incremented each time the validator was
                  a bonded

                  in a block and may have signed a precommit or not. This in conjunction
                  with the

                  `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.'
                format: int64
                type: string
              jailed_until:
                description: Timestamp until which the validator is jailed due to
                  liveness downtime.
                format: date-time
                type: string
              missed_blocks_counter:
                description: 'A counter kept to avoid unnecessary array reads.

                  Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
                format: int64
                type: string
              start_height:
                format: int64
                title: Height at which validator was first a candidate OR was unjailed
                type: string
              tombstoned:
                description: 'Whether or not a validator has been tombstoned (killed
                  out of validator set). It is set

                  once the validator commits an equivocation or for any other configured
                  misbehiavor.'
                type: boolean
            type: object
          title: info is the signing info of all validators
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      title: 'QuerySigningInfosResponse is the response type for the Query/SigningInfos
        RPC

        method'
      type: object
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      description: 'ValidatorSigningInfo defines a validator''s signing info for monitoring
        their

        liveness activity.'
      properties:
        address:
          type: string
        index_offset:
          description: 'Index which is incremented each time the validator was a bonded

            in a block and may have signed a precommit or not. This in conjunction
            with the

            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.'
          format: int64
          type: string
        jailed_until:
          description: Timestamp until which the validator is jailed due to liveness
            downtime.
          format: date-time
          type: string
        missed_blocks_counter:
          description: 'A counter kept to avoid unnecessary array reads.

            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
          format: int64
          type: string
        start_height:
          format: int64
          title: Height at which validator was first a candidate OR was unjailed
          type: string
        tombstoned:
          description: 'Whether or not a validator has been tombstoned (killed out
            of validator set). It is set

            once the validator commits an equivocation or for any other configured
            misbehiavor.'
          type: boolean
      type: object
    cosmos.staking.v1beta1.BondStatus:
      default: BOND_STATUS_UNSPECIFIED
      description: "BondStatus is the status of a validator.\n\n\n - BOND_STATUS_UNSPECIFIED:\
        \ UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED:\
        \ UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING:\
        \ UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED:\
        \ BONDED defines a validator that is bonded."
      enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
      type: string
    cosmos.staking.v1beta1.Commission:
      description: Commission defines commission parameters for a given validator.
      properties:
        commission_rates:
          description: commission_rates defines the initial commission rates to be
            used for creating a validator.
          properties:
            max_change_rate:
              description: max_change_rate defines the maximum daily increase of the
                validator commission, as a fraction.
              type: string
            max_rate:
              description: max_rate defines the maximum commission rate which validator
                can ever charge, as a fraction.
              type: string
            rate:
              description: rate is the commission rate charged to delegators, as a
                fraction.
              type: string
          type: object
        update_time:
          description: update_time is the last time the commission rate was changed.
          format: date-time
          type: string
      type: object
    cosmos.staking.v1beta1.CommissionRates:
      description: 'CommissionRates defines the initial commission rates to be used
        for creating

        a validator.'
      properties:
        max_change_rate:
          description: max_change_rate defines the maximum daily increase of the validator
            commission, as a fraction.
          type: string
        max_rate:
          description: max_rate defines the maximum commission rate which validator
            can ever charge, as a fraction.
          type: string
        rate:
          description: rate is the commission rate charged to delegators, as a fraction.
          type: string
      type: object
    cosmos.staking.v1beta1.Delegation:
      description: 'Delegation represents the bond with tokens held by an account.
        It is

        owned by one delegator, and is associated with the voting power of one

        validator.'
      properties:
        delegator_address:
          description: delegator_address is the bech32-encoded address of the delegator.
          type: string
        shares:
          description: shares define the delegation shares received.
          type: string
        validator_address:
          description: validator_address is the bech32-encoded address of the validator.
          type: string
      type: object
    cosmos.staking.v1beta1.DelegationResponse:
      description: 'DelegationResponse is equivalent to Delegation except that it
        contains a

        balance in addition to shares which is more suitable for client responses.'
      properties:
        balance:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        delegation:
          description: 'Delegation represents the bond with tokens held by an account.
            It is

            owned by one delegator, and is associated with the voting power of one

            validator.'
          properties:
            delegator_address:
              description: delegator_address is the bech32-encoded address of the
                delegator.
              type: string
            shares:
              description: shares define the delegation shares received.
              type: string
            validator_address:
              description: validator_address is the bech32-encoded address of the
                validator.
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.Description:
      description: Description defines a validator description.
      properties:
        details:
          description: details define other optional details.
          type: string
        identity:
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
          type: string
        moniker:
          description: moniker defines a human-readable name for the validator.
          type: string
        security_contact:
          description: security_contact defines an optional email for security contact.
          type: string
        website:
          description: website defines an optional website link.
          type: string
      type: object
    cosmos.staking.v1beta1.HistoricalInfo:
      description: 'HistoricalInfo contains header and validator information for a
        given block.

        It is stored as part of staking module''s state, which persists the `n` most

        recent HistoricalInfo

        (`n` is set by the staking module''s `historical_entries` parameter).'
      properties:
        header:
          description: Header defines the structure of a Tendermint block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: prev block info
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: 'Consensus captures the consensus rules for processing
                a block in the blockchain,

                including all blockchain data structures and the rules of the application''s

                state transition machine.'
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
        valset:
          items:
            description: 'Validator defines a validator, together with the total amount
              of the

              Validator''s bond shares and their exchange rate to coins. Slashing
              results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated
              to

              this validator, the validator is credited with a delegation whose number
              of

              bond shares is based on the amount of coins delegated divided by the
              current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.'
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                        type: string
                      max_rate:
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                        type: string
                      rate:
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security
                      contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
                type: boolean
              min_self_delegation:
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
                type: string
              operator_address:
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
                type: string
              unbonding_time:
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
                type: string
            type: object
          type: array
      type: object
    cosmos.staking.v1beta1.Params:
      description: Params defines the parameters for the staking module.
      properties:
        bond_denom:
          description: bond_denom defines the bondable coin denomination.
          type: string
        historical_entries:
          description: historical_entries is the number of historical entries to persist.
          format: int64
          type: integer
        max_entries:
          description: max_entries is the max entries for either unbonding delegation
            or redelegation (per pair/trio).
          format: int64
          type: integer
        max_validators:
          description: max_validators is the maximum number of validators.
          format: int64
          type: integer
        min_commission_rate:
          title: min_commission_rate is the chain-wide minimum commission rate that
            a validator can charge their delegators
          type: string
        min_self_delegation:
          title: min_self_delegation is the chain-wide minimum amount that a validator
            has to self delegate
          type: string
        unbonding_time:
          description: unbonding_time is the time duration of unbonding.
          type: string
      type: object
    cosmos.staking.v1beta1.Pool:
      description: 'Pool is used for tracking bonded and not-bonded token supply of
        the bond

        denomination.'
      properties:
        bonded_tokens:
          type: string
        not_bonded_tokens:
          type: string
      type: object
    cosmos.staking.v1beta1.QueryDelegationResponse:
      description: QueryDelegationResponse is response type for the Query/Delegation
        RPC method.
      properties:
        delegation_response:
          description: 'DelegationResponse is equivalent to Delegation except that
            it contains a

            balance in addition to shares which is more suitable for client responses.'
          properties:
            balance:
              description: 'Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.'
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            delegation:
              description: 'Delegation represents the bond with tokens held by an
                account. It is

                owned by one delegator, and is associated with the voting power of
                one

                validator.'
              properties:
                delegator_address:
                  description: delegator_address is the bech32-encoded address of
                    the delegator.
                  type: string
                shares:
                  description: shares define the delegation shares received.
                  type: string
                validator_address:
                  description: validator_address is the bech32-encoded address of
                    the validator.
                  type: string
              type: object
          type: object
      type: object
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      description: 'QueryDelegatorDelegationsResponse is response type for the

        Query/DelegatorDelegations RPC method.'
      properties:
        delegation_responses:
          description: delegation_responses defines all the delegations' info of a
            delegator.
          items:
            description: 'DelegationResponse is equivalent to Delegation except that
              it contains a

              balance in addition to shares which is more suitable for client responses.'
            properties:
              balance:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegation:
                description: 'Delegation represents the bond with tokens held by an
                  account. It is

                  owned by one delegator, and is associated with the voting power
                  of one

                  validator.'
                properties:
                  delegator_address:
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                    type: string
                  shares:
                    description: shares define the delegation shares received.
                    type: string
                  validator_address:
                    description: validator_address is the bech32-encoded address of
                      the validator.
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      description: 'QueryUnbondingDelegatorDelegationsResponse is response type for
        the

        Query/UnbondingDelegatorDelegations RPC method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        unbonding_responses:
          items:
            description: 'UnbondingDelegation stores all of a single delegator''s
              unbonding bonds

              for a single validator in an time-ordered list.'
            properties:
              delegator_address:
                description: delegator_address is the bech32-encoded address of the
                  delegator.
                type: string
              entries:
                description: entries are the unbonding delegation entries.
                items:
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
                  properties:
                    balance:
                      description: balance defines the tokens to receive at completion.
                      type: string
                    completion_time:
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                      type: string
                    creation_height:
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                      type: string
                    initial_balance:
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                      type: string
                  type: object
                type: array
              validator_address:
                description: validator_address is the bech32-encoded address of the
                  validator.
                type: string
            type: object
          type: array
      type: object
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      description: 'QueryDelegatorValidatorResponse response type for the

        Query/DelegatorValidator RPC method.'
      properties:
        validator:
          description: 'Validator defines a validator, together with the total amount
            of the

            Validator''s bond shares and their exchange rate to coins. Slashing results
            in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated
            to

            this validator, the validator is credited with a delegation whose number
            of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.'
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                  properties:
                    max_change_rate:
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                      type: string
                    max_rate:
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                      type: string
                    rate:
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
              type: boolean
            min_self_delegation:
              description: min_self_delegation is the validator's self declared minimum
                self delegation.
              type: string
            operator_address:
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
              type: string
            unbonding_time:
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      description: 'QueryDelegatorValidatorsResponse is response type for the

        Query/DelegatorValidators RPC method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        validators:
          description: validators defines the the validators' info of a delegator.
          items:
            description: 'Validator defines a validator, together with the total amount
              of the

              Validator''s bond shares and their exchange rate to coins. Slashing
              results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated
              to

              this validator, the validator is credited with a delegation whose number
              of

              bond shares is based on the amount of coins delegated divided by the
              current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.'
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                        type: string
                      max_rate:
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                        type: string
                      rate:
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security
                      contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
                type: boolean
              min_self_delegation:
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
                type: string
              operator_address:
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
                type: string
              unbonding_time:
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
                type: string
            type: object
          type: array
      type: object
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      description: 'QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
        RPC

        method.'
      properties:
        hist:
          description: hist defines the historical info at the given height.
          properties:
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: prev block info
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: 'Consensus captures the consensus rules for processing
                    a block in the blockchain,

                    including all blockchain data structures and the rules of the
                    application''s

                    state transition machine.'
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
            valset:
              items:
                description: 'Validator defines a validator, together with the total
                  amount of the

                  Validator''s bond shares and their exchange rate to coins. Slashing
                  results in

                  a decrease in the exchange rate, allowing correct calculation of
                  future

                  undelegations without iterating over delegators. When coins are
                  delegated to

                  this validator, the validator is credited with a delegation whose
                  number of

                  bond shares is based on the amount of coins delegated divided by
                  the current

                  exchange rate. Voting power can be calculated as total bonded shares

                  multiplied by exchange rate.'
                properties:
                  commission:
                    description: commission defines the commission parameters.
                    properties:
                      commission_rates:
                        description: commission_rates defines the initial commission
                          rates to be used for creating a validator.
                        properties:
                          max_change_rate:
                            description: max_change_rate defines the maximum daily
                              increase of the validator commission, as a fraction.
                            type: string
                          max_rate:
                            description: max_rate defines the maximum commission rate
                              which validator can ever charge, as a fraction.
                            type: string
                          rate:
                            description: rate is the commission rate charged to delegators,
                              as a fraction.
                            type: string
                        type: object
                      update_time:
                        description: update_time is the last time the commission rate
                          was changed.
                        format: date-time
                        type: string
                    type: object
                  consensus_pubkey:
                    description: "`Any` contains an arbitrary serialized protocol\
                      \ buffer message along with a\nURL that describes the type of\
                      \ the serialized message.\n\nProtobuf library provides support\
                      \ to pack/unpack Any values in the form\nof utility functions\
                      \ or additional generated methods of the Any type.\n\nExample\
                      \ 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
                      \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
                      \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message\
                      \ in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                      \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                      \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n \
                      \   ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                      \      ...\n\n Example 4: Pack and unpack a message in Go\n\n\
                      \     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                      \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                      \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                      \ as the type URL and the unpack\nmethods only use the fully\
                      \ qualified type name after the last '/'\nin the type URL, for\
                      \ example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\"\
                      .\n\n\nJSON\n====\nThe JSON representation of an `Any` value\
                      \ uses the regular\nrepresentation of the deserialized, embedded\
                      \ message, with an\nadditional field `@type` which contains\
                      \ the type URL. Example:\n\n\n    package google.profile;\n\
                      \    message Person {\n      string first_name = 1;\n      string\
                      \ last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                      \    }\n\nIf the embedded message type is well-known and has\
                      \ a custom JSON\nrepresentation, that representation will be\
                      \ embedded adding a field\n`value` which holds the custom JSON\
                      \ in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                      \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                      ,\n      \"value\": \"1.212s\"\n    }"
                    properties:
                      type_url:
                        description: "A URL/resource name that uniquely identifies\
                          \ the type of the serialized\nprotocol buffer message. This\
                          \ string must contain at least\none \"/\" character. The\
                          \ last segment of the URL's path must represent\nthe fully\
                          \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                          \ The name should be in a canonical form\n(e.g., leading\
                          \ \".\" is not accepted).\n\nIn practice, teams usually\
                          \ precompile into the binary all types that they\nexpect\
                          \ it to use in the context of Any. However, for URLs which\
                          \ use the\nscheme `http`, `https`, or no scheme, one can\
                          \ optionally set up a type\nserver that maps type URLs to\
                          \ message definitions as follows:\n\n* If no scheme is provided,\
                          \ `https` is assumed.\n* An HTTP GET on the URL must yield\
                          \ a [google.protobuf.Type][]\n\n  value in binary format,\
                          \ or produce an error.\n* Applications are allowed to cache\
                          \ lookup results based on the\n\n  URL, or have them precompiled\
                          \ into a binary to avoid any\n  lookup. Therefore, binary\
                          \ compatibility needs to be preserved\n  on changes to types.\
                          \ (Use versioned type names to manage\n  breaking changes.)\n\
                          \nNote: this functionality is not currently available in\
                          \ the official\nprotobuf release, and it is not used for\
                          \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                          \ other than `http`, `https` (or the empty scheme) might\
                          \ be\nused with implementation specific semantics."
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                  delegator_shares:
                    description: delegator_shares defines total shares issued to a
                      validator's delegators.
                    type: string
                  description:
                    description: description defines the description terms for the
                      validator.
                    properties:
                      details:
                        description: details define other optional details.
                        type: string
                      identity:
                        description: identity defines an optional identity signature
                          (ex. UPort or Keybase).
                        type: string
                      moniker:
                        description: moniker defines a human-readable name for the
                          validator.
                        type: string
                      security_contact:
                        description: security_contact defines an optional email for
                          security contact.
                        type: string
                      website:
                        description: website defines an optional website link.
                        type: string
                    type: object
                  jailed:
                    description: jailed defined whether the validator has been jailed
                      from bonded status or not.
                    type: boolean
                  min_self_delegation:
                    description: min_self_delegation is the validator's self declared
                      minimum self delegation.
                    type: string
                  operator_address:
                    description: operator_address defines the address of the validator's
                      operator; bech encoded in JSON.
                    type: string
                  status:
                    default: BOND_STATUS_UNSPECIFIED
                    description: status is the validator status (bonded/unbonding/unbonded).
                    enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                    type: string
                  tokens:
                    description: tokens define the delegated tokens (incl. self-delegation).
                    type: string
                  unbonding_height:
                    description: unbonding_height defines, if unbonding, the height
                      at which this validator has begun unbonding.
                    format: int64
                    type: string
                  unbonding_time:
                    description: unbonding_time defines, if unbonding, the min time
                      for the validator to complete unbonding.
                    format: date-time
                    type: string
                type: object
              type: array
          type: object
      type: object
    cosmos.staking.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is response type for the Query/Params RPC method.
      properties:
        params:
          description: params holds all the parameters of this module.
          properties:
            bond_denom:
              description: bond_denom defines the bondable coin denomination.
              type: string
            historical_entries:
              description: historical_entries is the number of historical entries
                to persist.
              format: int64
              type: integer
            max_entries:
              description: max_entries is the max entries for either unbonding delegation
                or redelegation (per pair/trio).
              format: int64
              type: integer
            max_validators:
              description: max_validators is the maximum number of validators.
              format: int64
              type: integer
            min_commission_rate:
              title: min_commission_rate is the chain-wide minimum commission rate
                that a validator can charge their delegators
              type: string
            min_self_delegation:
              title: min_self_delegation is the chain-wide minimum amount that a validator
                has to self delegate
              type: string
            unbonding_time:
              description: unbonding_time is the time duration of unbonding.
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.QueryPoolResponse:
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
      properties:
        pool:
          description: pool defines the pool info.
          properties:
            bonded_tokens:
              type: string
            not_bonded_tokens:
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      description: 'QueryRedelegationsResponse is response type for the Query/Redelegations
        RPC

        method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        redelegation_responses:
          items:
            description: 'RedelegationResponse is equivalent to a Redelegation except
              that its entries

              contain a balance in addition to shares which is more suitable for client

              responses.'
            properties:
              entries:
                items:
                  description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry
                    except that it

                    contains a balance in addition to shares which is more suitable
                    for client

                    responses.'
                  properties:
                    balance:
                      type: string
                    redelegation_entry:
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                      properties:
                        completion_time:
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                          type: string
                        creation_height:
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                          type: string
                        initial_balance:
                          description: initial_balance defines the initial balance
                            when redelegation started.
                          type: string
                        shares_dst:
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                          type: string
                      type: object
                  type: object
                type: array
              redelegation:
                description: 'Redelegation contains the list of a particular delegator''s
                  redelegating bonds

                  from a particular source validator to a particular destination validator.'
                properties:
                  delegator_address:
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                    type: string
                  entries:
                    description: entries are the redelegation entries.
                    items:
                      description: RedelegationEntry defines a redelegation object
                        with relevant metadata.
                      properties:
                        completion_time:
                          description: completion_time defines the unix time for redelegation
                            completion.
                          format: date-time
                          type: string
                        creation_height:
                          description: creation_height  defines the height which the
                            redelegation took place.
                          format: int64
                          type: string
                        initial_balance:
                          description: initial_balance defines the initial balance
                            when redelegation started.
                          type: string
                        shares_dst:
                          description: shares_dst is the amount of destination-validator
                            shares created by redelegation.
                          type: string
                      type: object
                    type: array
                  validator_dst_address:
                    description: validator_dst_address is the validator redelegation
                      destination operator address.
                    type: string
                  validator_src_address:
                    description: validator_src_address is the validator redelegation
                      source operator address.
                    type: string
                type: object
            type: object
          type: array
      type: object
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      description: 'QueryDelegationResponse is response type for the Query/UnbondingDelegation

        RPC method.'
      properties:
        unbond:
          description: 'UnbondingDelegation stores all of a single delegator''s unbonding
            bonds

            for a single validator in an time-ordered list.'
          properties:
            delegator_address:
              description: delegator_address is the bech32-encoded address of the
                delegator.
              type: string
            entries:
              description: entries are the unbonding delegation entries.
              items:
                description: UnbondingDelegationEntry defines an unbonding object
                  with relevant metadata.
                properties:
                  balance:
                    description: balance defines the tokens to receive at completion.
                    type: string
                  completion_time:
                    description: completion_time is the unix time for unbonding completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height is the height which the unbonding
                      took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the tokens initially scheduled
                      to receive at completion.
                    type: string
                type: object
              type: array
            validator_address:
              description: validator_address is the bech32-encoded address of the
                validator.
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      properties:
        delegation_responses:
          items:
            description: 'DelegationResponse is equivalent to Delegation except that
              it contains a

              balance in addition to shares which is more suitable for client responses.'
            properties:
              balance:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegation:
                description: 'Delegation represents the bond with tokens held by an
                  account. It is

                  owned by one delegator, and is associated with the voting power
                  of one

                  validator.'
                properties:
                  delegator_address:
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                    type: string
                  shares:
                    description: shares define the delegation shares received.
                    type: string
                  validator_address:
                    description: validator_address is the bech32-encoded address of
                      the validator.
                    type: string
                type: object
            type: object
          type: array
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      title: 'QueryValidatorDelegationsResponse is response type for the

        Query/ValidatorDelegations RPC method'
      type: object
    cosmos.staking.v1beta1.QueryValidatorResponse:
      properties:
        validator:
          description: 'Validator defines a validator, together with the total amount
            of the

            Validator''s bond shares and their exchange rate to coins. Slashing results
            in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated
            to

            this validator, the validator is credited with a delegation whose number
            of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.'
          properties:
            commission:
              description: commission defines the commission parameters.
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates
                    to be used for creating a validator.
                  properties:
                    max_change_rate:
                      description: max_change_rate defines the maximum daily increase
                        of the validator commission, as a fraction.
                      type: string
                    max_rate:
                      description: max_rate defines the maximum commission rate which
                        validator can ever charge, as a fraction.
                      type: string
                    rate:
                      description: rate is the commission rate charged to delegators,
                        as a fraction.
                      type: string
                  type: object
                update_time:
                  description: update_time is the last time the commission rate was
                    changed.
                  format: date-time
                  type: string
              type: object
            consensus_pubkey:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            delegator_shares:
              description: delegator_shares defines total shares issued to a validator's
                delegators.
              type: string
            description:
              description: description defines the description terms for the validator.
              properties:
                details:
                  description: details define other optional details.
                  type: string
                identity:
                  description: identity defines an optional identity signature (ex.
                    UPort or Keybase).
                  type: string
                moniker:
                  description: moniker defines a human-readable name for the validator.
                  type: string
                security_contact:
                  description: security_contact defines an optional email for security
                    contact.
                  type: string
                website:
                  description: website defines an optional website link.
                  type: string
              type: object
            jailed:
              description: jailed defined whether the validator has been jailed from
                bonded status or not.
              type: boolean
            min_self_delegation:
              description: min_self_delegation is the validator's self declared minimum
                self delegation.
              type: string
            operator_address:
              description: operator_address defines the address of the validator's
                operator; bech encoded in JSON.
              type: string
            status:
              default: BOND_STATUS_UNSPECIFIED
              description: status is the validator status (bonded/unbonding/unbonded).
              enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
              type: string
            tokens:
              description: tokens define the delegated tokens (incl. self-delegation).
              type: string
            unbonding_height:
              description: unbonding_height defines, if unbonding, the height at which
                this validator has begun unbonding.
              format: int64
              type: string
            unbonding_time:
              description: unbonding_time defines, if unbonding, the min time for
                the validator to complete unbonding.
              format: date-time
              type: string
          type: object
      title: QueryValidatorResponse is response type for the Query/Validator RPC method
      type: object
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      description: 'QueryValidatorUnbondingDelegationsResponse is response type for
        the

        Query/ValidatorUnbondingDelegations RPC method.'
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        unbonding_responses:
          items:
            description: 'UnbondingDelegation stores all of a single delegator''s
              unbonding bonds

              for a single validator in an time-ordered list.'
            properties:
              delegator_address:
                description: delegator_address is the bech32-encoded address of the
                  delegator.
                type: string
              entries:
                description: entries are the unbonding delegation entries.
                items:
                  description: UnbondingDelegationEntry defines an unbonding object
                    with relevant metadata.
                  properties:
                    balance:
                      description: balance defines the tokens to receive at completion.
                      type: string
                    completion_time:
                      description: completion_time is the unix time for unbonding
                        completion.
                      format: date-time
                      type: string
                    creation_height:
                      description: creation_height is the height which the unbonding
                        took place.
                      format: int64
                      type: string
                    initial_balance:
                      description: initial_balance defines the tokens initially scheduled
                        to receive at completion.
                      type: string
                  type: object
                type: array
              validator_address:
                description: validator_address is the bech32-encoded address of the
                  validator.
                type: string
            type: object
          type: array
      type: object
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        validators:
          description: validators contains all the queried validators.
          items:
            description: 'Validator defines a validator, together with the total amount
              of the

              Validator''s bond shares and their exchange rate to coins. Slashing
              results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated
              to

              this validator, the validator is credited with a delegation whose number
              of

              bond shares is based on the amount of coins delegated divided by the
              current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.'
            properties:
              commission:
                description: commission defines the commission parameters.
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates
                      to be used for creating a validator.
                    properties:
                      max_change_rate:
                        description: max_change_rate defines the maximum daily increase
                          of the validator commission, as a fraction.
                        type: string
                      max_rate:
                        description: max_rate defines the maximum commission rate
                          which validator can ever charge, as a fraction.
                        type: string
                      rate:
                        description: rate is the commission rate charged to delegators,
                          as a fraction.
                        type: string
                    type: object
                  update_time:
                    description: update_time is the last time the commission rate
                      was changed.
                    format: date-time
                    type: string
                type: object
              consensus_pubkey:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              delegator_shares:
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
                type: string
              description:
                description: description defines the description terms for the validator.
                properties:
                  details:
                    description: details define other optional details.
                    type: string
                  identity:
                    description: identity defines an optional identity signature (ex.
                      UPort or Keybase).
                    type: string
                  moniker:
                    description: moniker defines a human-readable name for the validator.
                    type: string
                  security_contact:
                    description: security_contact defines an optional email for security
                      contact.
                    type: string
                  website:
                    description: website defines an optional website link.
                    type: string
                type: object
              jailed:
                description: jailed defined whether the validator has been jailed
                  from bonded status or not.
                type: boolean
              min_self_delegation:
                description: min_self_delegation is the validator's self declared
                  minimum self delegation.
                type: string
              operator_address:
                description: operator_address defines the address of the validator's
                  operator; bech encoded in JSON.
                type: string
              status:
                default: BOND_STATUS_UNSPECIFIED
                description: status is the validator status (bonded/unbonding/unbonded).
                enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
                type: string
              tokens:
                description: tokens define the delegated tokens (incl. self-delegation).
                type: string
              unbonding_height:
                description: unbonding_height defines, if unbonding, the height at
                  which this validator has begun unbonding.
                format: int64
                type: string
              unbonding_time:
                description: unbonding_time defines, if unbonding, the min time for
                  the validator to complete unbonding.
                format: date-time
                type: string
            type: object
          type: array
      title: QueryValidatorsResponse is response type for the Query/Validators RPC
        method
      type: object
    cosmos.staking.v1beta1.Redelegation:
      description: 'Redelegation contains the list of a particular delegator''s redelegating
        bonds

        from a particular source validator to a particular destination validator.'
      properties:
        delegator_address:
          description: delegator_address is the bech32-encoded address of the delegator.
          type: string
        entries:
          description: entries are the redelegation entries.
          items:
            description: RedelegationEntry defines a redelegation object with relevant
              metadata.
            properties:
              completion_time:
                description: completion_time defines the unix time for redelegation
                  completion.
                format: date-time
                type: string
              creation_height:
                description: creation_height  defines the height which the redelegation
                  took place.
                format: int64
                type: string
              initial_balance:
                description: initial_balance defines the initial balance when redelegation
                  started.
                type: string
              shares_dst:
                description: shares_dst is the amount of destination-validator shares
                  created by redelegation.
                type: string
            type: object
          type: array
        validator_dst_address:
          description: validator_dst_address is the validator redelegation destination
            operator address.
          type: string
        validator_src_address:
          description: validator_src_address is the validator redelegation source
            operator address.
          type: string
      type: object
    cosmos.staking.v1beta1.RedelegationEntry:
      description: RedelegationEntry defines a redelegation object with relevant metadata.
      properties:
        completion_time:
          description: completion_time defines the unix time for redelegation completion.
          format: date-time
          type: string
        creation_height:
          description: creation_height  defines the height which the redelegation
            took place.
          format: int64
          type: string
        initial_balance:
          description: initial_balance defines the initial balance when redelegation
            started.
          type: string
        shares_dst:
          description: shares_dst is the amount of destination-validator shares created
            by redelegation.
          type: string
      type: object
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry
        except that it

        contains a balance in addition to shares which is more suitable for client

        responses.'
      properties:
        balance:
          type: string
        redelegation_entry:
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
          properties:
            completion_time:
              description: completion_time defines the unix time for redelegation
                completion.
              format: date-time
              type: string
            creation_height:
              description: creation_height  defines the height which the redelegation
                took place.
              format: int64
              type: string
            initial_balance:
              description: initial_balance defines the initial balance when redelegation
                started.
              type: string
            shares_dst:
              description: shares_dst is the amount of destination-validator shares
                created by redelegation.
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.RedelegationResponse:
      description: 'RedelegationResponse is equivalent to a Redelegation except that
        its entries

        contain a balance in addition to shares which is more suitable for client

        responses.'
      properties:
        entries:
          items:
            description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry
              except that it

              contains a balance in addition to shares which is more suitable for
              client

              responses.'
            properties:
              balance:
                type: string
              redelegation_entry:
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
                properties:
                  completion_time:
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the initial balance when
                      redelegation started.
                    type: string
                  shares_dst:
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                    type: string
                type: object
            type: object
          type: array
        redelegation:
          description: 'Redelegation contains the list of a particular delegator''s
            redelegating bonds

            from a particular source validator to a particular destination validator.'
          properties:
            delegator_address:
              description: delegator_address is the bech32-encoded address of the
                delegator.
              type: string
            entries:
              description: entries are the redelegation entries.
              items:
                description: RedelegationEntry defines a redelegation object with
                  relevant metadata.
                properties:
                  completion_time:
                    description: completion_time defines the unix time for redelegation
                      completion.
                    format: date-time
                    type: string
                  creation_height:
                    description: creation_height  defines the height which the redelegation
                      took place.
                    format: int64
                    type: string
                  initial_balance:
                    description: initial_balance defines the initial balance when
                      redelegation started.
                    type: string
                  shares_dst:
                    description: shares_dst is the amount of destination-validator
                      shares created by redelegation.
                    type: string
                type: object
              type: array
            validator_dst_address:
              description: validator_dst_address is the validator redelegation destination
                operator address.
              type: string
            validator_src_address:
              description: validator_src_address is the validator redelegation source
                operator address.
              type: string
          type: object
      type: object
    cosmos.staking.v1beta1.UnbondingDelegation:
      description: 'UnbondingDelegation stores all of a single delegator''s unbonding
        bonds

        for a single validator in an time-ordered list.'
      properties:
        delegator_address:
          description: delegator_address is the bech32-encoded address of the delegator.
          type: string
        entries:
          description: entries are the unbonding delegation entries.
          items:
            description: UnbondingDelegationEntry defines an unbonding object with
              relevant metadata.
            properties:
              balance:
                description: balance defines the tokens to receive at completion.
                type: string
              completion_time:
                description: completion_time is the unix time for unbonding completion.
                format: date-time
                type: string
              creation_height:
                description: creation_height is the height which the unbonding took
                  place.
                format: int64
                type: string
              initial_balance:
                description: initial_balance defines the tokens initially scheduled
                  to receive at completion.
                type: string
            type: object
          type: array
        validator_address:
          description: validator_address is the bech32-encoded address of the validator.
          type: string
      type: object
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      description: UnbondingDelegationEntry defines an unbonding object with relevant
        metadata.
      properties:
        balance:
          description: balance defines the tokens to receive at completion.
          type: string
        completion_time:
          description: completion_time is the unix time for unbonding completion.
          format: date-time
          type: string
        creation_height:
          description: creation_height is the height which the unbonding took place.
          format: int64
          type: string
        initial_balance:
          description: initial_balance defines the tokens initially scheduled to receive
            at completion.
          type: string
      type: object
    cosmos.staking.v1beta1.Validator:
      description: 'Validator defines a validator, together with the total amount
        of the

        Validator''s bond shares and their exchange rate to coins. Slashing results
        in

        a decrease in the exchange rate, allowing correct calculation of future

        undelegations without iterating over delegators. When coins are delegated
        to

        this validator, the validator is credited with a delegation whose number of

        bond shares is based on the amount of coins delegated divided by the current

        exchange rate. Voting power can be calculated as total bonded shares

        multiplied by exchange rate.'
      properties:
        commission:
          description: commission defines the commission parameters.
          properties:
            commission_rates:
              description: commission_rates defines the initial commission rates to
                be used for creating a validator.
              properties:
                max_change_rate:
                  description: max_change_rate defines the maximum daily increase
                    of the validator commission, as a fraction.
                  type: string
                max_rate:
                  description: max_rate defines the maximum commission rate which
                    validator can ever charge, as a fraction.
                  type: string
                rate:
                  description: rate is the commission rate charged to delegators,
                    as a fraction.
                  type: string
              type: object
            update_time:
              description: update_time is the last time the commission rate was changed.
              format: date-time
              type: string
          type: object
        consensus_pubkey:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        delegator_shares:
          description: delegator_shares defines total shares issued to a validator's
            delegators.
          type: string
        description:
          description: description defines the description terms for the validator.
          properties:
            details:
              description: details define other optional details.
              type: string
            identity:
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
              type: string
            moniker:
              description: moniker defines a human-readable name for the validator.
              type: string
            security_contact:
              description: security_contact defines an optional email for security
                contact.
              type: string
            website:
              description: website defines an optional website link.
              type: string
          type: object
        jailed:
          description: jailed defined whether the validator has been jailed from bonded
            status or not.
          type: boolean
        min_self_delegation:
          description: min_self_delegation is the validator's self declared minimum
            self delegation.
          type: string
        operator_address:
          description: operator_address defines the address of the validator's operator;
            bech encoded in JSON.
          type: string
        status:
          default: BOND_STATUS_UNSPECIFIED
          description: status is the validator status (bonded/unbonding/unbonded).
          enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
          type: string
        tokens:
          description: tokens define the delegated tokens (incl. self-delegation).
          type: string
        unbonding_height:
          description: unbonding_height defines, if unbonding, the height at which
            this validator has begun unbonding.
          format: int64
          type: string
        unbonding_time:
          description: unbonding_time defines, if unbonding, the min time for the
            validator to complete unbonding.
          format: date-time
          type: string
      type: object
    cosmos.tx.signing.v1beta1.SignMode:
      default: SIGN_MODE_UNSPECIFIED
      description: "SignMode represents a signing mode with its own security guarantees.\n\
        \n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing\
        \ mode and will be\nrejected\n\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies\
        \ a signing mode which uses SignDoc and is\nverified with raw bytes from Tx\n\
        \n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will\
        \ verify some\nhuman-readable textual representation on top of the binary\
        \ representation\nfrom SIGN_MODE_DIRECT\n\n - SIGN_MODE_LEGACY_AMINO_JSON:\
        \ SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n\
        Amino JSON and will be removed in the future\n\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191\
        \ specifies the sign mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\
        \nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n\
        but is not implemented on the SDK by default. To enable EIP-191, you need\n\
        to pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
        \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
        \nSince: cosmos-sdk 0.45.2"
      enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
      type: string
    cosmos.tx.v1beta1.AuthInfo:
      description: 'AuthInfo describes the fee and signer modes that are used to sign
        a

        transaction.'
      properties:
        fee:
          description: 'Fee is the fee and gas limit for the transaction. The first
            signer is the

            primary signer and the one which pays the fee. The fee can be calculated

            based on the cost of evaluating the body and doing signature verification

            of the signers. This can be estimated via simulation.'
          properties:
            amount:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: amount is the amount of coins to be paid as a fee
              type: array
            gas_limit:
              format: uint64
              title: 'gas_limit is the maximum gas that can be used in transaction
                processing

                before an out of gas error occurs'
              type: string
            granter:
              title: 'if set, the fee payer (either the first signer or the value
                of the payer field) requests that a fee grant be used

                to pay fees instead of the fee payer''s own balance. If an appropriate
                fee grant does not exist or the chain does

                not support fee grants, this will fail'
              type: string
            payer:
              description: 'if unset, the first signer is responsible for paying the
                fees. If set, the specified account must pay the fees.

                the payer must be a tx signer (and thus have signed this field in
                AuthInfo).

                setting this field does *not* change the ordering of required signers
                for the transaction.'
              type: string
          type: object
        signer_infos:
          description: 'signer_infos defines the signing modes for the required signers.
            The number

            and order of elements must match the required signers from TxBody''s

            messages. The first element is the primary signer and the one which pays

            the fee.'
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.SignerInfo'
          type: array
      type: object
    cosmos.tx.v1beta1.BroadcastMode:
      default: BROADCAST_MODE_UNSPECIFIED
      description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
        \ RPC method.\n\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n\
        \ - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode\
        \ where the client waits for\nthe tx to be committed in a block.\n\n - BROADCAST_MODE_SYNC:\
        \ BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits\
        \ for\na CheckTx execution response only.\n\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC\
        \ defines a tx broadcasting mode where the client returns\nimmediately."
      enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
      type: string
    cosmos.tx.v1beta1.BroadcastTxRequest:
      description: 'BroadcastTxRequest is the request type for the Service.BroadcastTxRequest

        RPC method.'
      properties:
        mode:
          default: BROADCAST_MODE_UNSPECIFIED
          description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
            \ RPC method.\n\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode\
            \ ordering\n - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx\
            \ broadcasting mode where the client waits for\nthe tx to be committed\
            \ in a block.\n\n - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a\
            \ tx broadcasting mode where the client waits for\na CheckTx execution\
            \ response only.\n\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines\
            \ a tx broadcasting mode where the client returns\nimmediately."
          enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
          type: string
        tx_bytes:
          description: tx_bytes is the raw transaction.
          format: byte
          type: string
      type: object
    cosmos.tx.v1beta1.BroadcastTxResponse:
      description: 'BroadcastTxResponse is the response type for the

        Service.BroadcastTx method.'
      properties:
        tx_response:
          description: 'TxResponse defines a structure containing relevant tx data
            and metadata. The

            tags are stringified and the log is JSON decoded.'
          properties:
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: Result bytes, if any.
              type: string
            events:
              description: 'Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the messages
                and those

                emitted from the ante handler. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.


                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
              items:
                description: 'Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.'
                properties:
                  attributes:
                    items:
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                      properties:
                        index:
                          type: boolean
                        key:
                          format: byte
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            info:
              description: Additional information. May be non-deterministic.
              type: string
            logs:
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
                properties:
                  events:
                    description: 'Events contains a slice of Event objects that were
                      emitted during some

                      execution.'
                    items:
                      description: 'StringEvent defines en Event object wrapper where
                        all the attributes

                        contain key/value pairs that are strings instead of raw bytes.'
                      properties:
                        attributes:
                          items:
                            description: 'Attribute defines an attribute wrapper where
                              the key and value are

                              strings instead of raw bytes.'
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: 'The output of the application''s logger (raw string).
                May be

                non-deterministic.'
              type: string
            timestamp:
              description: 'Time of the previous block. For heights > 1, it''s the
                weighted median of

                the timestamps of the valid votes in the block.LastCommit. For height
                == 1,

                it''s genesis time.'
              type: string
            tx:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            txhash:
              description: The transaction hash.
              type: string
          type: object
      type: object
    cosmos.tx.v1beta1.Fee:
      description: 'Fee includes the amount of coins paid in fees and the maximum

        gas to be used by the transaction. The ratio yields an effective "gasprice",

        which must be above some miminum to be accepted into the mempool.'
      properties:
        amount:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: amount is the amount of coins to be paid as a fee
          type: array
        gas_limit:
          format: uint64
          title: 'gas_limit is the maximum gas that can be used in transaction processing

            before an out of gas error occurs'
          type: string
        granter:
          title: 'if set, the fee payer (either the first signer or the value of the
            payer field) requests that a fee grant be used

            to pay fees instead of the fee payer''s own balance. If an appropriate
            fee grant does not exist or the chain does

            not support fee grants, this will fail'
          type: string
        payer:
          description: 'if unset, the first signer is responsible for paying the fees.
            If set, the specified account must pay the fees.

            the payer must be a tx signer (and thus have signed this field in AuthInfo).

            setting this field does *not* change the ordering of required signers
            for the transaction.'
          type: string
      type: object
    cosmos.tx.v1beta1.GetTxResponse:
      description: GetTxResponse is the response type for the Service.GetTx method.
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_response:
          description: 'TxResponse defines a structure containing relevant tx data
            and metadata. The

            tags are stringified and the log is JSON decoded.'
          properties:
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: Result bytes, if any.
              type: string
            events:
              description: 'Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the messages
                and those

                emitted from the ante handler. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.


                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
              items:
                description: 'Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.'
                properties:
                  attributes:
                    items:
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                      properties:
                        index:
                          type: boolean
                        key:
                          format: byte
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            info:
              description: Additional information. May be non-deterministic.
              type: string
            logs:
              description: The output of the application's logger (typed). May be
                non-deterministic.
              items:
                description: ABCIMessageLog defines a structure containing an indexed
                  tx ABCI message log.
                properties:
                  events:
                    description: 'Events contains a slice of Event objects that were
                      emitted during some

                      execution.'
                    items:
                      description: 'StringEvent defines en Event object wrapper where
                        all the attributes

                        contain key/value pairs that are strings instead of raw bytes.'
                      properties:
                        attributes:
                          items:
                            description: 'Attribute defines an attribute wrapper where
                              the key and value are

                              strings instead of raw bytes.'
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: 'The output of the application''s logger (raw string).
                May be

                non-deterministic.'
              type: string
            timestamp:
              description: 'Time of the previous block. For heights > 1, it''s the
                weighted median of

                the timestamps of the valid votes in the block.LastCommit. For height
                == 1,

                it''s genesis time.'
              type: string
            tx:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
            txhash:
              description: The transaction hash.
              type: string
          type: object
      type: object
    cosmos.tx.v1beta1.GetTxsEventResponse:
      description: 'GetTxsEventResponse is the response type for the Service.TxsByEvents

        RPC method.'
      properties:
        pagination:
          description: pagination defines an pagination for the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        tx_responses:
          description: tx_responses is the list of queried TxResponses.
          items:
            description: 'TxResponse defines a structure containing relevant tx data
              and metadata. The

              tags are stringified and the log is JSON decoded.'
            properties:
              code:
                description: Response code.
                format: int64
                type: integer
              codespace:
                title: Namespace for the Code
                type: string
              data:
                description: Result bytes, if any.
                type: string
              events:
                description: 'Events defines all the events emitted by processing
                  a transaction. Note,

                  these events include those emitted by processing all the messages
                  and those

                  emitted from the ante handler. Whereas Logs contains the events,
                  with

                  additional metadata, emitted only by processing the messages.


                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
                items:
                  description: 'Event allows application developers to attach additional
                    information to

                    ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                    Later, transactions may be queried using these events.'
                  properties:
                    attributes:
                      items:
                        description: EventAttribute is a single key-value pair, associated
                          with an event.
                        properties:
                          index:
                            type: boolean
                          key:
                            format: byte
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                type: array
              gas_used:
                description: Amount of gas consumed by transaction.
                format: int64
                type: string
              gas_wanted:
                description: Amount of gas requested for transaction.
                format: int64
                type: string
              height:
                format: int64
                title: The block height
                type: string
              info:
                description: Additional information. May be non-deterministic.
                type: string
              logs:
                description: The output of the application's logger (typed). May be
                  non-deterministic.
                items:
                  description: ABCIMessageLog defines a structure containing an indexed
                    tx ABCI message log.
                  properties:
                    events:
                      description: 'Events contains a slice of Event objects that
                        were emitted during some

                        execution.'
                      items:
                        description: 'StringEvent defines en Event object wrapper
                          where all the attributes

                          contain key/value pairs that are strings instead of raw
                          bytes.'
                        properties:
                          attributes:
                            items:
                              description: 'Attribute defines an attribute wrapper
                                where the key and value are

                                strings instead of raw bytes.'
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          type:
                            type: string
                        type: object
                      type: array
                    log:
                      type: string
                    msg_index:
                      format: int64
                      type: integer
                  type: object
                type: array
              raw_log:
                description: 'The output of the application''s logger (raw string).
                  May be

                  non-deterministic.'
                type: string
              timestamp:
                description: 'Time of the previous block. For heights > 1, it''s the
                  weighted median of

                  the timestamps of the valid votes in the block.LastCommit. For height
                  == 1,

                  it''s genesis time.'
                type: string
              tx:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              txhash:
                description: The transaction hash.
                type: string
            type: object
          type: array
        txs:
          description: txs is the list of queried transactions.
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
          type: array
      type: object
    cosmos.tx.v1beta1.ModeInfo:
      description: ModeInfo describes the signing mode of a single or nested multisig
        signer.
      properties:
        multi:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo.Multi'
        single:
          properties:
            mode:
              default: SIGN_MODE_UNSPECIFIED
              description: "SignMode represents a signing mode with its own security\
                \ guarantees.\n\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED\
                \ specifies an unknown signing mode and will be\nrejected\n\n - SIGN_MODE_DIRECT:\
                \ SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and\
                \ is\nverified with raw bytes from Tx\n\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL\
                \ is a future signing mode that will verify some\nhuman-readable textual\
                \ representation on top of the binary representation\nfrom SIGN_MODE_DIRECT\n\
                \n - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a\
                \ backwards compatibility mode which uses\nAmino JSON and will be\
                \ removed in the future\n\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191\
                \ specifies the sign mode for EIP 191 signing on the Cosmos\nSDK.\
                \ Ref: https://eips.ethereum.org/EIPS/eip-191\n\nCurrently, SIGN_MODE_EIP_191\
                \ is registered as a SignMode enum variant,\nbut is not implemented\
                \ on the SDK by default. To enable EIP-191, you need\nto pass a custom\
                \ `TxConfig` that has an implementation of\n`SignModeHandler` for\
                \ EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
                \nSince: cosmos-sdk 0.45.2"
              enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_LEGACY_AMINO_JSON
              - SIGN_MODE_EIP_191
              title: mode is the signing mode of the single signer
              type: string
          title: single represents a single signer
          type: object
      type: object
    cosmos.tx.v1beta1.ModeInfo.Multi:
      properties:
        bitarray:
          description: 'CompactBitArray is an implementation of a space efficient
            bit array.

            This is used to ensure that the encoded data takes up a minimal amount
            of

            space after proto encoding.

            This is not thread safe, and is not intended for concurrent usage.'
          properties:
            elems:
              format: byte
              type: string
            extra_bits_stored:
              format: int64
              type: integer
          title: bitarray specifies which keys within the multisig are signing
          type: object
        mode_infos:
          items:
            $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
          title: 'mode_infos is the corresponding modes of the signers of the multisig

            which could include nested multisig public keys'
          type: array
      title: Multi is the mode info for a multisig public key
      type: object
    cosmos.tx.v1beta1.ModeInfo.Single:
      properties:
        mode:
          default: SIGN_MODE_UNSPECIFIED
          description: "SignMode represents a signing mode with its own security guarantees.\n\
            \n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown\
            \ signing mode and will be\nrejected\n\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT\
            \ specifies a signing mode which uses SignDoc and is\nverified with raw\
            \ bytes from Tx\n\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future\
            \ signing mode that will verify some\nhuman-readable textual representation\
            \ on top of the binary representation\nfrom SIGN_MODE_DIRECT\n\n - SIGN_MODE_LEGACY_AMINO_JSON:\
            \ SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which\
            \ uses\nAmino JSON and will be removed in the future\n\n - SIGN_MODE_EIP_191:\
            \ SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the\
            \ Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\nCurrently,\
            \ SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut is\
            \ not implemented on the SDK by default. To enable EIP-191, you need\n\
            to pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
            \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
            \nSince: cosmos-sdk 0.45.2"
          enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_LEGACY_AMINO_JSON
          - SIGN_MODE_EIP_191
          title: mode is the signing mode of the single signer
          type: string
      title: 'Single is the mode info for a single signer. It is structured as a message

        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the

        future'
      type: object
    cosmos.tx.v1beta1.OrderBy:
      default: ORDER_BY_UNSPECIFIED
      description: "- ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
        \ sorting order. OrderBy defaults to ASC in this case.\n\n - ORDER_BY_ASC:\
        \ ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines\
        \ descending order"
      enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
      title: OrderBy defines the sorting order
      type: string
    cosmos.tx.v1beta1.SignerInfo:
      description: 'SignerInfo describes the public key and signing mode of a single
        top-level

        signer.'
      properties:
        mode_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.ModeInfo'
        public_key:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
        sequence:
          description: 'sequence is the sequence of the account, which describes the

            number of committed transactions signed by a given address. It is used
            to

            prevent replay attacks.'
          format: uint64
          type: string
      type: object
    cosmos.tx.v1beta1.SimulateRequest:
      description: 'SimulateRequest is the request type for the Service.Simulate

        RPC method.'
      properties:
        tx:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.Tx'
        tx_bytes:
          description: 'tx_bytes is the raw transaction.


            Since: cosmos-sdk 0.43'
          format: byte
          type: string
      type: object
    cosmos.tx.v1beta1.SimulateResponse:
      description: 'SimulateResponse is the response type for the

        Service.SimulateRPC method.'
      properties:
        gas_info:
          description: gas_info is the information about gas used in the simulation.
          properties:
            gas_used:
              description: GasUsed is the amount of gas actually consumed.
              format: uint64
              type: string
            gas_wanted:
              description: GasWanted is the maximum units of work we allow this tx
                to perform.
              format: uint64
              type: string
          type: object
        result:
          description: result is the result of the simulation.
          properties:
            data:
              description: 'Data is any data returned from message or handler execution.
                It MUST be

                length prefixed in order to separate data from multiple message executions.'
              format: byte
              type: string
            events:
              description: 'Events contains a slice of Event objects that were emitted
                during message

                or handler execution.'
              items:
                description: 'Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.'
                properties:
                  attributes:
                    items:
                      description: EventAttribute is a single key-value pair, associated
                        with an event.
                      properties:
                        index:
                          type: boolean
                        key:
                          format: byte
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            log:
              description: Log contains the log information from message or handler
                execution.
              type: string
          type: object
      type: object
    cosmos.tx.v1beta1.Tx:
      description: Tx is the standard type used for broadcasting transactions.
      properties:
        auth_info:
          $ref: '#/components/schemas/cosmos.tx.v1beta1.AuthInfo'
        body:
          description: TxBody is the body of a transaction that all signers sign over.
          properties:
            extension_options:
              items:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              title: 'extension_options are arbitrary options that can be added by
                chains

                when the default options are not sufficient. If any of these are present

                and can''t be handled, the transaction will be rejected'
              type: array
            memo:
              description: 'memo is any arbitrary note/comment to be added to the
                transaction.

                WARNING: in clients, any publicly exposed text should not be called
                memo,

                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).'
              type: string
            messages:
              description: 'messages is a list of messages to be executed. The required
                signers of

                those messages define the number and order of elements in AuthInfo''s

                signer_infos and Tx''s signatures. Each required signer address is
                added to

                the list only the first time it occurs.

                By convention, the first required signer (usually from the first message)

                is referred to as the primary signer and pays the fee for the whole

                transaction.'
              items:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              type: array
            non_critical_extension_options:
              items:
                description: "`Any` contains an arbitrary serialized protocol buffer\
                  \ message along with a\nURL that describes the type of the serialized\
                  \ message.\n\nProtobuf library provides support to pack/unpack Any\
                  \ values in the form\nof utility functions or additional generated\
                  \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                  \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                  \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                  \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                  \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                  \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                  \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any\
                  \ = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                  \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack\
                  \ a message in Go\n\n     foo := &pb.Foo{...}\n     any, err :=\
                  \ ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n    \
                  \ if err := ptypes.UnmarshalAny(any, foo); err != nil {\n      \
                  \ ...\n     }\n\nThe pack methods provided by protobuf library will\
                  \ by default use\n'type.googleapis.com/full.type.name' as the type\
                  \ URL and the unpack\nmethods only use the fully qualified type\
                  \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                  \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                  \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                  \ embedded message, with an\nadditional field `@type` which contains\
                  \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                  \ Person {\n      string first_name = 1;\n      string last_name\
                  \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                  ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                  \    }\n\nIf the embedded message type is well-known and has a custom\
                  \ JSON\nrepresentation, that representation will be embedded adding\
                  \ a field\n`value` which holds the custom JSON in addition to the\
                  \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                  \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                  ,\n      \"value\": \"1.212s\"\n    }"
                properties:
                  type_url:
                    description: "A URL/resource name that uniquely identifies the\
                      \ type of the serialized\nprotocol buffer message. This string\
                      \ must contain at least\none \"/\" character. The last segment\
                      \ of the URL's path must represent\nthe fully qualified name\
                      \ of the type (as in\n`path/google.protobuf.Duration`). The\
                      \ name should be in a canonical form\n(e.g., leading \".\" is\
                      \ not accepted).\n\nIn practice, teams usually precompile into\
                      \ the binary all types that they\nexpect it to use in the context\
                      \ of Any. However, for URLs which use the\nscheme `http`, `https`,\
                      \ or no scheme, one can optionally set up a type\nserver that\
                      \ maps type URLs to message definitions as follows:\n\n* If\
                      \ no scheme is provided, `https` is assumed.\n* An HTTP GET\
                      \ on the URL must yield a [google.protobuf.Type][]\n\n  value\
                      \ in binary format, or produce an error.\n* Applications are\
                      \ allowed to cache lookup results based on the\n\n  URL, or\
                      \ have them precompiled into a binary to avoid any\n  lookup.\
                      \ Therefore, binary compatibility needs to be preserved\n  on\
                      \ changes to types. (Use versioned type names to manage\n  breaking\
                      \ changes.)\n\nNote: this functionality is not currently available\
                      \ in the official\nprotobuf release, and it is not used for\
                      \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                      \ other than `http`, `https` (or the empty scheme) might be\n\
                      used with implementation specific semantics."
                    type: string
                  value:
                    description: Must be a valid serialized protocol buffer of the
                      above specified type.
                    format: byte
                    type: string
                type: object
              title: 'extension_options are arbitrary options that can be added by
                chains

                when the default options are not sufficient. If any of these are present

                and can''t be handled, they will be ignored'
              type: array
            timeout_height:
              format: uint64
              title: 'timeout is the block height after which this transaction will
                not

                be processed by the chain'
              type: string
          title: body is the processable content of the transaction
          type: object
        signatures:
          description: 'signatures is a list of signatures that matches the length
            and order of

            AuthInfo''s signer_infos to allow connecting signature meta information
            like

            public key and signing mode by position.'
          items:
            format: byte
            type: string
          type: array
      type: object
    cosmos.tx.v1beta1.TxBody:
      description: TxBody is the body of a transaction that all signers sign over.
      properties:
        extension_options:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          title: 'extension_options are arbitrary options that can be added by chains

            when the default options are not sufficient. If any of these are present

            and can''t be handled, the transaction will be rejected'
          type: array
        memo:
          description: 'memo is any arbitrary note/comment to be added to the transaction.

            WARNING: in clients, any publicly exposed text should not be called memo,

            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).'
          type: string
        messages:
          description: 'messages is a list of messages to be executed. The required
            signers of

            those messages define the number and order of elements in AuthInfo''s

            signer_infos and Tx''s signatures. Each required signer address is added
            to

            the list only the first time it occurs.

            By convention, the first required signer (usually from the first message)

            is referred to as the primary signer and pays the fee for the whole

            transaction.'
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
        non_critical_extension_options:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          title: 'extension_options are arbitrary options that can be added by chains

            when the default options are not sufficient. If any of these are present

            and can''t be handled, they will be ignored'
          type: array
        timeout_height:
          format: uint64
          title: 'timeout is the block height after which this transaction will not

            be processed by the chain'
          type: string
      type: object
    cosmos.upgrade.v1beta1.ModuleVersion:
      description: 'ModuleVersion specifies a module and its consensus version.


        Since: cosmos-sdk 0.43'
      properties:
        name:
          title: name of the app module
          type: string
        version:
          format: uint64
          title: consensus version of the app module
          type: string
      type: object
    cosmos.upgrade.v1beta1.Plan:
      description: Plan specifies information about a planned upgrade and when it
        should occur.
      properties:
        height:
          description: 'The height at which the upgrade must be performed.

            Only used if Time is not set.'
          format: int64
          type: string
        info:
          title: 'Any application specific upgrade info to be included on-chain

            such as a git commit that validators could automatically upgrade to'
          type: string
        name:
          description: 'Sets the name for the upgrade. This name will be used by the
            upgraded

            version of the software to apply any special "on-upgrade" commands during

            the first BeginBlock method after the upgrade is applied. It is also used

            to detect whether a software version can handle a given upgrade. If no

            upgrade handler with this name has been set in the software, it will be

            assumed that the software is out-of-date when the upgrade Time or Height
            is

            reached and the software will exit.'
          type: string
        time:
          description: 'Deprecated: Time based upgrades have been deprecated. Time
            based upgrade logic

            has been removed from the SDK.

            If this field is not empty, an error will be thrown.'
          format: date-time
          type: string
        upgraded_client_state:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
      type: object
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      description: 'QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
        RPC

        method.'
      properties:
        height:
          description: height is the block height at which the plan was applied.
          format: int64
          type: string
      type: object
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      description: 'QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
        RPC

        method.'
      properties:
        plan:
          description: plan is the current upgrade plan.
          properties:
            height:
              description: 'The height at which the upgrade must be performed.

                Only used if Time is not set.'
              format: int64
              type: string
            info:
              title: 'Any application specific upgrade info to be included on-chain

                such as a git commit that validators could automatically upgrade to'
              type: string
            name:
              description: 'Sets the name for the upgrade. This name will be used
                by the upgraded

                version of the software to apply any special "on-upgrade" commands
                during

                the first BeginBlock method after the upgrade is applied. It is also
                used

                to detect whether a software version can handle a given upgrade. If
                no

                upgrade handler with this name has been set in the software, it will
                be

                assumed that the software is out-of-date when the upgrade Time or
                Height is

                reached and the software will exit.'
              type: string
            time:
              description: 'Deprecated: Time based upgrades have been deprecated.
                Time based upgrade logic

                has been removed from the SDK.

                If this field is not empty, an error will be thrown.'
              format: date-time
              type: string
            upgraded_client_state:
              description: "`Any` contains an arbitrary serialized protocol buffer\
                \ message along with a\nURL that describes the type of the serialized\
                \ message.\n\nProtobuf library provides support to pack/unpack Any\
                \ values in the form\nof utility functions or additional generated\
                \ methods of the Any type.\n\nExample 1: Pack and unpack a message\
                \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo = ...;\n\
                \    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                \ and unpack a message in Python.\n\n    foo = Foo(...)\n    any =\
                \ Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a\
                \ message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
                \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                \ as the type URL and the unpack\nmethods only use the fully qualified\
                \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
                \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
                \ embedded message, with an\nadditional field `@type` which contains\
                \ the type URL. Example:\n\n\n    package google.profile;\n    message\
                \ Person {\n      string first_name = 1;\n      string last_name =\
                \ 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                \    }\n\nIf the embedded message type is well-known and has a custom\
                \ JSON\nrepresentation, that representation will be embedded adding\
                \ a field\n`value` which holds the custom JSON in addition to the\
                \ `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                ,\n      \"value\": \"1.212s\"\n    }"
              properties:
                type_url:
                  description: "A URL/resource name that uniquely identifies the type\
                    \ of the serialized\nprotocol buffer message. This string must\
                    \ contain at least\none \"/\" character. The last segment of the\
                    \ URL's path must represent\nthe fully qualified name of the type\
                    \ (as in\n`path/google.protobuf.Duration`). The name should be\
                    \ in a canonical form\n(e.g., leading \".\" is not accepted).\n\
                    \nIn practice, teams usually precompile into the binary all types\
                    \ that they\nexpect it to use in the context of Any. However,\
                    \ for URLs which use the\nscheme `http`, `https`, or no scheme,\
                    \ one can optionally set up a type\nserver that maps type URLs\
                    \ to message definitions as follows:\n\n* If no scheme is provided,\
                    \ `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                    \n  value in binary format, or produce an error.\n* Applications\
                    \ are allowed to cache lookup results based on the\n\n  URL, or\
                    \ have them precompiled into a binary to avoid any\n  lookup.\
                    \ Therefore, binary compatibility needs to be preserved\n  on\
                    \ changes to types. (Use versioned type names to manage\n  breaking\
                    \ changes.)\n\nNote: this functionality is not currently available\
                    \ in the official\nprotobuf release, and it is not used for type\
                    \ URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
                    \ `http`, `https` (or the empty scheme) might be\nused with implementation\
                    \ specific semantics."
                  type: string
                value:
                  description: Must be a valid serialized protocol buffer of the above
                    specified type.
                  format: byte
                  type: string
              type: object
          type: object
      type: object
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      description: 'QueryModuleVersionsResponse is the response type for the Query/ModuleVersions

        RPC method.


        Since: cosmos-sdk 0.43'
      properties:
        module_versions:
          description: module_versions is a list of module names with their consensus
            versions.
          items:
            description: 'ModuleVersion specifies a module and its consensus version.


              Since: cosmos-sdk 0.43'
            properties:
              name:
                title: name of the app module
                type: string
              version:
                format: uint64
                title: consensus version of the app module
                type: string
            type: object
          type: array
      type: object
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      description: 'QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState

        RPC method.'
      properties:
        upgraded_consensus_state:
          format: byte
          title: 'Since: cosmos-sdk 0.43'
          type: string
      type: object
    google.protobuf.Any:
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a\nURL that describes the type of the serialized message.\n\n\
        Protobuf library provides support to pack/unpack Any values in the form\n\
        of utility functions or additional generated methods of the Any type.\n\n\
        Example 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n   \
        \ Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n\
        \      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n\n \
        \   Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack\
        \ a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
        \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\
        \n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n\
        \     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n\
        \     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n\
        \     }\n\nThe pack methods provided by protobuf library will by default use\n\
        'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods\
        \ only use the fully qualified type name after the last '/'\nin the type URL,\
        \ for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\
        ====\nThe JSON representation of an `Any` value uses the regular\nrepresentation\
        \ of the deserialized, embedded message, with an\nadditional field `@type`\
        \ which contains the type URL. Example:\n\n\n    package google.profile;\n\
        \    message Person {\n      string first_name = 1;\n      string last_name\
        \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
        ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\n\
        If the embedded message type is well-known and has a custom JSON\nrepresentation,\
        \ that representation will be embedded adding a field\n`value` which holds\
        \ the custom JSON in addition to the `@type`\nfield. Example (for message\
        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
        ,\n      \"value\": \"1.212s\"\n    }"
      properties:
        type_url:
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized\nprotocol buffer message. This string must contain at least\n\
            one \"/\" character. The last segment of the URL's path must represent\n\
            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
            \ The name should be in a canonical form\n(e.g., leading \".\" is not\
            \ accepted).\n\nIn practice, teams usually precompile into the binary\
            \ all types that they\nexpect it to use in the context of Any. However,\
            \ for URLs which use the\nscheme `http`, `https`, or no scheme, one can\
            \ optionally set up a type\nserver that maps type URLs to message definitions\
            \ as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An\
            \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\n  value\
            \ in binary format, or produce an error.\n* Applications are allowed to\
            \ cache lookup results based on the\n\n  URL, or have them precompiled\
            \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
            \ needs to be preserved\n  on changes to types. (Use versioned type names\
            \ to manage\n  breaking changes.)\n\nNote: this functionality is not currently\
            \ available in the official\nprotobuf release, and it is not used for\
            \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than\
            \ `http`, `https` (or the empty scheme) might be\nused with implementation\
            \ specific semantics."
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          type: string
      type: object
    grpc.gateway.runtime.Error:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
        error:
          type: string
        message:
          type: string
      type: object
    osmosis.epochs.v1beta1.EpochInfo:
      description: 'EpochInfo is a struct that describes the data going into

        a timer defined by the x/epochs module.'
      properties:
        current_epoch:
          description: 'current_epoch is the current epoch number, or in other words,

            how many times has the timer ''ticked''.

            The first tick (current_epoch=1) is defined as

            the first block whose blocktime is greater than the EpochInfo start_time.'
          format: int64
          type: string
        current_epoch_start_height:
          format: int64
          title: 'current_epoch_start_height is the block height at which the current
            epoch

            started. (The block height at which the timer last ticked)'
          type: string
        current_epoch_start_time:
          description: 'current_epoch_start_time describes the start time of the current
            timer

            interval. The interval is (current_epoch_start_time,

            current_epoch_start_time + duration] When the timer ticks, this is set
            to

            current_epoch_start_time = last_epoch_start_time + duration only one timer

            tick for a given identifier can occur per block.


            NOTE! The current_epoch_start_time may diverge significantly from the

            wall-clock time the epoch began at. Wall-clock time of epoch start may
            be

            >> current_epoch_start_time. Suppose current_epoch_start_time = 10,

            duration = 5. Suppose the chain goes offline at t=14, and comes back online

            at t=30, and produces blocks at every successive time. (t=31, 32, etc.)

            * The t=30 block will start the epoch for (10, 15]

            * The t=31 block will start the epoch for (15, 20]

            * The t=32 block will start the epoch for (20, 25]

            * The t=33 block will start the epoch for (25, 30]

            * The t=34 block will start the epoch for (30, 35]

            * The **t=36** block will start the epoch for (35, 40]'
          format: date-time
          type: string
        duration:
          description: 'duration is the time in between epoch ticks.

            In order for intended behavior to be met, duration should

            be greater than the chains expected block time.

            Duration must be non-zero.'
          type: string
        epoch_counting_started:
          description: 'epoch_counting_started is a boolean, that indicates whether
            this

            epoch timer has began yet.'
          type: boolean
        identifier:
          description: identifier is a unique reference to this particular timer.
          type: string
        start_time:
          description: 'start_time is the time at which the timer first ever ticks.

            If start_time is in the future, the epoch will not begin until the start

            time.'
          format: date-time
          type: string
      type: object
    osmosis.epochs.v1beta1.QueryCurrentEpochResponse:
      properties:
        current_epoch:
          format: int64
          type: string
      type: object
    osmosis.epochs.v1beta1.QueryEpochsInfoResponse:
      properties:
        epochs:
          items:
            description: 'EpochInfo is a struct that describes the data going into

              a timer defined by the x/epochs module.'
            properties:
              current_epoch:
                description: 'current_epoch is the current epoch number, or in other
                  words,

                  how many times has the timer ''ticked''.

                  The first tick (current_epoch=1) is defined as

                  the first block whose blocktime is greater than the EpochInfo start_time.'
                format: int64
                type: string
              current_epoch_start_height:
                format: int64
                title: 'current_epoch_start_height is the block height at which the
                  current epoch

                  started. (The block height at which the timer last ticked)'
                type: string
              current_epoch_start_time:
                description: 'current_epoch_start_time describes the start time of
                  the current timer

                  interval. The interval is (current_epoch_start_time,

                  current_epoch_start_time + duration] When the timer ticks, this
                  is set to

                  current_epoch_start_time = last_epoch_start_time + duration only
                  one timer

                  tick for a given identifier can occur per block.


                  NOTE! The current_epoch_start_time may diverge significantly from
                  the

                  wall-clock time the epoch began at. Wall-clock time of epoch start
                  may be

                  >> current_epoch_start_time. Suppose current_epoch_start_time =
                  10,

                  duration = 5. Suppose the chain goes offline at t=14, and comes
                  back online

                  at t=30, and produces blocks at every successive time. (t=31, 32,
                  etc.)

                  * The t=30 block will start the epoch for (10, 15]

                  * The t=31 block will start the epoch for (15, 20]

                  * The t=32 block will start the epoch for (20, 25]

                  * The t=33 block will start the epoch for (25, 30]

                  * The t=34 block will start the epoch for (30, 35]

                  * The **t=36** block will start the epoch for (35, 40]'
                format: date-time
                type: string
              duration:
                description: 'duration is the time in between epoch ticks.

                  In order for intended behavior to be met, duration should

                  be greater than the chains expected block time.

                  Duration must be non-zero.'
                type: string
              epoch_counting_started:
                description: 'epoch_counting_started is a boolean, that indicates
                  whether this

                  epoch timer has began yet.'
                type: boolean
              identifier:
                description: identifier is a unique reference to this particular timer.
                type: string
              start_time:
                description: 'start_time is the time at which the timer first ever
                  ticks.

                  If start_time is in the future, the epoch will not begin until the
                  start

                  time.'
                format: date-time
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.BalancerToConcentratedPoolLink:
      description: 'BalancerToConcentratedPoolLink defines a single link between a
        single

        balancer pool and a single concentrated liquidity pool. This link is used
        to

        allow a balancer pool to migrate to a single canonical full range

        concentrated liquidity pool position

        A balancer pool can be linked to a maximum of one cl pool, and a cl pool can

        be linked to a maximum of one balancer pool.'
      properties:
        balancer_pool_id:
          format: uint64
          type: string
        cl_pool_id:
          format: uint64
          type: string
      type: object
    osmosis.gamm.v1beta1.MigrationRecords:
      properties:
        balancer_to_concentrated_pool_links:
          items:
            description: 'BalancerToConcentratedPoolLink defines a single link between
              a single

              balancer pool and a single concentrated liquidity pool. This link is
              used to

              allow a balancer pool to migrate to a single canonical full range

              concentrated liquidity pool position

              A balancer pool can be linked to a maximum of one cl pool, and a cl
              pool can

              be linked to a maximum of one balancer pool.'
            properties:
              balancer_pool_id:
                format: uint64
                type: string
              cl_pool_id:
                format: uint64
                type: string
            type: object
          type: array
      title: 'MigrationRecords contains all the links between balancer and concentrated

        pools'
      type: object
    osmosis.gamm.v1beta1.QueryCFMMConcentratedPoolLinksResponse:
      properties:
        migration_records:
          properties:
            balancer_to_concentrated_pool_links:
              items:
                description: 'BalancerToConcentratedPoolLink defines a single link
                  between a single

                  balancer pool and a single concentrated liquidity pool. This link
                  is used to

                  allow a balancer pool to migrate to a single canonical full range

                  concentrated liquidity pool position

                  A balancer pool can be linked to a maximum of one cl pool, and a
                  cl pool can

                  be linked to a maximum of one balancer pool.'
                properties:
                  balancer_pool_id:
                    format: uint64
                    type: string
                  cl_pool_id:
                    format: uint64
                    type: string
                type: object
              type: array
          title: 'MigrationRecords contains all the links between balancer and concentrated

            pools'
          type: object
      type: object
    osmosis.gamm.v1beta1.QueryCalcExitPoolCoinsFromSharesResponse:
      properties:
        tokens_out:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QueryCalcJoinPoolNoSwapSharesResponse:
      properties:
        shares_out:
          type: string
        tokens_out:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QueryCalcJoinPoolSharesResponse:
      properties:
        share_out_amount:
          type: string
        tokens_out:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QueryConcentratedPoolIdLinkFromCFMMResponse:
      properties:
        concentrated_pool_id:
          format: uint64
          type: string
      type: object
    osmosis.gamm.v1beta1.QueryNumPoolsResponse:
      properties:
        num_pools:
          format: uint64
          type: string
      type: object
    osmosis.gamm.v1beta1.QueryPoolParamsResponse:
      properties:
        params:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
      type: object
    osmosis.gamm.v1beta1.QueryPoolResponse:
      properties:
        pool:
          description: "`Any` contains an arbitrary serialized protocol buffer message\
            \ along with a\nURL that describes the type of the serialized message.\n\
            \nProtobuf library provides support to pack/unpack Any values in the form\n\
            of utility functions or additional generated methods of the Any type.\n\
            \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
            \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
            \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\
            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if\
            \ (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n\
            \ Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
            \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
            \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
            \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
            \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
            \ as the type URL and the unpack\nmethods only use the fully qualified\
            \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
            \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
            \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
            \ embedded message, with an\nadditional field `@type` which contains the\
            \ type URL. Example:\n\n\n    package google.profile;\n    message Person\
            \ {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\
            \n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
            ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\
            \nIf the embedded message type is well-known and has a custom JSON\nrepresentation,\
            \ that representation will be embedded adding a field\n`value` which holds\
            \ the custom JSON in addition to the `@type`\nfield. Example (for message\
            \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
            ,\n      \"value\": \"1.212s\"\n    }"
          properties:
            type_url:
              description: "A URL/resource name that uniquely identifies the type\
                \ of the serialized\nprotocol buffer message. This string must contain\
                \ at least\none \"/\" character. The last segment of the URL's path\
                \ must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                \ The name should be in a canonical form\n(e.g., leading \".\" is\
                \ not accepted).\n\nIn practice, teams usually precompile into the\
                \ binary all types that they\nexpect it to use in the context of Any.\
                \ However, for URLs which use the\nscheme `http`, `https`, or no scheme,\
                \ one can optionally set up a type\nserver that maps type URLs to\
                \ message definitions as follows:\n\n* If no scheme is provided, `https`\
                \ is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                \n  value in binary format, or produce an error.\n* Applications are\
                \ allowed to cache lookup results based on the\n\n  URL, or have them\
                \ precompiled into a binary to avoid any\n  lookup. Therefore, binary\
                \ compatibility needs to be preserved\n  on changes to types. (Use\
                \ versioned type names to manage\n  breaking changes.)\n\nNote: this\
                \ functionality is not currently available in the official\nprotobuf\
                \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                \nSchemes other than `http`, `https` (or the empty scheme) might be\n\
                used with implementation specific semantics."
              type: string
            value:
              description: Must be a valid serialized protocol buffer of the above
                specified type.
              format: byte
              type: string
          type: object
      title: 'Deprecated: please use the alternative in x/poolmanager'
      type: object
    osmosis.gamm.v1beta1.QueryPoolTypeResponse:
      properties:
        pool_type:
          type: string
      type: object
    osmosis.gamm.v1beta1.QueryPoolsResponse:
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        pools:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QueryPoolsWithFilterResponse:
      properties:
        pagination:
          description: pagination defines the pagination in the response.
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
        pools:
          items:
            description: "`Any` contains an arbitrary serialized protocol buffer message\
              \ along with a\nURL that describes the type of the serialized message.\n\
              \nProtobuf library provides support to pack/unpack Any values in the\
              \ form\nof utility functions or additional generated methods of the\
              \ Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n\n  \
              \  Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n \
              \   if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and\
              \ unpack a message in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
              \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
              \    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo\
              \ = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
              \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message\
              \ in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
              \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
              \ foo); err != nil {\n       ...\n     }\n\nThe pack methods provided\
              \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
              \ as the type URL and the unpack\nmethods only use the fully qualified\
              \ type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
              \ will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
              \ of an `Any` value uses the regular\nrepresentation of the deserialized,\
              \ embedded message, with an\nadditional field `@type` which contains\
              \ the type URL. Example:\n\n\n    package google.profile;\n    message\
              \ Person {\n      string first_name = 1;\n      string last_name = 2;\n\
              \    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
              ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n  \
              \  }\n\nIf the embedded message type is well-known and has a custom\
              \ JSON\nrepresentation, that representation will be embedded adding\
              \ a field\n`value` which holds the custom JSON in addition to the `@type`\n\
              field. Example (for message [google.protobuf.Duration][]):\n\n\n   \
              \ {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
              ,\n      \"value\": \"1.212s\"\n    }"
            properties:
              type_url:
                description: "A URL/resource name that uniquely identifies the type\
                  \ of the serialized\nprotocol buffer message. This string must contain\
                  \ at least\none \"/\" character. The last segment of the URL's path\
                  \ must represent\nthe fully qualified name of the type (as in\n\
                  `path/google.protobuf.Duration`). The name should be in a canonical\
                  \ form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams\
                  \ usually precompile into the binary all types that they\nexpect\
                  \ it to use in the context of Any. However, for URLs which use the\n\
                  scheme `http`, `https`, or no scheme, one can optionally set up\
                  \ a type\nserver that maps type URLs to message definitions as follows:\n\
                  \n* If no scheme is provided, `https` is assumed.\n* An HTTP GET\
                  \ on the URL must yield a [google.protobuf.Type][]\n\n  value in\
                  \ binary format, or produce an error.\n* Applications are allowed\
                  \ to cache lookup results based on the\n\n  URL, or have them precompiled\
                  \ into a binary to avoid any\n  lookup. Therefore, binary compatibility\
                  \ needs to be preserved\n  on changes to types. (Use versioned type\
                  \ names to manage\n  breaking changes.)\n\nNote: this functionality\
                  \ is not currently available in the official\nprotobuf release,\
                  \ and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
                  \nSchemes other than `http`, `https` (or the empty scheme) might\
                  \ be\nused with implementation specific semantics."
                type: string
              value:
                description: Must be a valid serialized protocol buffer of the above
                  specified type.
                format: byte
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QuerySpotPriceResponse:
      description: 'QuerySpotPriceResponse defines the gRPC response structure for
        a SpotPrice

        query.'
      properties:
        spot_price:
          title: String of the Dec. Ex) 10.203uatom
          type: string
      type: object
    osmosis.gamm.v1beta1.QuerySwapExactAmountInResponse:
      properties:
        token_out_amount:
          type: string
      type: object
    osmosis.gamm.v1beta1.QuerySwapExactAmountOutResponse:
      properties:
        token_in_amount:
          type: string
      type: object
    osmosis.gamm.v1beta1.QueryTotalLiquidityResponse:
      properties:
        liquidity:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.gamm.v1beta1.QueryTotalPoolLiquidityResponse:
      properties:
        liquidity:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      title: 'Deprecated: please use the alternative in x/poolmanager'
      type: object
    osmosis.gamm.v1beta1.QueryTotalSharesResponse:
      properties:
        total_shares:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    osmosis.incentives.ActiveGaugesPerDenomResponse:
      properties:
        data:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          title: Active gagues that match denom in query
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          title: Pagination defines pagination for the response
          type: object
      type: object
    osmosis.incentives.ActiveGaugesResponse:
      properties:
        data:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          title: Active gagues only
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          title: Pagination defines pagination for the response
          type: object
      type: object
    osmosis.incentives.Gauge:
      description: 'Gauge is an object that stores and distributes yields to recipients
        who

        satisfy certain conditions. Currently gauges support conditions around the

        duration for which a given denom is locked.'
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: 'coins is the total amount of coins that have been in the gauge

            Can distribute multiple coin denoms'
          type: array
        distribute_to:
          description: 'QueryCondition is a struct used for querying locks upon different
            conditions.

            Duration field and timestamp fields could be optional, depending on the

            LockQueryType.'
          properties:
            denom:
              title: Denom represents the token denomination we are looking to lock
                up
              type: string
            duration:
              description: 'Duration is used to query locks with longer duration than
                the specified

                duration. Duration field must not be nil when the lock query type
                is

                `ByLockDuration`.'
              type: string
            lock_query_type:
              default: ByDuration
              description: 'LockQueryType defines the type of the lock query that
                can

                either be by duration or start time of the lock.'
              enum:
              - ByDuration
              - ByTime
              - NoLock
              title: LockQueryType is a type of lock query, ByLockDuration | ByLockTime
              type: string
            timestamp:
              description: 'Timestamp is used by locks started before the specified
                duration.

                Timestamp field must not be nil when the lock query type is `ByLockTime`.

                Querying locks with timestamp is currently not implemented.'
              format: date-time
              type: string
          title: 'distribute_to is where the gauge rewards are distributed to.

            This is queried via lock duration or by timestamp'
          type: object
        distributed_coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: distributed_coins are coins that have been distributed already
          type: array
        filled_epochs:
          format: uint64
          title: 'filled_epochs is the number of epochs distribution has been completed
            on

            already'
          type: string
        id:
          format: uint64
          title: id is the unique ID of a Gauge
          type: string
        is_perpetual:
          description: 'is_perpetual is a flag to show if it''s a perpetual or non-perpetual
            gauge

            Non-perpetual gauges distribute their tokens equally per epoch while the

            gauge is in the active period. Perpetual gauges distribute all their tokens

            at a single time and only distribute their tokens again once the gauge
            is

            refilled, Intended for use with incentives that get refilled daily.'
          type: boolean
        num_epochs_paid_over:
          format: uint64
          title: 'num_epochs_paid_over is the number of total epochs distribution
            will be

            completed over'
          type: string
        start_time:
          format: date-time
          title: start_time is the distribution start time
          type: string
      type: object
    osmosis.incentives.GaugeByIDResponse:
      properties:
        gauge:
          description: 'Gauge is an object that stores and distributes yields to recipients
            who

            satisfy certain conditions. Currently gauges support conditions around
            the

            duration for which a given denom is locked.'
          properties:
            coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: 'coins is the total amount of coins that have been in the gauge

                Can distribute multiple coin denoms'
              type: array
            distribute_to:
              description: 'QueryCondition is a struct used for querying locks upon
                different conditions.

                Duration field and timestamp fields could be optional, depending on
                the

                LockQueryType.'
              properties:
                denom:
                  title: Denom represents the token denomination we are looking to
                    lock up
                  type: string
                duration:
                  description: 'Duration is used to query locks with longer duration
                    than the specified

                    duration. Duration field must not be nil when the lock query type
                    is

                    `ByLockDuration`.'
                  type: string
                lock_query_type:
                  default: ByDuration
                  description: 'LockQueryType defines the type of the lock query that
                    can

                    either be by duration or start time of the lock.'
                  enum:
                  - ByDuration
                  - ByTime
                  - NoLock
                  title: LockQueryType is a type of lock query, ByLockDuration | ByLockTime
                  type: string
                timestamp:
                  description: 'Timestamp is used by locks started before the specified
                    duration.

                    Timestamp field must not be nil when the lock query type is `ByLockTime`.

                    Querying locks with timestamp is currently not implemented.'
                  format: date-time
                  type: string
              title: 'distribute_to is where the gauge rewards are distributed to.

                This is queried via lock duration or by timestamp'
              type: object
            distributed_coins:
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              title: distributed_coins are coins that have been distributed already
              type: array
            filled_epochs:
              format: uint64
              title: 'filled_epochs is the number of epochs distribution has been
                completed on

                already'
              type: string
            id:
              format: uint64
              title: id is the unique ID of a Gauge
              type: string
            is_perpetual:
              description: 'is_perpetual is a flag to show if it''s a perpetual or
                non-perpetual gauge

                Non-perpetual gauges distribute their tokens equally per epoch while
                the

                gauge is in the active period. Perpetual gauges distribute all their
                tokens

                at a single time and only distribute their tokens again once the gauge
                is

                refilled, Intended for use with incentives that get refilled daily.'
              type: boolean
            num_epochs_paid_over:
              format: uint64
              title: 'num_epochs_paid_over is the number of total epochs distribution
                will be

                completed over'
              type: string
            start_time:
              format: date-time
              title: start_time is the distribution start time
              type: string
          title: Gauge that corresponds to provided gague ID
          type: object
      type: object
    osmosis.incentives.GaugesResponse:
      properties:
        data:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          title: Upcoming and active gauges
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          title: Pagination defines pagination for the response
          type: object
      type: object
    osmosis.incentives.ModuleToDistributeCoinsResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: Coins that have yet to be distributed
          type: array
      type: object
    osmosis.incentives.QueryLockableDurationsResponse:
      properties:
        lockable_durations:
          items:
            type: string
          title: Time durations that users can lock coins for in order to recieve
            rewards
          type: array
      type: object
    osmosis.incentives.RewardsEstResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          title: 'Estimated coin rewards that will be recieved at provided address

            from specified locks between current time and end epoch'
          type: array
      type: object
    osmosis.incentives.UpcomingGaugesPerDenomResponse:
      properties:
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          title: Pagination defines pagination for the response
          type: object
        upcoming_gauges:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          title: Upcoming gagues that match denom in query
          type: array
      type: object
    osmosis.incentives.UpcomingGaugesResponse:
      properties:
        data:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          title: Gauges whose distribution is upcoming
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          title: Pagination defines pagination for the response
          type: object
      type: object
    osmosis.lockup.AccountLockedCoinsResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedDurationResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedLongerDurationDenomResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedLongerDurationNotUnlockingOnlyResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedLongerDurationResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedPastTimeDenomResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedPastTimeNotUnlockingOnlyResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountLockedPastTimeResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountUnlockableCoinsResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountUnlockedBeforeTimeResponse:
      properties:
        locks:
          items:
            description: 'PeriodLock is a single lock unit by period defined by the
              x/lockup module.

              It''s a record of a locked coin at a specific time. It stores owner,
              duration,

              unlock time and the number of coins locked. A state of a period lock
              is

              created upon lock creation, and deleted once the lock has been matured
              after

              the `duration` has passed since unbonding started.'
            properties:
              ID:
                description: 'ID is the unique id of the lock.

                  The ID of the lock is decided upon lock creation, incrementing by
                  1 for

                  every lock.'
                format: uint64
                type: string
              coins:
                description: Coins are the tokens locked within the lock, kept in
                  the module account.
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              duration:
                description: 'Duration is the time needed for a lock to mature after
                  unlocking has

                  started.'
                type: string
              end_time:
                description: 'EndTime refers to the time at which the lock would mature
                  and get deleted.

                  This value is first initialized when an unlock has started for the
                  lock,

                  end time being block time + duration.'
                format: date-time
                type: string
              owner:
                description: 'Owner is the account address of the lock owner.

                  Only the owner can modify the state of the lock.'
                type: string
              reward_receiver_address:
                description: 'Reward Receiver Address is the address that would be
                  receiving rewards for

                  the incentives for the lock. This is set to owner by default and
                  can be

                  changed via separate msg.'
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.AccountUnlockingCoinsResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.LockQueryType:
      default: ByDuration
      description: 'LockQueryType defines the type of the lock query that can

        either be by duration or start time of the lock.'
      enum:
      - ByDuration
      - ByTime
      - NoLock
      type: string
    osmosis.lockup.LockRewardReceiverResponse:
      properties:
        reward_receiver:
          type: string
      type: object
    osmosis.lockup.LockedDenomResponse:
      properties:
        amount:
          type: string
      type: object
    osmosis.lockup.LockedResponse:
      properties:
        lock:
          description: 'PeriodLock is a single lock unit by period defined by the
            x/lockup module.

            It''s a record of a locked coin at a specific time. It stores owner, duration,

            unlock time and the number of coins locked. A state of a period lock is

            created upon lock creation, and deleted once the lock has been matured
            after

            the `duration` has passed since unbonding started.'
          properties:
            ID:
              description: 'ID is the unique id of the lock.

                The ID of the lock is decided upon lock creation, incrementing by
                1 for

                every lock.'
              format: uint64
              type: string
            coins:
              description: Coins are the tokens locked within the lock, kept in the
                module account.
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            duration:
              description: 'Duration is the time needed for a lock to mature after
                unlocking has

                started.'
              type: string
            end_time:
              description: 'EndTime refers to the time at which the lock would mature
                and get deleted.

                This value is first initialized when an unlock has started for the
                lock,

                end time being block time + duration.'
              format: date-time
              type: string
            owner:
              description: 'Owner is the account address of the lock owner.

                Only the owner can modify the state of the lock.'
              type: string
            reward_receiver_address:
              description: 'Reward Receiver Address is the address that would be receiving
                rewards for

                the incentives for the lock. This is set to owner by default and can
                be

                changed via separate msg.'
              type: string
          type: object
      type: object
    osmosis.lockup.ModuleBalanceResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.ModuleLockedAmountResponse:
      properties:
        coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.lockup.NextLockIDResponse:
      properties:
        lock_id:
          format: uint64
          type: string
      type: object
    osmosis.lockup.Params:
      properties:
        force_unlock_allowed_addresses:
          items:
            type: string
          type: array
      type: object
    osmosis.lockup.PeriodLock:
      description: 'PeriodLock is a single lock unit by period defined by the x/lockup
        module.

        It''s a record of a locked coin at a specific time. It stores owner, duration,

        unlock time and the number of coins locked. A state of a period lock is

        created upon lock creation, and deleted once the lock has been matured after

        the `duration` has passed since unbonding started.'
      properties:
        ID:
          description: 'ID is the unique id of the lock.

            The ID of the lock is decided upon lock creation, incrementing by 1 for

            every lock.'
          format: uint64
          type: string
        coins:
          description: Coins are the tokens locked within the lock, kept in the module
            account.
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        duration:
          description: 'Duration is the time needed for a lock to mature after unlocking
            has

            started.'
          type: string
        end_time:
          description: 'EndTime refers to the time at which the lock would mature
            and get deleted.

            This value is first initialized when an unlock has started for the lock,

            end time being block time + duration.'
          format: date-time
          type: string
        owner:
          description: 'Owner is the account address of the lock owner.

            Only the owner can modify the state of the lock.'
          type: string
        reward_receiver_address:
          description: 'Reward Receiver Address is the address that would be receiving
            rewards for

            the incentives for the lock. This is set to owner by default and can be

            changed via separate msg.'
          type: string
      type: object
    osmosis.lockup.QueryCondition:
      description: 'QueryCondition is a struct used for querying locks upon different
        conditions.

        Duration field and timestamp fields could be optional, depending on the

        LockQueryType.'
      properties:
        denom:
          title: Denom represents the token denomination we are looking to lock up
          type: string
        duration:
          description: 'Duration is used to query locks with longer duration than
            the specified

            duration. Duration field must not be nil when the lock query type is

            `ByLockDuration`.'
          type: string
        lock_query_type:
          default: ByDuration
          description: 'LockQueryType defines the type of the lock query that can

            either be by duration or start time of the lock.'
          enum:
          - ByDuration
          - ByTime
          - NoLock
          title: LockQueryType is a type of lock query, ByLockDuration | ByLockTime
          type: string
        timestamp:
          description: 'Timestamp is used by locks started before the specified duration.

            Timestamp field must not be nil when the lock query type is `ByLockTime`.

            Querying locks with timestamp is currently not implemented.'
          format: date-time
          type: string
      type: object
    osmosis.lockup.QueryParamsResponse:
      properties:
        params:
          properties:
            force_unlock_allowed_addresses:
              items:
                type: string
              type: array
          type: object
      type: object
    osmosis.lockup.SyntheticLock:
      description: 'SyntheticLock is creating virtual lockup where new denom is combination
        of

        original denom and synthetic suffix. At the time of synthetic lockup creation

        and deletion, accumulation store is also being updated and on querier side,

        they can query as freely as native lockup.'
      properties:
        duration:
          description: 'Duration is the duration for a synthetic lock to mature

            at the point of unbonding has started.'
          type: string
        end_time:
          format: date-time
          title: 'used for unbonding synthetic lockups, for active synthetic lockups,
            this

            value is set to uninitialized value'
          type: string
        synth_denom:
          description: 'SynthDenom is the synthetic denom that is a combination of

            gamm share + bonding status + validator address.'
          type: string
        underlying_lock_id:
          description: 'Underlying Lock ID is the underlying native lock''s id for
            this synthetic

            lockup. A synthetic lock MUST have an underlying lock.'
          format: uint64
          type: string
      type: object
    osmosis.lockup.SyntheticLockupByLockupIDResponse:
      properties:
        synthetic_lock:
          description: 'SyntheticLock is creating virtual lockup where new denom is
            combination of

            original denom and synthetic suffix. At the time of synthetic lockup creation

            and deletion, accumulation store is also being updated and on querier
            side,

            they can query as freely as native lockup.'
          properties:
            duration:
              description: 'Duration is the duration for a synthetic lock to mature

                at the point of unbonding has started.'
              type: string
            end_time:
              format: date-time
              title: 'used for unbonding synthetic lockups, for active synthetic lockups,
                this

                value is set to uninitialized value'
              type: string
            synth_denom:
              description: 'SynthDenom is the synthetic denom that is a combination
                of

                gamm share + bonding status + validator address.'
              type: string
            underlying_lock_id:
              description: 'Underlying Lock ID is the underlying native lock''s id
                for this synthetic

                lockup. A synthetic lock MUST have an underlying lock.'
              format: uint64
              type: string
          type: object
      type: object
    osmosis.lockup.SyntheticLockupsByLockupIDResponse:
      properties:
        synthetic_locks:
          items:
            description: 'SyntheticLock is creating virtual lockup where new denom
              is combination of

              original denom and synthetic suffix. At the time of synthetic lockup
              creation

              and deletion, accumulation store is also being updated and on querier
              side,

              they can query as freely as native lockup.'
            properties:
              duration:
                description: 'Duration is the duration for a synthetic lock to mature

                  at the point of unbonding has started.'
                type: string
              end_time:
                format: date-time
                title: 'used for unbonding synthetic lockups, for active synthetic
                  lockups, this

                  value is set to uninitialized value'
                type: string
              synth_denom:
                description: 'SynthDenom is the synthetic denom that is a combination
                  of

                  gamm share + bonding status + validator address.'
                type: string
              underlying_lock_id:
                description: 'Underlying Lock ID is the underlying native lock''s
                  id for this synthetic

                  lockup. A synthetic lock MUST have an underlying lock.'
                format: uint64
                type: string
            type: object
          type: array
      type: object
    osmosis.mint.v1beta1.DistributionProportions:
      description: 'DistributionProportions defines the distribution proportions of
        the minted

        denom. In other words, defines which stakeholders will receive the minted

        denoms and how much.'
      properties:
        community_pool:
          description: 'community_pool defines the proportion of the minted mint_denom
            that is

            to be allocated to the community pool.'
          type: string
        developer_rewards:
          description: 'developer_rewards defines the proportion of the minted mint_denom
            that is

            to be allocated to developer rewards address.'
          type: string
        pool_incentives:
          description: 'pool_incentives defines the proportion of the minted mint_denom
            that is

            to be allocated as pool incentives.'
          type: string
        staking:
          description: 'staking defines the proportion of the minted mint_denom that
            is to be

            allocated as staking rewards.'
          type: string
      type: object
    osmosis.mint.v1beta1.Params:
      description: Params holds parameters for the x/mint module.
      properties:
        distribution_proportions:
          description: 'distribution_proportions defines the distribution proportions
            of the minted

            denom. In other words, defines which stakeholders will receive the minted

            denoms and how much.'
          properties:
            community_pool:
              description: 'community_pool defines the proportion of the minted mint_denom
                that is

                to be allocated to the community pool.'
              type: string
            developer_rewards:
              description: 'developer_rewards defines the proportion of the minted
                mint_denom that is

                to be allocated to developer rewards address.'
              type: string
            pool_incentives:
              description: 'pool_incentives defines the proportion of the minted mint_denom
                that is

                to be allocated as pool incentives.'
              type: string
            staking:
              description: 'staking defines the proportion of the minted mint_denom
                that is to be

                allocated as staking rewards.'
              type: string
          type: object
        epoch_identifier:
          description: epoch_identifier mint epoch identifier e.g. (day, week).
          type: string
        genesis_epoch_provisions:
          description: genesis_epoch_provisions epoch provisions from the first epoch.
          type: string
        mint_denom:
          description: mint_denom is the denom of the coin to mint.
          type: string
        minting_rewards_distribution_start_epoch:
          format: int64
          title: 'minting_rewards_distribution_start_epoch start epoch to distribute
            minting

            rewards'
          type: string
        reduction_factor:
          description: 'reduction_factor is the reduction multiplier to execute

            at the end of each period set by reduction_period_in_epochs.'
          type: string
        reduction_period_in_epochs:
          description: 'reduction_period_in_epochs the number of epochs it takes

            to reduce the rewards.'
          format: int64
          type: string
        weighted_developer_rewards_receivers:
          description: 'weighted_developer_rewards_receivers is the address to receive
            developer

            rewards with weights assignedt to each address. The final amount that
            each

            address receives is: epoch_provisions *

            distribution_proportions.developer_rewards * Address''s Weight.'
          items:
            description: 'WeightedAddress represents an address with a weight assigned
              to it.

              The weight is used to determine the proportion of the total minted

              tokens to be minted to the address.'
            properties:
              address:
                type: string
              weight:
                type: string
            type: object
          type: array
      type: object
    osmosis.mint.v1beta1.QueryEpochProvisionsResponse:
      description: 'QueryEpochProvisionsResponse is the response type for the

        Query/EpochProvisions RPC method.'
      properties:
        epoch_provisions:
          description: epoch_provisions is the current minting per epoch provisions
            value.
          format: byte
          type: string
      type: object
    osmosis.mint.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            distribution_proportions:
              description: 'distribution_proportions defines the distribution proportions
                of the minted

                denom. In other words, defines which stakeholders will receive the
                minted

                denoms and how much.'
              properties:
                community_pool:
                  description: 'community_pool defines the proportion of the minted
                    mint_denom that is

                    to be allocated to the community pool.'
                  type: string
                developer_rewards:
                  description: 'developer_rewards defines the proportion of the minted
                    mint_denom that is

                    to be allocated to developer rewards address.'
                  type: string
                pool_incentives:
                  description: 'pool_incentives defines the proportion of the minted
                    mint_denom that is

                    to be allocated as pool incentives.'
                  type: string
                staking:
                  description: 'staking defines the proportion of the minted mint_denom
                    that is to be

                    allocated as staking rewards.'
                  type: string
              type: object
            epoch_identifier:
              description: epoch_identifier mint epoch identifier e.g. (day, week).
              type: string
            genesis_epoch_provisions:
              description: genesis_epoch_provisions epoch provisions from the first
                epoch.
              type: string
            mint_denom:
              description: mint_denom is the denom of the coin to mint.
              type: string
            minting_rewards_distribution_start_epoch:
              format: int64
              title: 'minting_rewards_distribution_start_epoch start epoch to distribute
                minting

                rewards'
              type: string
            reduction_factor:
              description: 'reduction_factor is the reduction multiplier to execute

                at the end of each period set by reduction_period_in_epochs.'
              type: string
            reduction_period_in_epochs:
              description: 'reduction_period_in_epochs the number of epochs it takes

                to reduce the rewards.'
              format: int64
              type: string
            weighted_developer_rewards_receivers:
              description: 'weighted_developer_rewards_receivers is the address to
                receive developer

                rewards with weights assignedt to each address. The final amount that
                each

                address receives is: epoch_provisions *

                distribution_proportions.developer_rewards * Address''s Weight.'
              items:
                description: 'WeightedAddress represents an address with a weight
                  assigned to it.

                  The weight is used to determine the proportion of the total minted

                  tokens to be minted to the address.'
                properties:
                  address:
                    type: string
                  weight:
                    type: string
                type: object
              type: array
          type: object
      type: object
    osmosis.mint.v1beta1.WeightedAddress:
      description: 'WeightedAddress represents an address with a weight assigned to
        it.

        The weight is used to determine the proportion of the total minted

        tokens to be minted to the address.'
      properties:
        address:
          type: string
        weight:
          type: string
      type: object
    osmosis.poolincentives.v1beta1.DistrInfo:
      properties:
        records:
          items:
            properties:
              gauge_id:
                format: uint64
                type: string
              weight:
                type: string
            type: object
          type: array
        total_weight:
          type: string
      type: object
    osmosis.poolincentives.v1beta1.DistrRecord:
      properties:
        gauge_id:
          format: uint64
          type: string
        weight:
          type: string
      type: object
    osmosis.poolincentives.v1beta1.IncentivizedPool:
      properties:
        gauge_id:
          format: uint64
          type: string
        lockable_duration:
          type: string
        pool_id:
          format: uint64
          type: string
      type: object
    osmosis.poolincentives.v1beta1.Params:
      properties:
        minted_denom:
          description: 'minted_denom is the denomination of the coin expected to be
            minted by the

            minting module. Pool-incentives module doesn’t actually mint the coin

            itself, but rather manages the distribution of coins that matches the

            defined minted_denom.'
          type: string
      type: object
    osmosis.poolincentives.v1beta1.QueryDistrInfoResponse:
      properties:
        distr_info:
          properties:
            records:
              items:
                properties:
                  gauge_id:
                    format: uint64
                    type: string
                  weight:
                    type: string
                type: object
              type: array
            total_weight:
              type: string
          type: object
      type: object
    osmosis.poolincentives.v1beta1.QueryExternalIncentiveGaugesResponse:
      properties:
        data:
          items:
            description: 'Gauge is an object that stores and distributes yields to
              recipients who

              satisfy certain conditions. Currently gauges support conditions around
              the

              duration for which a given denom is locked.'
            properties:
              coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: 'coins is the total amount of coins that have been in the gauge

                  Can distribute multiple coin denoms'
                type: array
              distribute_to:
                description: 'QueryCondition is a struct used for querying locks upon
                  different conditions.

                  Duration field and timestamp fields could be optional, depending
                  on the

                  LockQueryType.'
                properties:
                  denom:
                    title: Denom represents the token denomination we are looking
                      to lock up
                    type: string
                  duration:
                    description: 'Duration is used to query locks with longer duration
                      than the specified

                      duration. Duration field must not be nil when the lock query
                      type is

                      `ByLockDuration`.'
                    type: string
                  lock_query_type:
                    default: ByDuration
                    description: 'LockQueryType defines the type of the lock query
                      that can

                      either be by duration or start time of the lock.'
                    enum:
                    - ByDuration
                    - ByTime
                    - NoLock
                    title: LockQueryType is a type of lock query, ByLockDuration |
                      ByLockTime
                    type: string
                  timestamp:
                    description: 'Timestamp is used by locks started before the specified
                      duration.

                      Timestamp field must not be nil when the lock query type is
                      `ByLockTime`.

                      Querying locks with timestamp is currently not implemented.'
                    format: date-time
                    type: string
                title: 'distribute_to is where the gauge rewards are distributed to.

                  This is queried via lock duration or by timestamp'
                type: object
              distributed_coins:
                items:
                  description: 'Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.'
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: distributed_coins are coins that have been distributed already
                type: array
              filled_epochs:
                format: uint64
                title: 'filled_epochs is the number of epochs distribution has been
                  completed on

                  already'
                type: string
              id:
                format: uint64
                title: id is the unique ID of a Gauge
                type: string
              is_perpetual:
                description: 'is_perpetual is a flag to show if it''s a perpetual
                  or non-perpetual gauge

                  Non-perpetual gauges distribute their tokens equally per epoch while
                  the

                  gauge is in the active period. Perpetual gauges distribute all their
                  tokens

                  at a single time and only distribute their tokens again once the
                  gauge is

                  refilled, Intended for use with incentives that get refilled daily.'
                type: boolean
              num_epochs_paid_over:
                format: uint64
                title: 'num_epochs_paid_over is the number of total epochs distribution
                  will be

                  completed over'
                type: string
              start_time:
                format: date-time
                title: start_time is the distribution start time
                type: string
            type: object
          type: array
      type: object
    osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse:
      properties:
        gauge_ids_with_duration:
          items:
            properties:
              duration:
                type: string
              gauge_id:
                format: uint64
                type: string
              gauge_incentive_percentage:
                type: string
            type: object
          type: array
      type: object
    osmosis.poolincentives.v1beta1.QueryGaugeIdsResponse.GaugeIdWithDuration:
      properties:
        duration:
          type: string
        gauge_id:
          format: uint64
          type: string
        gauge_incentive_percentage:
          type: string
      type: object
    osmosis.poolincentives.v1beta1.QueryIncentivizedPoolsResponse:
      properties:
        incentivized_pools:
          items:
            properties:
              gauge_id:
                format: uint64
                type: string
              lockable_duration:
                type: string
              pool_id:
                format: uint64
                type: string
            type: object
          type: array
      type: object
    osmosis.poolincentives.v1beta1.QueryLockableDurationsResponse:
      properties:
        lockable_durations:
          items:
            type: string
          type: array
      type: object
    osmosis.poolincentives.v1beta1.QueryParamsResponse:
      properties:
        params:
          properties:
            minted_denom:
              description: 'minted_denom is the denomination of the coin expected
                to be minted by the

                minting module. Pool-incentives module doesn’t actually mint the coin

                itself, but rather manages the distribution of coins that matches
                the

                defined minted_denom.'
              type: string
          type: object
      type: object
    osmosis.poolmanager.v1beta1.SwapAmountInRoute:
      properties:
        pool_id:
          format: uint64
          type: string
        token_out_denom:
          type: string
      type: object
    osmosis.poolmanager.v1beta1.SwapAmountOutRoute:
      properties:
        pool_id:
          format: uint64
          type: string
        token_in_denom:
          type: string
      type: object
    osmosis.superfluid.AllAssetsResponse:
      properties:
        assets:
          items:
            properties:
              asset_type:
                default: SuperfluidAssetTypeNative
                enum:
                - SuperfluidAssetTypeNative
                - SuperfluidAssetTypeLPShare
                - SuperfluidAssetTypeConcentratedShare
                title: 'AssetType indicates whether the superfluid asset is a native
                  token or an lp

                  share'
                type: string
              denom:
                type: string
            title: SuperfluidAsset stores the pair of superfluid asset type and denom
              pair
            type: object
          type: array
      type: object
    osmosis.superfluid.AllIntermediaryAccountsResponse:
      properties:
        accounts:
          items:
            properties:
              address:
                type: string
              denom:
                type: string
              gauge_id:
                format: uint64
                type: string
              val_addr:
                type: string
            type: object
          type: array
        pagination:
          description: "PageResponse is to be embedded in gRPC response messages where\
            \ the\ncorresponding request message has used PageRequest.\n\n message\
            \ SomeResponse {\n         repeated Bar results = 1;\n         PageResponse\
            \ page = 2;\n }"
          properties:
            next_key:
              format: byte
              title: 'next_key is the key to be passed to PageRequest.key to

                query the next page most efficiently'
              type: string
            total:
              format: uint64
              title: 'total is total number of results available if PageRequest.count_total

                was set, its value is undefined otherwise'
              type: string
          type: object
      type: object
    osmosis.superfluid.AssetMultiplierResponse:
      properties:
        osmo_equivalent_multiplier:
          description: 'The Osmo-Equivalent-Multiplier Record for epoch N refers to
            the osmo worth we

            treat an LP share as having, for all of epoch N. Eventually this is intended

            to be set as the Time-weighted-average-osmo-backing for the entire duration

            of epoch N-1. (Thereby locking whats in use for epoch N as based on the
            prior

            epochs rewards) However for now, this is not the TWAP but instead the
            spot

            price at the boundary. For different types of assets in the future, it
            could

            change.'
          properties:
            denom:
              title: superfluid asset denom, can be LP token or native token
              type: string
            epoch_number:
              format: int64
              type: string
            multiplier:
              type: string
          type: object
      type: object
    osmosis.superfluid.AssetTypeResponse:
      properties:
        asset_type:
          default: SuperfluidAssetTypeNative
          enum:
          - SuperfluidAssetTypeNative
          - SuperfluidAssetTypeLPShare
          - SuperfluidAssetTypeConcentratedShare
          title: 'SuperfluidAssetType indicates whether the superfluid asset is

            a native token, lp share of a pool, or concentrated share of a pool'
          type: string
      type: object
    osmosis.superfluid.ConcentratedPoolUserPositionRecord:
      properties:
        delegation_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        equivalent_staked_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        lock_id:
          format: uint64
          type: string
        position_id:
          format: uint64
          type: string
        synthetic_lock:
          description: 'SyntheticLock is creating virtual lockup where new denom is
            combination of

            original denom and synthetic suffix. At the time of synthetic lockup creation

            and deletion, accumulation store is also being updated and on querier
            side,

            they can query as freely as native lockup.'
          properties:
            duration:
              description: 'Duration is the duration for a synthetic lock to mature

                at the point of unbonding has started.'
              type: string
            end_time:
              format: date-time
              title: 'used for unbonding synthetic lockups, for active synthetic lockups,
                this

                value is set to uninitialized value'
              type: string
            synth_denom:
              description: 'SynthDenom is the synthetic denom that is a combination
                of

                gamm share + bonding status + validator address.'
              type: string
            underlying_lock_id:
              description: 'Underlying Lock ID is the underlying native lock''s id
                for this synthetic

                lockup. A synthetic lock MUST have an underlying lock.'
              format: uint64
              type: string
          type: object
        validator_address:
          type: string
      type: object
    osmosis.superfluid.ConnectedIntermediaryAccountResponse:
      properties:
        account:
          properties:
            address:
              type: string
            denom:
              type: string
            gauge_id:
              format: uint64
              type: string
            val_addr:
              type: string
          type: object
      type: object
    osmosis.superfluid.Delegations:
      properties:
        amount_sfsd:
          type: string
        osmo_equivalent:
          type: string
        val_addr:
          type: string
      type: object
    osmosis.superfluid.EstimateSuperfluidDelegatedAmountByValidatorDenomResponse:
      properties:
        total_delegated_coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.OsmoEquivalentMultiplierRecord:
      description: 'The Osmo-Equivalent-Multiplier Record for epoch N refers to the
        osmo worth we

        treat an LP share as having, for all of epoch N. Eventually this is intended

        to be set as the Time-weighted-average-osmo-backing for the entire duration

        of epoch N-1. (Thereby locking whats in use for epoch N as based on the prior

        epochs rewards) However for now, this is not the TWAP but instead the spot

        price at the boundary. For different types of assets in the future, it could

        change.'
      properties:
        denom:
          title: superfluid asset denom, can be LP token or native token
          type: string
        epoch_number:
          format: int64
          type: string
        multiplier:
          type: string
      type: object
    osmosis.superfluid.Params:
      properties:
        minimum_risk_factor:
          description: 'minimum_risk_factor is to be cut on OSMO equivalent value
            of lp tokens for

            superfluid staking, default: 5%. The minimum risk factor works

            to counter-balance the staked amount on chain''s exposure to various asset

            volatilities, and have base staking be ''resistant'' to volatility.'
          type: string
      title: Params holds parameters for the superfluid module
      type: object
    osmosis.superfluid.QueryParamsResponse:
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            minimum_risk_factor:
              description: 'minimum_risk_factor is to be cut on OSMO equivalent value
                of lp tokens for

                superfluid staking, default: 5%. The minimum risk factor works

                to counter-balance the staked amount on chain''s exposure to various
                asset

                volatilities, and have base staking be ''resistant'' to volatility.'
              type: string
          title: Params holds parameters for the superfluid module
          type: object
      type: object
    osmosis.superfluid.QueryTotalDelegationByDelegatorResponse:
      properties:
        delegation_response:
          items:
            description: 'DelegationResponse is equivalent to Delegation except that
              it contains a

              balance in addition to shares which is more suitable for client responses.'
            properties:
              balance:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegation:
                description: 'Delegation represents the bond with tokens held by an
                  account. It is

                  owned by one delegator, and is associated with the voting power
                  of one

                  validator.'
                properties:
                  delegator_address:
                    description: delegator_address is the bech32-encoded address of
                      the delegator.
                    type: string
                  shares:
                    description: shares define the delegation shares received.
                    type: string
                  validator_address:
                    description: validator_address is the bech32-encoded address of
                      the validator.
                    type: string
                type: object
            type: object
          type: array
        superfluid_delegation_records:
          items:
            description: 'SuperfluidDelegationRecord is a struct used to indicate
              superfluid

              delegations of an account in the state machine in a user friendly form.'
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegator_address:
                type: string
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
        total_delegated_coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_equivalent_staked_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    osmosis.superfluid.QueryTotalDelegationByValidatorForDenomResponse:
      properties:
        assets:
          items:
            properties:
              amount_sfsd:
                type: string
              osmo_equivalent:
                type: string
              val_addr:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.QueryUnpoolWhitelistResponse:
      properties:
        pool_ids:
          items:
            format: uint64
            type: string
          type: array
      type: object
    osmosis.superfluid.SuperfluidAsset:
      properties:
        asset_type:
          default: SuperfluidAssetTypeNative
          enum:
          - SuperfluidAssetTypeNative
          - SuperfluidAssetTypeLPShare
          - SuperfluidAssetTypeConcentratedShare
          title: 'AssetType indicates whether the superfluid asset is a native token
            or an lp

            share'
          type: string
        denom:
          type: string
      title: SuperfluidAsset stores the pair of superfluid asset type and denom pair
      type: object
    osmosis.superfluid.SuperfluidAssetType:
      default: SuperfluidAssetTypeNative
      enum:
      - SuperfluidAssetTypeNative
      - SuperfluidAssetTypeLPShare
      - SuperfluidAssetTypeConcentratedShare
      title: 'SuperfluidAssetType indicates whether the superfluid asset is

        a native token, lp share of a pool, or concentrated share of a pool'
      type: string
    osmosis.superfluid.SuperfluidDelegationAmountResponse:
      properties:
        amount:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.SuperfluidDelegationRecord:
      description: 'SuperfluidDelegationRecord is a struct used to indicate superfluid

        delegations of an account in the state machine in a user friendly form.'
      properties:
        delegation_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        delegator_address:
          type: string
        equivalent_staked_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        validator_address:
          type: string
      type: object
    osmosis.superfluid.SuperfluidDelegationsByDelegatorResponse:
      properties:
        superfluid_delegation_records:
          items:
            description: 'SuperfluidDelegationRecord is a struct used to indicate
              superfluid

              delegations of an account in the state machine in a user friendly form.'
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegator_address:
                type: string
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
        total_delegated_coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        total_equivalent_staked_amount:
          description: 'Coin defines a token with a denomination and an amount.


            NOTE: The amount field is an Int which implements the custom method

            signatures required by gogoproto.'
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
      type: object
    osmosis.superfluid.SuperfluidDelegationsByValidatorDenomResponse:
      properties:
        superfluid_delegation_records:
          items:
            description: 'SuperfluidDelegationRecord is a struct used to indicate
              superfluid

              delegations of an account in the state machine in a user friendly form.'
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegator_address:
                type: string
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.SuperfluidIntermediaryAccountInfo:
      properties:
        address:
          type: string
        denom:
          type: string
        gauge_id:
          format: uint64
          type: string
        val_addr:
          type: string
      type: object
    osmosis.superfluid.SuperfluidUndelegationsByDelegatorResponse:
      properties:
        superfluid_delegation_records:
          items:
            description: 'SuperfluidDelegationRecord is a struct used to indicate
              superfluid

              delegations of an account in the state machine in a user friendly form.'
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              delegator_address:
                type: string
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
        synthetic_locks:
          items:
            description: 'SyntheticLock is creating virtual lockup where new denom
              is combination of

              original denom and synthetic suffix. At the time of synthetic lockup
              creation

              and deletion, accumulation store is also being updated and on querier
              side,

              they can query as freely as native lockup.'
            properties:
              duration:
                description: 'Duration is the duration for a synthetic lock to mature

                  at the point of unbonding has started.'
                type: string
              end_time:
                format: date-time
                title: 'used for unbonding synthetic lockups, for active synthetic
                  lockups, this

                  value is set to uninitialized value'
                type: string
              synth_denom:
                description: 'SynthDenom is the synthetic denom that is a combination
                  of

                  gamm share + bonding status + validator address.'
                type: string
              underlying_lock_id:
                description: 'Underlying Lock ID is the underlying native lock''s
                  id for this synthetic

                  lockup. A synthetic lock MUST have an underlying lock.'
                format: uint64
                type: string
            type: object
          type: array
        total_undelegated_coins:
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.TotalSuperfluidDelegationsResponse:
      properties:
        total_delegations:
          type: string
      type: object
    osmosis.superfluid.UserConcentratedSuperfluidPositionsDelegatedResponse:
      properties:
        cl_pool_user_position_records:
          items:
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              lock_id:
                format: uint64
                type: string
              position_id:
                format: uint64
                type: string
              synthetic_lock:
                description: 'SyntheticLock is creating virtual lockup where new denom
                  is combination of

                  original denom and synthetic suffix. At the time of synthetic lockup
                  creation

                  and deletion, accumulation store is also being updated and on querier
                  side,

                  they can query as freely as native lockup.'
                properties:
                  duration:
                    description: 'Duration is the duration for a synthetic lock to
                      mature

                      at the point of unbonding has started.'
                    type: string
                  end_time:
                    format: date-time
                    title: 'used for unbonding synthetic lockups, for active synthetic
                      lockups, this

                      value is set to uninitialized value'
                    type: string
                  synth_denom:
                    description: 'SynthDenom is the synthetic denom that is a combination
                      of

                      gamm share + bonding status + validator address.'
                    type: string
                  underlying_lock_id:
                    description: 'Underlying Lock ID is the underlying native lock''s
                      id for this synthetic

                      lockup. A synthetic lock MUST have an underlying lock.'
                    format: uint64
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
      type: object
    osmosis.superfluid.UserConcentratedSuperfluidPositionsUndelegatingResponse:
      properties:
        cl_pool_user_position_records:
          items:
            properties:
              delegation_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              equivalent_staked_amount:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              lock_id:
                format: uint64
                type: string
              position_id:
                format: uint64
                type: string
              synthetic_lock:
                description: 'SyntheticLock is creating virtual lockup where new denom
                  is combination of

                  original denom and synthetic suffix. At the time of synthetic lockup
                  creation

                  and deletion, accumulation store is also being updated and on querier
                  side,

                  they can query as freely as native lockup.'
                properties:
                  duration:
                    description: 'Duration is the duration for a synthetic lock to
                      mature

                      at the point of unbonding has started.'
                    type: string
                  end_time:
                    format: date-time
                    title: 'used for unbonding synthetic lockups, for active synthetic
                      lockups, this

                      value is set to uninitialized value'
                    type: string
                  synth_denom:
                    description: 'SynthDenom is the synthetic denom that is a combination
                      of

                      gamm share + bonding status + validator address.'
                    type: string
                  underlying_lock_id:
                    description: 'Underlying Lock ID is the underlying native lock''s
                      id for this synthetic

                      lockup. A synthetic lock MUST have an underlying lock.'
                    format: uint64
                    type: string
                type: object
              validator_address:
                type: string
            type: object
          type: array
      type: object
    osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata:
      description: 'DenomAuthorityMetadata specifies metadata for addresses that have
        specific

        capabilities over a token factory denom. Right now there is only one Admin

        permission, but is planned to be extended to the future.'
      properties:
        admin:
          title: Can be empty for no admin, or a valid osmosis address
          type: string
      type: object
    osmosis.tokenfactory.v1beta1.Params:
      description: Params defines the parameters for the tokenfactory module.
      properties:
        denom_creation_fee:
          description: 'DenomCreationFee defines the fee to be charged on the creation
            of a new

            denom. The fee is drawn from the MsgCreateDenom''s sender account, and

            transferred to the community pool.'
          items:
            description: 'Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.'
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          type: array
        denom_creation_gas_consume:
          description: 'DenomCreationGasConsume defines the gas cost for creating
            a new denom.

            This is intended as a spam deterrence mechanism.


            See: https://github.com/CosmWasm/token-factory/issues/11'
          format: uint64
          type: string
      type: object
    osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressResponse:
      description: 'QueryBeforeSendHookAddressResponse defines the response structure
        for the

        DenomBeforeSendHook gRPC query.'
      properties:
        cosmwasm_address:
          type: string
      type: object
    osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse:
      description: 'QueryDenomAuthorityMetadataResponse defines the response structure
        for the

        DenomAuthorityMetadata gRPC query.'
      properties:
        authority_metadata:
          description: 'DenomAuthorityMetadata specifies metadata for addresses that
            have specific

            capabilities over a token factory denom. Right now there is only one Admin

            permission, but is planned to be extended to the future.'
          properties:
            admin:
              title: Can be empty for no admin, or a valid osmosis address
              type: string
          type: object
      type: object
    osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse:
      description: 'QueryDenomsFromCreatorRequest defines the response structure for
        the

        DenomsFromCreator gRPC query.'
      properties:
        denoms:
          items:
            type: string
          type: array
      type: object
    osmosis.tokenfactory.v1beta1.QueryParamsResponse:
      description: QueryParamsResponse is the response type for the Query/Params RPC
        method.
      properties:
        params:
          description: params defines the parameters of the module.
          properties:
            denom_creation_fee:
              description: 'DenomCreationFee defines the fee to be charged on the
                creation of a new

                denom. The fee is drawn from the MsgCreateDenom''s sender account,
                and

                transferred to the community pool.'
              items:
                description: 'Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.'
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            denom_creation_gas_consume:
              description: 'DenomCreationGasConsume defines the gas cost for creating
                a new denom.

                This is intended as a spam deterrence mechanism.


                See: https://github.com/CosmWasm/token-factory/issues/11'
              format: uint64
              type: string
          type: object
      type: object
    osmosis.txfees.v1beta1.FeeToken:
      description: 'FeeToken is a struct that specifies a coin denom, and pool ID
        pair.

        This marks the token as eligible for use as a tx fee asset in Osmosis.

        Its price in osmo is derived through looking at the provided pool ID.

        The pool ID must have osmo as one of its assets.'
      properties:
        denom:
          type: string
        poolID:
          format: uint64
          type: string
      type: object
    osmosis.txfees.v1beta1.QueryBaseDenomResponse:
      properties:
        base_denom:
          type: string
      type: object
    osmosis.txfees.v1beta1.QueryDenomPoolIdResponse:
      properties:
        poolID:
          format: uint64
          type: string
      type: object
    osmosis.txfees.v1beta1.QueryDenomSpotPriceResponse:
      properties:
        poolID:
          format: uint64
          type: string
        spot_price:
          type: string
      title: 'QueryDenomSpotPriceRequest defines grpc response structure for querying
        spot

        price for the specified tx fee denom'
      type: object
    osmosis.txfees.v1beta1.QueryFeeTokensResponse:
      properties:
        fee_tokens:
          items:
            description: 'FeeToken is a struct that specifies a coin denom, and pool
              ID pair.

              This marks the token as eligible for use as a tx fee asset in Osmosis.

              Its price in osmo is derived through looking at the provided pool ID.

              The pool ID must have osmo as one of its assets.'
            properties:
              denom:
                type: string
              poolID:
                format: uint64
                type: string
            type: object
          type: array
      type: object
    tendermint.abci.Event:
      description: 'Event allows application developers to attach additional information
        to

        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

        Later, transactions may be queried using these events.'
      properties:
        attributes:
          items:
            description: EventAttribute is a single key-value pair, associated with
              an event.
            properties:
              index:
                type: boolean
              key:
                format: byte
                type: string
              value:
                format: byte
                type: string
            type: object
          type: array
        type:
          type: string
      type: object
    tendermint.abci.EventAttribute:
      description: EventAttribute is a single key-value pair, associated with an event.
      properties:
        index:
          type: boolean
        key:
          format: byte
          type: string
        value:
          format: byte
          type: string
      type: object
    tendermint.crypto.PublicKey:
      properties:
        ed25519:
          format: byte
          type: string
        secp256k1:
          format: byte
          type: string
      title: PublicKey defines the keys available for use with Tendermint Validators
      type: object
    tendermint.p2p.DefaultNodeInfo:
      properties:
        channels:
          format: byte
          type: string
        default_node_id:
          type: string
        listen_addr:
          type: string
        moniker:
          type: string
        network:
          type: string
        other:
          properties:
            rpc_address:
              type: string
            tx_index:
              type: string
          type: object
        protocol_version:
          properties:
            app:
              format: uint64
              type: string
            block:
              format: uint64
              type: string
            p2p:
              format: uint64
              type: string
          type: object
        version:
          type: string
      type: object
    tendermint.p2p.DefaultNodeInfoOther:
      properties:
        rpc_address:
          type: string
        tx_index:
          type: string
      type: object
    tendermint.p2p.ProtocolVersion:
      properties:
        app:
          format: uint64
          type: string
        block:
          format: uint64
          type: string
        p2p:
          format: uint64
          type: string
      type: object
    tendermint.types.Block:
      properties:
        data:
          properties:
            txs:
              description: 'Txs that will be applied by state @ block.Height+1.

                NOTE: not all txs here are valid.  We''re just agreeing on the order
                first.

                This means that block.AppHash does not include these txs.'
              items:
                format: byte
                type: string
              type: array
          title: Data contains the set of transactions included in the block
          type: object
        evidence:
          properties:
            evidence:
              items:
                properties:
                  duplicate_vote_evidence:
                    description: DuplicateVoteEvidence contains evidence of a validator
                      signed two conflicting votes.
                    properties:
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                      validator_power:
                        format: int64
                        type: string
                      vote_a:
                        description: 'Vote represents a prevote, precommit, or commit
                          vote from validators for

                          consensus.'
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: "SignedMsgType is a type of signed message\
                              \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                              \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                      vote_b:
                        description: 'Vote represents a prevote, precommit, or commit
                          vote from validators for

                          consensus.'
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signature:
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          type:
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: "SignedMsgType is a type of signed message\
                              \ in the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE:\
                              \ Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                            enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                            type: string
                          validator_address:
                            format: byte
                            type: string
                          validator_index:
                            format: int32
                            type: integer
                        type: object
                    type: object
                  light_client_attack_evidence:
                    description: LightClientAttackEvidence contains evidence of a
                      set of validators attempting to mislead a light client.
                    properties:
                      byzantine_validators:
                        items:
                          properties:
                            address:
                              format: byte
                              type: string
                            proposer_priority:
                              format: int64
                              type: string
                            pub_key:
                              properties:
                                ed25519:
                                  format: byte
                                  type: string
                                secp256k1:
                                  format: byte
                                  type: string
                              title: PublicKey defines the keys available for use
                                with Tendermint Validators
                              type: object
                            voting_power:
                              format: int64
                              type: string
                          type: object
                        type: array
                      common_height:
                        format: int64
                        type: string
                      conflicting_block:
                        properties:
                          signed_header:
                            properties:
                              commit:
                                description: Commit contains the evidence that a block
                                  was committed by a set of validators.
                                properties:
                                  block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  height:
                                    format: int64
                                    type: string
                                  round:
                                    format: int32
                                    type: integer
                                  signatures:
                                    items:
                                      description: CommitSig is a part of the Vote
                                        included in a Commit.
                                      properties:
                                        block_id_flag:
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                          title: BlockIdFlag indicates which BlcokID
                                            the signature is for
                                          type: string
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              header:
                                description: Header defines the structure of a Tendermint
                                  block header.
                                properties:
                                  app_hash:
                                    format: byte
                                    type: string
                                  chain_id:
                                    type: string
                                  consensus_hash:
                                    format: byte
                                    type: string
                                  data_hash:
                                    format: byte
                                    type: string
                                  evidence_hash:
                                    format: byte
                                    title: consensus info
                                    type: string
                                  height:
                                    format: int64
                                    type: string
                                  last_block_id:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      part_set_header:
                                        properties:
                                          hash:
                                            format: byte
                                            type: string
                                          total:
                                            format: int64
                                            type: integer
                                        title: PartsetHeader
                                        type: object
                                    title: BlockID
                                    type: object
                                  last_commit_hash:
                                    format: byte
                                    title: hashes of block data
                                    type: string
                                  last_results_hash:
                                    format: byte
                                    type: string
                                  next_validators_hash:
                                    format: byte
                                    type: string
                                  proposer_address:
                                    format: byte
                                    type: string
                                  time:
                                    format: date-time
                                    type: string
                                  validators_hash:
                                    format: byte
                                    title: hashes from the app output from the prev
                                      block
                                    type: string
                                  version:
                                    description: 'Consensus captures the consensus
                                      rules for processing a block in the blockchain,

                                      including all blockchain data structures and
                                      the rules of the application''s

                                      state transition machine.'
                                    properties:
                                      app:
                                        format: uint64
                                        type: string
                                      block:
                                        format: uint64
                                        type: string
                                    title: basic block info
                                    type: object
                                type: object
                            type: object
                          validator_set:
                            properties:
                              proposer:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: PublicKey defines the keys available for
                                      use with Tendermint Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              total_voting_power:
                                format: int64
                                type: string
                              validators:
                                items:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: PublicKey defines the keys available
                                        for use with Tendermint Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      timestamp:
                        format: date-time
                        type: string
                      total_voting_power:
                        format: int64
                        type: string
                    type: object
                type: object
              type: array
          type: object
        header:
          description: Header defines the structure of a Tendermint block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: 'Consensus captures the consensus rules for processing
                a block in the blockchain,

                including all blockchain data structures and the rules of the application''s

                state transition machine.'
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
        last_commit:
          description: Commit contains the evidence that a block was committed by
            a set of validators.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signatures:
              items:
                description: CommitSig is a part of the Vote included in a Commit.
                properties:
                  block_id_flag:
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                  signature:
                    format: byte
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_address:
                    format: byte
                    type: string
                type: object
              type: array
          type: object
      type: object
    tendermint.types.BlockID:
      properties:
        hash:
          format: byte
          type: string
        part_set_header:
          properties:
            hash:
              format: byte
              type: string
            total:
              format: int64
              type: integer
          title: PartsetHeader
          type: object
      title: BlockID
      type: object
    tendermint.types.BlockIDFlag:
      default: BLOCK_ID_FLAG_UNKNOWN
      enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
      title: BlockIdFlag indicates which BlcokID the signature is for
      type: string
    tendermint.types.Commit:
      description: Commit contains the evidence that a block was committed by a set
        of validators.
      properties:
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        height:
          format: int64
          type: string
        round:
          format: int32
          type: integer
        signatures:
          items:
            description: CommitSig is a part of the Vote included in a Commit.
            properties:
              block_id_flag:
                default: BLOCK_ID_FLAG_UNKNOWN
                enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
                title: BlockIdFlag indicates which BlcokID the signature is for
                type: string
              signature:
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              validator_address:
                format: byte
                type: string
            type: object
          type: array
      type: object
    tendermint.types.CommitSig:
      description: CommitSig is a part of the Vote included in a Commit.
      properties:
        block_id_flag:
          default: BLOCK_ID_FLAG_UNKNOWN
          enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
          title: BlockIdFlag indicates which BlcokID the signature is for
          type: string
        signature:
          format: byte
          type: string
        timestamp:
          format: date-time
          type: string
        validator_address:
          format: byte
          type: string
      type: object
    tendermint.types.Data:
      properties:
        txs:
          description: 'Txs that will be applied by state @ block.Height+1.

            NOTE: not all txs here are valid.  We''re just agreeing on the order first.

            This means that block.AppHash does not include these txs.'
          items:
            format: byte
            type: string
          type: array
      title: Data contains the set of transactions included in the block
      type: object
    tendermint.types.DuplicateVoteEvidence:
      description: DuplicateVoteEvidence contains evidence of a validator signed two
        conflicting votes.
      properties:
        timestamp:
          format: date-time
          type: string
        total_voting_power:
          format: int64
          type: string
        validator_power:
          format: int64
          type: string
        vote_a:
          description: 'Vote represents a prevote, precommit, or commit vote from
            validators for

            consensus.'
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signature:
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            type:
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: "SignedMsgType is a type of signed message in the consensus.\n\
                \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                \ Proposals"
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
              type: string
            validator_address:
              format: byte
              type: string
            validator_index:
              format: int32
              type: integer
          type: object
        vote_b:
          description: 'Vote represents a prevote, precommit, or commit vote from
            validators for

            consensus.'
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signature:
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            type:
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: "SignedMsgType is a type of signed message in the consensus.\n\
                \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                \ Proposals"
              enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
              type: string
            validator_address:
              format: byte
              type: string
            validator_index:
              format: int32
              type: integer
          type: object
      type: object
    tendermint.types.Evidence:
      properties:
        duplicate_vote_evidence:
          description: DuplicateVoteEvidence contains evidence of a validator signed
            two conflicting votes.
          properties:
            timestamp:
              format: date-time
              type: string
            total_voting_power:
              format: int64
              type: string
            validator_power:
              format: int64
              type: string
            vote_a:
              description: 'Vote represents a prevote, precommit, or commit vote from
                validators for

                consensus.'
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                type:
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: "SignedMsgType is a type of signed message in the consensus.\n\
                    \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                    \ Proposals"
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                  type: string
                validator_address:
                  format: byte
                  type: string
                validator_index:
                  format: int32
                  type: integer
              type: object
            vote_b:
              description: 'Vote represents a prevote, precommit, or commit vote from
                validators for

                consensus.'
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                type:
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: "SignedMsgType is a type of signed message in the consensus.\n\
                    \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL:\
                    \ Proposals"
                  enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                  type: string
                validator_address:
                  format: byte
                  type: string
                validator_index:
                  format: int32
                  type: integer
              type: object
          type: object
        light_client_attack_evidence:
          description: LightClientAttackEvidence contains evidence of a set of validators
            attempting to mislead a light client.
          properties:
            byzantine_validators:
              items:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: PublicKey defines the keys available for use with Tendermint
                      Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              type: array
            common_height:
              format: int64
              type: string
            conflicting_block:
              properties:
                signed_header:
                  properties:
                    commit:
                      description: Commit contains the evidence that a block was committed
                        by a set of validators.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signatures:
                          items:
                            description: CommitSig is a part of the Vote included
                              in a Commit.
                            properties:
                              block_id_flag:
                                default: BLOCK_ID_FLAG_UNKNOWN
                                enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                                title: BlockIdFlag indicates which BlcokID the signature
                                  is for
                                type: string
                              signature:
                                format: byte
                                type: string
                              timestamp:
                                format: date-time
                                type: string
                              validator_address:
                                format: byte
                                type: string
                            type: object
                          type: array
                      type: object
                    header:
                      description: Header defines the structure of a Tendermint block
                        header.
                      properties:
                        app_hash:
                          format: byte
                          type: string
                        chain_id:
                          type: string
                        consensus_hash:
                          format: byte
                          type: string
                        data_hash:
                          format: byte
                          type: string
                        evidence_hash:
                          format: byte
                          title: consensus info
                          type: string
                        height:
                          format: int64
                          type: string
                        last_block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        last_commit_hash:
                          format: byte
                          title: hashes of block data
                          type: string
                        last_results_hash:
                          format: byte
                          type: string
                        next_validators_hash:
                          format: byte
                          type: string
                        proposer_address:
                          format: byte
                          type: string
                        time:
                          format: date-time
                          type: string
                        validators_hash:
                          format: byte
                          title: hashes from the app output from the prev block
                          type: string
                        version:
                          description: 'Consensus captures the consensus rules for
                            processing a block in the blockchain,

                            including all blockchain data structures and the rules
                            of the application''s

                            state transition machine.'
                          properties:
                            app:
                              format: uint64
                              type: string
                            block:
                              format: uint64
                              type: string
                          title: basic block info
                          type: object
                      type: object
                  type: object
                validator_set:
                  properties:
                    proposer:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: PublicKey defines the keys available for use with
                            Tendermint Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    total_voting_power:
                      format: int64
                      type: string
                    validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: PublicKey defines the keys available for use with
                              Tendermint Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            timestamp:
              format: date-time
              type: string
            total_voting_power:
              format: int64
              type: string
          type: object
      type: object
    tendermint.types.EvidenceList:
      properties:
        evidence:
          items:
            properties:
              duplicate_vote_evidence:
                description: DuplicateVoteEvidence contains evidence of a validator
                  signed two conflicting votes.
                properties:
                  timestamp:
                    format: date-time
                    type: string
                  total_voting_power:
                    format: int64
                    type: string
                  validator_power:
                    format: int64
                    type: string
                  vote_a:
                    description: 'Vote represents a prevote, precommit, or commit
                      vote from validators for

                      consensus.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      type:
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: "SignedMsgType is a type of signed message in\
                          \ the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                          \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                        type: string
                      validator_address:
                        format: byte
                        type: string
                      validator_index:
                        format: int32
                        type: integer
                    type: object
                  vote_b:
                    description: 'Vote represents a prevote, precommit, or commit
                      vote from validators for

                      consensus.'
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      type:
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: "SignedMsgType is a type of signed message in\
                          \ the consensus.\n\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                          \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                        enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                        type: string
                      validator_address:
                        format: byte
                        type: string
                      validator_index:
                        format: int32
                        type: integer
                    type: object
                type: object
              light_client_attack_evidence:
                description: LightClientAttackEvidence contains evidence of a set
                  of validators attempting to mislead a light client.
                properties:
                  byzantine_validators:
                    items:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: PublicKey defines the keys available for use with
                            Tendermint Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                  common_height:
                    format: int64
                    type: string
                  conflicting_block:
                    properties:
                      signed_header:
                        properties:
                          commit:
                            description: Commit contains the evidence that a block
                              was committed by a set of validators.
                            properties:
                              block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              height:
                                format: int64
                                type: string
                              round:
                                format: int32
                                type: integer
                              signatures:
                                items:
                                  description: CommitSig is a part of the Vote included
                                    in a Commit.
                                  properties:
                                    block_id_flag:
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                      title: BlockIdFlag indicates which BlcokID the
                                        signature is for
                                      type: string
                                    signature:
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                  type: object
                                type: array
                            type: object
                          header:
                            description: Header defines the structure of a Tendermint
                              block header.
                            properties:
                              app_hash:
                                format: byte
                                type: string
                              chain_id:
                                type: string
                              consensus_hash:
                                format: byte
                                type: string
                              data_hash:
                                format: byte
                                type: string
                              evidence_hash:
                                format: byte
                                title: consensus info
                                type: string
                              height:
                                format: int64
                                type: string
                              last_block_id:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  part_set_header:
                                    properties:
                                      hash:
                                        format: byte
                                        type: string
                                      total:
                                        format: int64
                                        type: integer
                                    title: PartsetHeader
                                    type: object
                                title: BlockID
                                type: object
                              last_commit_hash:
                                format: byte
                                title: hashes of block data
                                type: string
                              last_results_hash:
                                format: byte
                                type: string
                              next_validators_hash:
                                format: byte
                                type: string
                              proposer_address:
                                format: byte
                                type: string
                              time:
                                format: date-time
                                type: string
                              validators_hash:
                                format: byte
                                title: hashes from the app output from the prev block
                                type: string
                              version:
                                description: 'Consensus captures the consensus rules
                                  for processing a block in the blockchain,

                                  including all blockchain data structures and the
                                  rules of the application''s

                                  state transition machine.'
                                properties:
                                  app:
                                    format: uint64
                                    type: string
                                  block:
                                    format: uint64
                                    type: string
                                title: basic block info
                                type: object
                            type: object
                        type: object
                      validator_set:
                        properties:
                          proposer:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: PublicKey defines the keys available for use
                                  with Tendermint Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          total_voting_power:
                            format: int64
                            type: string
                          validators:
                            items:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: PublicKey defines the keys available for
                                    use with Tendermint Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  timestamp:
                    format: date-time
                    type: string
                  total_voting_power:
                    format: int64
                    type: string
                type: object
            type: object
          type: array
      type: object
    tendermint.types.Header:
      description: Header defines the structure of a Tendermint block header.
      properties:
        app_hash:
          format: byte
          type: string
        chain_id:
          type: string
        consensus_hash:
          format: byte
          type: string
        data_hash:
          format: byte
          type: string
        evidence_hash:
          format: byte
          title: consensus info
          type: string
        height:
          format: int64
          type: string
        last_block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        last_commit_hash:
          format: byte
          title: hashes of block data
          type: string
        last_results_hash:
          format: byte
          type: string
        next_validators_hash:
          format: byte
          type: string
        proposer_address:
          format: byte
          type: string
        time:
          format: date-time
          type: string
        validators_hash:
          format: byte
          title: hashes from the app output from the prev block
          type: string
        version:
          description: 'Consensus captures the consensus rules for processing a block
            in the blockchain,

            including all blockchain data structures and the rules of the application''s

            state transition machine.'
          properties:
            app:
              format: uint64
              type: string
            block:
              format: uint64
              type: string
          title: basic block info
          type: object
      type: object
    tendermint.types.LightBlock:
      properties:
        signed_header:
          properties:
            commit:
              description: Commit contains the evidence that a block was committed
                by a set of validators.
              properties:
                block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                height:
                  format: int64
                  type: string
                round:
                  format: int32
                  type: integer
                signatures:
                  items:
                    description: CommitSig is a part of the Vote included in a Commit.
                    properties:
                      block_id_flag:
                        default: BLOCK_ID_FLAG_UNKNOWN
                        enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                        title: BlockIdFlag indicates which BlcokID the signature is
                          for
                        type: string
                      signature:
                        format: byte
                        type: string
                      timestamp:
                        format: date-time
                        type: string
                      validator_address:
                        format: byte
                        type: string
                    type: object
                  type: array
              type: object
            header:
              description: Header defines the structure of a Tendermint block header.
              properties:
                app_hash:
                  format: byte
                  type: string
                chain_id:
                  type: string
                consensus_hash:
                  format: byte
                  type: string
                data_hash:
                  format: byte
                  type: string
                evidence_hash:
                  format: byte
                  title: consensus info
                  type: string
                height:
                  format: int64
                  type: string
                last_block_id:
                  properties:
                    hash:
                      format: byte
                      type: string
                    part_set_header:
                      properties:
                        hash:
                          format: byte
                          type: string
                        total:
                          format: int64
                          type: integer
                      title: PartsetHeader
                      type: object
                  title: BlockID
                  type: object
                last_commit_hash:
                  format: byte
                  title: hashes of block data
                  type: string
                last_results_hash:
                  format: byte
                  type: string
                next_validators_hash:
                  format: byte
                  type: string
                proposer_address:
                  format: byte
                  type: string
                time:
                  format: date-time
                  type: string
                validators_hash:
                  format: byte
                  title: hashes from the app output from the prev block
                  type: string
                version:
                  description: 'Consensus captures the consensus rules for processing
                    a block in the blockchain,

                    including all blockchain data structures and the rules of the
                    application''s

                    state transition machine.'
                  properties:
                    app:
                      format: uint64
                      type: string
                    block:
                      format: uint64
                      type: string
                  title: basic block info
                  type: object
              type: object
          type: object
        validator_set:
          properties:
            proposer:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Tendermint
                    Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            total_voting_power:
              format: int64
              type: string
            validators:
              items:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: PublicKey defines the keys available for use with Tendermint
                      Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              type: array
          type: object
      type: object
    tendermint.types.LightClientAttackEvidence:
      description: LightClientAttackEvidence contains evidence of a set of validators
        attempting to mislead a light client.
      properties:
        byzantine_validators:
          items:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Tendermint
                  Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
        common_height:
          format: int64
          type: string
        conflicting_block:
          properties:
            signed_header:
              properties:
                commit:
                  description: Commit contains the evidence that a block was committed
                    by a set of validators.
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signatures:
                      items:
                        description: CommitSig is a part of the Vote included in a
                          Commit.
                        properties:
                          block_id_flag:
                            default: BLOCK_ID_FLAG_UNKNOWN
                            enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                            title: BlockIdFlag indicates which BlcokID the signature
                              is for
                            type: string
                          signature:
                            format: byte
                            type: string
                          timestamp:
                            format: date-time
                            type: string
                          validator_address:
                            format: byte
                            type: string
                        type: object
                      type: array
                  type: object
                header:
                  description: Header defines the structure of a Tendermint block
                    header.
                  properties:
                    app_hash:
                      format: byte
                      type: string
                    chain_id:
                      type: string
                    consensus_hash:
                      format: byte
                      type: string
                    data_hash:
                      format: byte
                      type: string
                    evidence_hash:
                      format: byte
                      title: consensus info
                      type: string
                    height:
                      format: int64
                      type: string
                    last_block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    last_commit_hash:
                      format: byte
                      title: hashes of block data
                      type: string
                    last_results_hash:
                      format: byte
                      type: string
                    next_validators_hash:
                      format: byte
                      type: string
                    proposer_address:
                      format: byte
                      type: string
                    time:
                      format: date-time
                      type: string
                    validators_hash:
                      format: byte
                      title: hashes from the app output from the prev block
                      type: string
                    version:
                      description: 'Consensus captures the consensus rules for processing
                        a block in the blockchain,

                        including all blockchain data structures and the rules of
                        the application''s

                        state transition machine.'
                      properties:
                        app:
                          format: uint64
                          type: string
                        block:
                          format: uint64
                          type: string
                      title: basic block info
                      type: object
                  type: object
              type: object
            validator_set:
              properties:
                proposer:
                  properties:
                    address:
                      format: byte
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        ed25519:
                          format: byte
                          type: string
                        secp256k1:
                          format: byte
                          type: string
                      title: PublicKey defines the keys available for use with Tendermint
                        Validators
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                total_voting_power:
                  format: int64
                  type: string
                validators:
                  items:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: PublicKey defines the keys available for use with Tendermint
                          Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        timestamp:
          format: date-time
          type: string
        total_voting_power:
          format: int64
          type: string
      type: object
    tendermint.types.PartSetHeader:
      properties:
        hash:
          format: byte
          type: string
        total:
          format: int64
          type: integer
      title: PartsetHeader
      type: object
    tendermint.types.SignedHeader:
      properties:
        commit:
          description: Commit contains the evidence that a block was committed by
            a set of validators.
          properties:
            block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            height:
              format: int64
              type: string
            round:
              format: int32
              type: integer
            signatures:
              items:
                description: CommitSig is a part of the Vote included in a Commit.
                properties:
                  block_id_flag:
                    default: BLOCK_ID_FLAG_UNKNOWN
                    enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                    title: BlockIdFlag indicates which BlcokID the signature is for
                    type: string
                  signature:
                    format: byte
                    type: string
                  timestamp:
                    format: date-time
                    type: string
                  validator_address:
                    format: byte
                    type: string
                type: object
              type: array
          type: object
        header:
          description: Header defines the structure of a Tendermint block header.
          properties:
            app_hash:
              format: byte
              type: string
            chain_id:
              type: string
            consensus_hash:
              format: byte
              type: string
            data_hash:
              format: byte
              type: string
            evidence_hash:
              format: byte
              title: consensus info
              type: string
            height:
              format: int64
              type: string
            last_block_id:
              properties:
                hash:
                  format: byte
                  type: string
                part_set_header:
                  properties:
                    hash:
                      format: byte
                      type: string
                    total:
                      format: int64
                      type: integer
                  title: PartsetHeader
                  type: object
              title: BlockID
              type: object
            last_commit_hash:
              format: byte
              title: hashes of block data
              type: string
            last_results_hash:
              format: byte
              type: string
            next_validators_hash:
              format: byte
              type: string
            proposer_address:
              format: byte
              type: string
            time:
              format: date-time
              type: string
            validators_hash:
              format: byte
              title: hashes from the app output from the prev block
              type: string
            version:
              description: 'Consensus captures the consensus rules for processing
                a block in the blockchain,

                including all blockchain data structures and the rules of the application''s

                state transition machine.'
              properties:
                app:
                  format: uint64
                  type: string
                block:
                  format: uint64
                  type: string
              title: basic block info
              type: object
          type: object
      type: object
    tendermint.types.SignedMsgType:
      default: SIGNED_MSG_TYPE_UNKNOWN
      description: "SignedMsgType is a type of signed message in the consensus.\n\n\
        \ - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
      enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
      type: string
    tendermint.types.Validator:
      properties:
        address:
          format: byte
          type: string
        proposer_priority:
          format: int64
          type: string
        pub_key:
          properties:
            ed25519:
              format: byte
              type: string
            secp256k1:
              format: byte
              type: string
          title: PublicKey defines the keys available for use with Tendermint Validators
          type: object
        voting_power:
          format: int64
          type: string
      type: object
    tendermint.types.ValidatorSet:
      properties:
        proposer:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Tendermint
                Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        total_voting_power:
          format: int64
          type: string
        validators:
          items:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Tendermint
                  Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          type: array
      type: object
    tendermint.types.Vote:
      description: 'Vote represents a prevote, precommit, or commit vote from validators
        for

        consensus.'
      properties:
        block_id:
          properties:
            hash:
              format: byte
              type: string
            part_set_header:
              properties:
                hash:
                  format: byte
                  type: string
                total:
                  format: int64
                  type: integer
              title: PartsetHeader
              type: object
          title: BlockID
          type: object
        height:
          format: int64
          type: string
        round:
          format: int32
          type: integer
        signature:
          format: byte
          type: string
        timestamp:
          format: date-time
          type: string
        type:
          default: SIGNED_MSG_TYPE_UNKNOWN
          description: "SignedMsgType is a type of signed message in the consensus.\n\
            \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
          enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
          type: string
        validator_address:
          format: byte
          type: string
        validator_index:
          format: int32
          type: integer
      type: object
    tendermint.version.Consensus:
      description: 'Consensus captures the consensus rules for processing a block
        in the blockchain,

        including all blockchain data structures and the rules of the application''s

        state transition machine.'
      properties:
        app:
          format: uint64
          type: string
        block:
          format: uint64
          type: string
      type: object
info:
  description: A REST interface for state queries, legacy transactions
  title: Osmosis - gRPC Gateway docs
  version: 1.0.0
openapi: 3.0.0
paths:
  /cosmos/auth/v1beta1/accounts:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: Accounts
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryAccountsResponse is the response type for the Query/Accounts
                  RPC method.


                  Since: cosmos-sdk 0.43'
                properties:
                  accounts:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    title: accounts are the existing accounts
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - auth
      - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      operationId: Account
      parameters:
      - description: address defines the address to query for.
        in: path
        name: address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAccountResponse is the response type for the Query/Account
                  RPC method.
                properties:
                  account:
                    description: "`Any` contains an arbitrary serialized protocol\
                      \ buffer message along with a\nURL that describes the type of\
                      \ the serialized message.\n\nProtobuf library provides support\
                      \ to pack/unpack Any values in the form\nof utility functions\
                      \ or additional generated methods of the Any type.\n\nExample\
                      \ 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
                      \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
                      \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message\
                      \ in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                      \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                      \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n \
                      \   ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                      \      ...\n\n Example 4: Pack and unpack a message in Go\n\n\
                      \     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                      \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                      \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                      \ as the type URL and the unpack\nmethods only use the fully\
                      \ qualified type name after the last '/'\nin the type URL, for\
                      \ example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\"\
                      .\n\n\nJSON\n====\nThe JSON representation of an `Any` value\
                      \ uses the regular\nrepresentation of the deserialized, embedded\
                      \ message, with an\nadditional field `@type` which contains\
                      \ the type URL. Example:\n\n\n    package google.profile;\n\
                      \    message Person {\n      string first_name = 1;\n      string\
                      \ last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                      \    }\n\nIf the embedded message type is well-known and has\
                      \ a custom JSON\nrepresentation, that representation will be\
                      \ embedded adding a field\n`value` which holds the custom JSON\
                      \ in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                      \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                      ,\n      \"value\": \"1.212s\"\n    }"
                    properties:
                      type_url:
                        description: "A URL/resource name that uniquely identifies\
                          \ the type of the serialized\nprotocol buffer message. This\
                          \ string must contain at least\none \"/\" character. The\
                          \ last segment of the URL's path must represent\nthe fully\
                          \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                          \ The name should be in a canonical form\n(e.g., leading\
                          \ \".\" is not accepted).\n\nIn practice, teams usually\
                          \ precompile into the binary all types that they\nexpect\
                          \ it to use in the context of Any. However, for URLs which\
                          \ use the\nscheme `http`, `https`, or no scheme, one can\
                          \ optionally set up a type\nserver that maps type URLs to\
                          \ message definitions as follows:\n\n* If no scheme is provided,\
                          \ `https` is assumed.\n* An HTTP GET on the URL must yield\
                          \ a [google.protobuf.Type][]\n\n  value in binary format,\
                          \ or produce an error.\n* Applications are allowed to cache\
                          \ lookup results based on the\n\n  URL, or have them precompiled\
                          \ into a binary to avoid any\n  lookup. Therefore, binary\
                          \ compatibility needs to be preserved\n  on changes to types.\
                          \ (Use versioned type names to manage\n  breaking changes.)\n\
                          \nNote: this functionality is not currently available in\
                          \ the official\nprotobuf release, and it is not used for\
                          \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                          \ other than `http`, `https` (or the empty scheme) might\
                          \ be\nused with implementation specific semantics."
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - auth
      - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      operationId: ModuleAccounts
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryModuleAccountsResponse is the response type for
                  the Query/ModuleAccounts RPC method.
                properties:
                  accounts:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - auth
      - Query
  /cosmos/auth/v1beta1/params:
    get:
      operationId: AuthParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      max_memo_characters:
                        format: uint64
                        type: string
                      sig_verify_cost_ed25519:
                        format: uint64
                        type: string
                      sig_verify_cost_secp256k1:
                        format: uint64
                        type: string
                      tx_sig_limit:
                        format: uint64
                        type: string
                      tx_size_cost_per_byte:
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - auth
      - Query
  /cosmos/authz/v1beta1/grants:
    get:
      operationId: Grants
      parameters:
      - in: query
        name: granter
        required: false
        schema:
          type: string
      - in: query
        name: grantee
        required: false
        schema:
          type: string
      - description: Optional, msg_type_url, when set, will query only grants matching
          given msg type.
        in: query
        name: msg_type_url
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGrantsResponse is the response type for the Query/Authorizations
                  RPC method.
                properties:
                  grants:
                    description: authorizations is a list of grants granted for grantee
                      by granter.
                    items:
                      description: 'Grant gives permissions to execute

                        the provide method with expiration time.'
                      properties:
                        authorization:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - authz
      - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      operationId: GranteeGrants
      parameters:
      - in: path
        name: grantee
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGranteeGrantsResponse is the response type for the
                  Query/GranteeGrants RPC method.
                properties:
                  grants:
                    description: grants is a list of grants granted to the grantee.
                    items:
                      properties:
                        authorization:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          type: string
                        grantee:
                          type: string
                        granter:
                          type: string
                      title: 'GrantAuthorization extends a grant with both the addresses
                        of the grantee and granter.

                        It is used in genesis.proto and query.proto'
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - authz
      - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      operationId: GranterGrants
      parameters:
      - in: path
        name: granter
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryGranterGrantsResponse is the response type for the
                  Query/GranterGrants RPC method.
                properties:
                  grants:
                    description: grants is a list of grants granted by the granter.
                    items:
                      properties:
                        authorization:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        expiration:
                          format: date-time
                          type: string
                        grantee:
                          type: string
                        granter:
                          type: string
                      title: 'GrantAuthorization extends a grant with both the addresses
                        of the grantee and granter.

                        It is used in genesis.proto and query.proto'
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - authz
      - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      operationId: AllBalances
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryAllBalancesResponse is the response type for the
                  Query/AllBalances RPC

                  method.'
                properties:
                  balances:
                    description: balances is the balances of all the coins.
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      operationId: Balance
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        schema:
          type: string
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBalanceResponse is the response type for the Query/Balance
                  RPC method.
                properties:
                  balance:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/base_denom:
    get:
      operationId: BaseDenom
      parameters:
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryBaseDenomResponse defines the response type for
                  the BaseDenom gRPC method.
                properties:
                  base_denom:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      operationId: DenomsMetadata
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDenomsMetadataResponse is the response type for
                  the Query/DenomsMetadata RPC

                  method.'
                properties:
                  metadatas:
                    description: metadata provides the client information for all
                      the registered tokens.
                    items:
                      description: 'Metadata represents a struct that describes

                        a basic token.'
                      properties:
                        base:
                          description: base represents the base denom (should be the
                            DenomUnit with exponent = 0).
                          type: string
                        denom_units:
                          items:
                            description: 'DenomUnit represents a struct that describes
                              a given

                              denomination unit of the basic token.'
                            properties:
                              aliases:
                                items:
                                  type: string
                                title: aliases is a list of string aliases for the
                                  given denom
                                type: array
                              denom:
                                description: denom represents the string name of the
                                  given denom unit (e.g uatom).
                                type: string
                              exponent:
                                description: 'exponent represents power of 10 exponent
                                  that one must

                                  raise the base_denom to in order to equal the given
                                  DenomUnit''s denom

                                  1 denom = 1^exponent base_denom

                                  (e.g. with a base_denom of uatom, one can create
                                  a DenomUnit of ''atom'' with

                                  exponent = 6, thus: 1 atom = 10^6 uatom).'
                                format: int64
                                type: integer
                            type: object
                          title: denom_units represents the list of DenomUnit's for
                            a given coin
                          type: array
                        description:
                          type: string
                        display:
                          description: 'display indicates the suggested denom that
                            should be

                            displayed in clients.'
                          type: string
                        name:
                          description: 'Since: cosmos-sdk 0.43'
                          title: 'name defines the name of the token (eg: Cosmos Atom)'
                          type: string
                        symbol:
                          description: 'symbol is the token symbol usually shown on
                            exchanges (eg: ATOM). This can

                            be the same as the display.


                            Since: cosmos-sdk 0.43'
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      operationId: DenomMetadata
      parameters:
      - description: denom is the coin denom to query the metadata for.
        in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDenomMetadataResponse is the response type for
                  the Query/DenomMetadata RPC

                  method.'
                properties:
                  metadata:
                    description: 'Metadata represents a struct that describes

                      a basic token.'
                    properties:
                      base:
                        description: base represents the base denom (should be the
                          DenomUnit with exponent = 0).
                        type: string
                      denom_units:
                        items:
                          description: 'DenomUnit represents a struct that describes
                            a given

                            denomination unit of the basic token.'
                          properties:
                            aliases:
                              items:
                                type: string
                              title: aliases is a list of string aliases for the given
                                denom
                              type: array
                            denom:
                              description: denom represents the string name of the
                                given denom unit (e.g uatom).
                              type: string
                            exponent:
                              description: 'exponent represents power of 10 exponent
                                that one must

                                raise the base_denom to in order to equal the given
                                DenomUnit''s denom

                                1 denom = 1^exponent base_denom

                                (e.g. with a base_denom of uatom, one can create a
                                DenomUnit of ''atom'' with

                                exponent = 6, thus: 1 atom = 10^6 uatom).'
                              format: int64
                              type: integer
                          type: object
                        title: denom_units represents the list of DenomUnit's for
                          a given coin
                        type: array
                      description:
                        type: string
                      display:
                        description: 'display indicates the suggested denom that should
                          be

                          displayed in clients.'
                        type: string
                      name:
                        description: 'Since: cosmos-sdk 0.43'
                        title: 'name defines the name of the token (eg: Cosmos Atom)'
                        type: string
                      symbol:
                        description: 'symbol is the token symbol usually shown on
                          exchanges (eg: ATOM). This can

                          be the same as the display.


                          Since: cosmos-sdk 0.43'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/params:
    get:
      operationId: BankParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse defines the response type for querying
                  x/bank parameters.
                properties:
                  params:
                    description: Params defines the parameters for the bank module.
                    properties:
                      default_send_enabled:
                        type: boolean
                      send_enabled:
                        items:
                          description: 'SendEnabled maps coin denom to a send_enabled
                            status (whether a denom is

                            sendable).'
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/supply:
    get:
      operationId: TotalSupply
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: 'pagination defines the pagination in the response.


                      Since: cosmos-sdk 0.43'
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  supply:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: supply is the supply of the coins
                    type: array
                title: 'QueryTotalSupplyResponse is the response type for the Query/TotalSupply
                  RPC

                  method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/supply/{denom}:
    get:
      operationId: SupplyOf
      parameters:
      - description: denom is the coin denom to query balances for.
        in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
                  RPC method.
                properties:
                  amount:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/supply_without_offset:
    get:
      operationId: TotalSupplyWithoutOffset
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: 'pagination defines the pagination in the response.


                      Since: cosmos-sdk 0.43'
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  supply:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: supply is the supply of the coins
                    type: array
                title: 'QueryTotalSupplyWithoutOffsetResponse is the response type
                  for the Query/TotalSupplyWithoutOffset RPC

                  method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/bank/v1beta1/supply_without_offset/{denom}:
    get:
      operationId: SupplyOfWithoutOffset
      parameters:
      - description: denom is the coin denom to query balances for.
        in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QuerySupplyOfWithoutOffsetResponse is the response type
                  for the Query/SupplyOfWithoutOffset RPC method.
                properties:
                  amount:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - bank
      - Query
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      operationId: GetLatestBlock
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetLatestBlockResponse is the response type for the Query/GetLatestBlock
                  RPC method.
                properties:
                  block:
                    properties:
                      data:
                        properties:
                          txs:
                            description: 'Txs that will be applied by state @ block.Height+1.

                              NOTE: not all txs here are valid.  We''re just agreeing
                              on the order first.

                              This means that block.AppHash does not include these
                              txs.'
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: 'Vote represents a prevote, precommit,
                                        or commit vote from validators for

                                        consensus.'
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: "SignedMsgType is a type of\
                                            \ signed message in the consensus.\n\n\
                                            \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: 'Vote represents a prevote, precommit,
                                        or commit vote from validators for

                                        consensus.'
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: "SignedMsgType is a type of\
                                            \ signed message in the consensus.\n\n\
                                            \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available
                                              for use with Tendermint Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure
                                                of a Tendermint block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output
                                                    from the prev block
                                                  type: string
                                                version:
                                                  description: 'Consensus captures
                                                    the consensus rules for processing
                                                    a block in the blockchain,

                                                    including all blockchain data
                                                    structures and the rules of the
                                                    application''s

                                                    state transition machine.'
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys
                                                    available for use with Tendermint
                                                    Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys
                                                      available for use with Tendermint
                                                      Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a Tendermint
                          block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: 'Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules
                              of the application''s

                              state transition machine.'
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      operationId: GetBlockByHeight
      parameters:
      - in: path
        name: height
        required: true
        schema:
          format: int64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetBlockByHeightResponse is the response type for the
                  Query/GetBlockByHeight RPC method.
                properties:
                  block:
                    properties:
                      data:
                        properties:
                          txs:
                            description: 'Txs that will be applied by state @ block.Height+1.

                              NOTE: not all txs here are valid.  We''re just agreeing
                              on the order first.

                              This means that block.AppHash does not include these
                              txs.'
                            items:
                              format: byte
                              type: string
                            type: array
                        title: Data contains the set of transactions included in the
                          block
                        type: object
                      evidence:
                        properties:
                          evidence:
                            items:
                              properties:
                                duplicate_vote_evidence:
                                  description: DuplicateVoteEvidence contains evidence
                                    of a validator signed two conflicting votes.
                                  properties:
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                    validator_power:
                                      format: int64
                                      type: string
                                    vote_a:
                                      description: 'Vote represents a prevote, precommit,
                                        or commit vote from validators for

                                        consensus.'
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: "SignedMsgType is a type of\
                                            \ signed message in the consensus.\n\n\
                                            \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                    vote_b:
                                      description: 'Vote represents a prevote, precommit,
                                        or commit vote from validators for

                                        consensus.'
                                      properties:
                                        block_id:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            part_set_header:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                total:
                                                  format: int64
                                                  type: integer
                                              title: PartsetHeader
                                              type: object
                                          title: BlockID
                                          type: object
                                        height:
                                          format: int64
                                          type: string
                                        round:
                                          format: int32
                                          type: integer
                                        signature:
                                          format: byte
                                          type: string
                                        timestamp:
                                          format: date-time
                                          type: string
                                        type:
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: "SignedMsgType is a type of\
                                            \ signed message in the consensus.\n\n\
                                            \n - SIGNED_MSG_TYPE_PREVOTE: Votes\n\
                                            \ - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
                                          enum:
                                          - SIGNED_MSG_TYPE_UNKNOWN
                                          - SIGNED_MSG_TYPE_PREVOTE
                                          - SIGNED_MSG_TYPE_PRECOMMIT
                                          - SIGNED_MSG_TYPE_PROPOSAL
                                          type: string
                                        validator_address:
                                          format: byte
                                          type: string
                                        validator_index:
                                          format: int32
                                          type: integer
                                      type: object
                                  type: object
                                light_client_attack_evidence:
                                  description: LightClientAttackEvidence contains
                                    evidence of a set of validators attempting to
                                    mislead a light client.
                                  properties:
                                    byzantine_validators:
                                      items:
                                        properties:
                                          address:
                                            format: byte
                                            type: string
                                          proposer_priority:
                                            format: int64
                                            type: string
                                          pub_key:
                                            properties:
                                              ed25519:
                                                format: byte
                                                type: string
                                              secp256k1:
                                                format: byte
                                                type: string
                                            title: PublicKey defines the keys available
                                              for use with Tendermint Validators
                                            type: object
                                          voting_power:
                                            format: int64
                                            type: string
                                        type: object
                                      type: array
                                    common_height:
                                      format: int64
                                      type: string
                                    conflicting_block:
                                      properties:
                                        signed_header:
                                          properties:
                                            commit:
                                              description: Commit contains the evidence
                                                that a block was committed by a set
                                                of validators.
                                              properties:
                                                block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                height:
                                                  format: int64
                                                  type: string
                                                round:
                                                  format: int32
                                                  type: integer
                                                signatures:
                                                  items:
                                                    description: CommitSig is a part
                                                      of the Vote included in a Commit.
                                                    properties:
                                                      block_id_flag:
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        enum:
                                                        - BLOCK_ID_FLAG_UNKNOWN
                                                        - BLOCK_ID_FLAG_ABSENT
                                                        - BLOCK_ID_FLAG_COMMIT
                                                        - BLOCK_ID_FLAG_NIL
                                                        title: BlockIdFlag indicates
                                                          which BlcokID the signature
                                                          is for
                                                        type: string
                                                      signature:
                                                        format: byte
                                                        type: string
                                                      timestamp:
                                                        format: date-time
                                                        type: string
                                                      validator_address:
                                                        format: byte
                                                        type: string
                                                    type: object
                                                  type: array
                                              type: object
                                            header:
                                              description: Header defines the structure
                                                of a Tendermint block header.
                                              properties:
                                                app_hash:
                                                  format: byte
                                                  type: string
                                                chain_id:
                                                  type: string
                                                consensus_hash:
                                                  format: byte
                                                  type: string
                                                data_hash:
                                                  format: byte
                                                  type: string
                                                evidence_hash:
                                                  format: byte
                                                  title: consensus info
                                                  type: string
                                                height:
                                                  format: int64
                                                  type: string
                                                last_block_id:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    part_set_header:
                                                      properties:
                                                        hash:
                                                          format: byte
                                                          type: string
                                                        total:
                                                          format: int64
                                                          type: integer
                                                      title: PartsetHeader
                                                      type: object
                                                  title: BlockID
                                                  type: object
                                                last_commit_hash:
                                                  format: byte
                                                  title: hashes of block data
                                                  type: string
                                                last_results_hash:
                                                  format: byte
                                                  type: string
                                                next_validators_hash:
                                                  format: byte
                                                  type: string
                                                proposer_address:
                                                  format: byte
                                                  type: string
                                                time:
                                                  format: date-time
                                                  type: string
                                                validators_hash:
                                                  format: byte
                                                  title: hashes from the app output
                                                    from the prev block
                                                  type: string
                                                version:
                                                  description: 'Consensus captures
                                                    the consensus rules for processing
                                                    a block in the blockchain,

                                                    including all blockchain data
                                                    structures and the rules of the
                                                    application''s

                                                    state transition machine.'
                                                  properties:
                                                    app:
                                                      format: uint64
                                                      type: string
                                                    block:
                                                      format: uint64
                                                      type: string
                                                  title: basic block info
                                                  type: object
                                              type: object
                                          type: object
                                        validator_set:
                                          properties:
                                            proposer:
                                              properties:
                                                address:
                                                  format: byte
                                                  type: string
                                                proposer_priority:
                                                  format: int64
                                                  type: string
                                                pub_key:
                                                  properties:
                                                    ed25519:
                                                      format: byte
                                                      type: string
                                                    secp256k1:
                                                      format: byte
                                                      type: string
                                                  title: PublicKey defines the keys
                                                    available for use with Tendermint
                                                    Validators
                                                  type: object
                                                voting_power:
                                                  format: int64
                                                  type: string
                                              type: object
                                            total_voting_power:
                                              format: int64
                                              type: string
                                            validators:
                                              items:
                                                properties:
                                                  address:
                                                    format: byte
                                                    type: string
                                                  proposer_priority:
                                                    format: int64
                                                    type: string
                                                  pub_key:
                                                    properties:
                                                      ed25519:
                                                        format: byte
                                                        type: string
                                                      secp256k1:
                                                        format: byte
                                                        type: string
                                                    title: PublicKey defines the keys
                                                      available for use with Tendermint
                                                      Validators
                                                    type: object
                                                  voting_power:
                                                    format: int64
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                      type: object
                                    timestamp:
                                      format: date-time
                                      type: string
                                    total_voting_power:
                                      format: int64
                                      type: string
                                  type: object
                              type: object
                            type: array
                        type: object
                      header:
                        description: Header defines the structure of a Tendermint
                          block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: 'Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules
                              of the application''s

                              state transition machine.'
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      last_commit:
                        description: Commit contains the evidence that a block was
                          committed by a set of validators.
                        properties:
                          block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: BlockID
                            type: object
                          height:
                            format: int64
                            type: string
                          round:
                            format: int32
                            type: integer
                          signatures:
                            items:
                              description: CommitSig is a part of the Vote included
                                in a Commit.
                              properties:
                                block_id_flag:
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                  title: BlockIdFlag indicates which BlcokID the signature
                                    is for
                                  type: string
                                signature:
                                  format: byte
                                  type: string
                                timestamp:
                                  format: date-time
                                  type: string
                                validator_address:
                                  format: byte
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      operationId: GetNodeInfo
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
                  RPC method.
                properties:
                  application_version:
                    description: VersionInfo is the type for the GetNodeInfoResponse
                      message.
                    properties:
                      app_name:
                        type: string
                      build_deps:
                        items:
                          properties:
                            path:
                              title: module path
                              type: string
                            sum:
                              title: checksum
                              type: string
                            version:
                              title: module version
                              type: string
                          title: Module is the type for VersionInfo
                          type: object
                        type: array
                      build_tags:
                        type: string
                      cosmos_sdk_version:
                        title: 'Since: cosmos-sdk 0.43'
                        type: string
                      git_commit:
                        type: string
                      go_version:
                        type: string
                      name:
                        type: string
                      version:
                        type: string
                    type: object
                  default_node_info:
                    properties:
                      channels:
                        format: byte
                        type: string
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      moniker:
                        type: string
                      network:
                        type: string
                      other:
                        properties:
                          rpc_address:
                            type: string
                          tx_index:
                            type: string
                        type: object
                      protocol_version:
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                          p2p:
                            format: uint64
                            type: string
                        type: object
                      version:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      operationId: GetSyncing
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetSyncingResponse is the response type for the Query/GetSyncing
                  RPC method.
                properties:
                  syncing:
                    type: boolean
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      operationId: GetLatestValidatorSet
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetLatestValidatorSetResponse is the response type for
                  the Query/GetValidatorSetByHeight RPC method.
                properties:
                  block_height:
                    format: int64
                    type: string
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  validators:
                    items:
                      description: Validator is the type for the validator-set.
                      properties:
                        address:
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      operationId: GetValidatorSetByHeight
      parameters:
      - in: path
        name: height
        required: true
        schema:
          format: int64
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: GetValidatorSetByHeightResponse is the response type
                  for the Query/GetValidatorSetByHeight RPC method.
                properties:
                  block_height:
                    format: int64
                    type: string
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  validators:
                    items:
                      description: Validator is the type for the validator-set.
                      properties:
                        address:
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - base
      - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      operationId: CommunityPool
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryCommunityPoolResponse is the response type for
                  the Query/CommunityPool

                  RPC method.'
                properties:
                  pool:
                    description: pool defines community pool's coins.
                    items:
                      description: 'DecCoin defines a token with a denomination and
                        a decimal amount.


                        NOTE: The amount field is an Dec which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      operationId: DelegationTotalRewards
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegationTotalRewardsResponse is the response
                  type for the

                  Query/DelegationTotalRewards RPC method.'
                properties:
                  rewards:
                    description: rewards defines all the rewards accrued by a delegator.
                    items:
                      description: 'DelegationDelegatorReward represents the properties

                        of a delegator''s delegation reward.'
                      properties:
                        reward:
                          items:
                            description: 'DecCoin defines a token with a denomination
                              and a decimal amount.


                              NOTE: The amount field is an Dec which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        validator_address:
                          type: string
                      type: object
                    type: array
                  total:
                    description: total defines the sum of all the rewards.
                    items:
                      description: 'DecCoin defines a token with a denomination and
                        a decimal amount.


                        NOTE: The amount field is an Dec which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      operationId: DelegationRewards
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        schema:
          type: string
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegationRewardsResponse is the response type
                  for the

                  Query/DelegationRewards RPC method.'
                properties:
                  rewards:
                    description: rewards defines the rewards accrued by a delegation.
                    items:
                      description: 'DecCoin defines a token with a denomination and
                        a decimal amount.


                        NOTE: The amount field is an Dec which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      operationId: DelegatorValidators
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegatorValidatorsResponse is the response type
                  for the

                  Query/DelegatorValidators RPC method.'
                properties:
                  validators:
                    description: validators defines the validators a delegator is
                      delegating for.
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      operationId: DelegatorWithdrawAddress
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegatorWithdrawAddressResponse is the response
                  type for the

                  Query/DelegatorWithdrawAddress RPC method.'
                properties:
                  withdraw_address:
                    description: withdraw_address defines the delegator address to
                      query for.
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/params:
    get:
      operationId: DistributionParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      base_proposer_reward:
                        type: string
                      bonus_proposer_reward:
                        type: string
                      community_tax:
                        type: string
                      withdraw_addr_enabled:
                        type: boolean
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      operationId: ValidatorCommission
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  commission:
                    description: commission defines the commision the validator received.
                    properties:
                      commission:
                        items:
                          description: 'DecCoin defines a token with a denomination
                            and a decimal amount.


                            NOTE: The amount field is an Dec which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                title: 'QueryValidatorCommissionResponse is the response type for
                  the

                  Query/ValidatorCommission RPC method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      operationId: ValidatorOutstandingRewards
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryValidatorOutstandingRewardsResponse is the response
                  type for the

                  Query/ValidatorOutstandingRewards RPC method.'
                properties:
                  rewards:
                    description: 'ValidatorOutstandingRewards represents outstanding
                      (un-withdrawn) rewards

                      for a validator inexpensive to track, allows simple sanity checks.'
                    properties:
                      rewards:
                        items:
                          description: 'DecCoin defines a token with a denomination
                            and a decimal amount.


                            NOTE: The amount field is an Dec which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      operationId: ValidatorSlashes
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        schema:
          type: string
      - description: starting_height defines the optional starting height to query
          the slashes.
        in: query
        name: starting_height
        required: false
        schema:
          format: uint64
          type: string
      - description: starting_height defines the optional ending height to query the
          slashes.
        in: query
        name: ending_height
        required: false
        schema:
          format: uint64
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryValidatorSlashesResponse is the response type for
                  the

                  Query/ValidatorSlashes RPC method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  slashes:
                    description: slashes defines the slashes the validator received.
                    items:
                      description: 'ValidatorSlashEvent represents a validator slash
                        event.

                        Height is implicit within the store key.

                        This is needed to calculate appropriate amount of staking
                        tokens

                        for delegations which are withdrawn after a slash has occurred.'
                      properties:
                        fraction:
                          type: string
                        validator_period:
                          format: uint64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - distribution
      - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      operationId: AllEvidence
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryAllEvidenceResponse is the response type for the
                  Query/AllEvidence RPC

                  method.'
                properties:
                  evidence:
                    description: evidence returns all evidences.
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - evidence
      - Query
  /cosmos/evidence/v1beta1/evidence/{evidence_hash}:
    get:
      operationId: Evidence
      parameters:
      - description: evidence_hash defines the hash of the requested evidence.
        in: path
        name: evidence_hash
        required: true
        schema:
          format: byte
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryEvidenceResponse is the response type for the Query/Evidence
                  RPC method.
                properties:
                  evidence:
                    description: "`Any` contains an arbitrary serialized protocol\
                      \ buffer message along with a\nURL that describes the type of\
                      \ the serialized message.\n\nProtobuf library provides support\
                      \ to pack/unpack Any values in the form\nof utility functions\
                      \ or additional generated methods of the Any type.\n\nExample\
                      \ 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
                      \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
                      \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message\
                      \ in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                      \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                      \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n \
                      \   ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                      \      ...\n\n Example 4: Pack and unpack a message in Go\n\n\
                      \     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                      \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                      \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                      \ as the type URL and the unpack\nmethods only use the fully\
                      \ qualified type name after the last '/'\nin the type URL, for\
                      \ example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\"\
                      .\n\n\nJSON\n====\nThe JSON representation of an `Any` value\
                      \ uses the regular\nrepresentation of the deserialized, embedded\
                      \ message, with an\nadditional field `@type` which contains\
                      \ the type URL. Example:\n\n\n    package google.profile;\n\
                      \    message Person {\n      string first_name = 1;\n      string\
                      \ last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                      \    }\n\nIf the embedded message type is well-known and has\
                      \ a custom JSON\nrepresentation, that representation will be\
                      \ embedded adding a field\n`value` which holds the custom JSON\
                      \ in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                      \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                      ,\n      \"value\": \"1.212s\"\n    }"
                    properties:
                      type_url:
                        description: "A URL/resource name that uniquely identifies\
                          \ the type of the serialized\nprotocol buffer message. This\
                          \ string must contain at least\none \"/\" character. The\
                          \ last segment of the URL's path must represent\nthe fully\
                          \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                          \ The name should be in a canonical form\n(e.g., leading\
                          \ \".\" is not accepted).\n\nIn practice, teams usually\
                          \ precompile into the binary all types that they\nexpect\
                          \ it to use in the context of Any. However, for URLs which\
                          \ use the\nscheme `http`, `https`, or no scheme, one can\
                          \ optionally set up a type\nserver that maps type URLs to\
                          \ message definitions as follows:\n\n* If no scheme is provided,\
                          \ `https` is assumed.\n* An HTTP GET on the URL must yield\
                          \ a [google.protobuf.Type][]\n\n  value in binary format,\
                          \ or produce an error.\n* Applications are allowed to cache\
                          \ lookup results based on the\n\n  URL, or have them precompiled\
                          \ into a binary to avoid any\n  lookup. Therefore, binary\
                          \ compatibility needs to be preserved\n  on changes to types.\
                          \ (Use versioned type names to manage\n  breaking changes.)\n\
                          \nNote: this functionality is not currently available in\
                          \ the official\nprotobuf release, and it is not used for\
                          \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                          \ other than `http`, `https` (or the empty scheme) might\
                          \ be\nused with implementation specific semantics."
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - evidence
      - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      operationId: Allowance
      parameters:
      - description: granter is the address of the user granting an allowance of their
          funds.
        in: path
        name: granter
        required: true
        schema:
          type: string
      - description: grantee is the address of the user being granted an allowance
          of another user's funds.
        in: path
        name: grantee
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAllowanceResponse is the response type for the Query/Allowance
                  RPC method.
                properties:
                  allowance:
                    description: allowance is a allowance granted for grantee by granter.
                    properties:
                      allowance:
                        description: allowance can be any of basic and filtered fee
                          allowance.
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      grantee:
                        description: grantee is the address of the user being granted
                          an allowance of another user's funds.
                        type: string
                      granter:
                        description: granter is the address of the user granting an
                          allowance of their funds.
                        type: string
                    title: Grant is stored in the KVStore to record a grant with full
                      context
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - feegrant
      - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      operationId: Allowances
      parameters:
      - in: path
        name: grantee
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryAllowancesResponse is the response type for the
                  Query/Allowances RPC method.
                properties:
                  allowances:
                    description: allowances are allowance's granted for grantee by
                      granter.
                    items:
                      properties:
                        allowance:
                          description: allowance can be any of basic and filtered
                            fee allowance.
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        grantee:
                          description: grantee is the address of the user being granted
                            an allowance of another user's funds.
                          type: string
                        granter:
                          description: granter is the address of the user granting
                            an allowance of their funds.
                          type: string
                      title: Grant is stored in the KVStore to record a grant with
                        full context
                      type: object
                    type: array
                  pagination:
                    description: pagination defines an pagination for the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - feegrant
      - Query
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      operationId: GovParams
      parameters:
      - description: 'params_type defines which parameters to query for, can be one
          of "voting",

          "tallying" or "deposit".'
        in: path
        name: params_type
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  deposit_params:
                    description: deposit_params defines the parameters related to
                      deposit.
                    properties:
                      max_deposit_period:
                        description: "Maximum period for Atom holders to deposit on\
                          \ a proposal. Initial value: 2\n\n months."
                        type: string
                      min_deposit:
                        description: Minimum deposit for a proposal to enter voting
                          period.
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      min_expedited_deposit:
                        description: Minimum expedited deposit for a proposal to enter
                          voting period.
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      min_initial_deposit_ratio:
                        description: The ratio representing the proportion of the
                          deposit value that must be paid at proposal submission.
                        type: string
                    type: object
                  tally_params:
                    description: tally_params defines the parameters related to tally.
                    properties:
                      expedited_quorum:
                        description: 'Minimum proportion of Yes votes for an expedited
                          proposal to reach quorum. Default value: 0.67.'
                        format: byte
                        type: string
                      expedited_threshold:
                        description: 'Minimum proportion of Yes votes for an expedited
                          proposal to pass. Default value: 0.67.'
                        format: byte
                        type: string
                      quorum:
                        description: "Minimum percentage of total stake needed to\
                          \ vote for a result to be\n\n considered valid."
                        format: byte
                        type: string
                      threshold:
                        description: 'Minimum proportion of Yes votes for proposal
                          to pass. Default value: 0.5.'
                        format: byte
                        type: string
                      veto_threshold:
                        description: "Minimum value of Veto votes to Total votes ratio\
                          \ for proposal to be\n\n vetoed. Default value: 1/3."
                        format: byte
                        type: string
                    type: object
                  voting_params:
                    description: voting_params defines the parameters related to voting.
                    properties:
                      expedited_voting_period:
                        description: Length of the expedited voting period.
                        type: string
                      proposal_voting_periods:
                        description: proposal_voting_periods defines custom voting
                          periods for proposal types.
                        items:
                          description: 'ProposalVotingPeriod defines custom voting
                            periods for a unique governance

                            proposal type.'
                          properties:
                            proposal_type:
                              type: string
                            voting_period:
                              type: string
                          type: object
                        type: array
                      voting_period:
                        description: voting_period defines the length of the voting
                          period.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      operationId: Proposals
      parameters:
      - description: "proposal_status defines the status of the proposals.\n\n\n -\
          \ PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default\
          \ propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
          \ defines a proposal status during the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD:\
          \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
          period.\n\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
          \ status of a proposal that has\npassed.\n\n - PROPOSAL_STATUS_REJECTED:\
          \ PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that\
          \ has\nbeen rejected.\n\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED\
          \ defines a proposal status of a proposal that has\nfailed."
        in: query
        name: proposal_status
        required: false
        schema:
          default: PROPOSAL_STATUS_UNSPECIFIED
          enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
          type: string
      - description: voter defines the voter address for the proposals.
        in: query
        name: voter
        required: false
        schema:
          type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: query
        name: depositor
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryProposalsResponse is the response type for the
                  Query/Proposals RPC

                  method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  proposals:
                    items:
                      description: Proposal defines the core field members of a governance
                        proposal.
                      properties:
                        content:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        deposit_end_time:
                          format: date-time
                          type: string
                        final_tally_result:
                          description: TallyResult defines a standard tally for a
                            governance proposal.
                          properties:
                            true:
                              type: string
                            abstain:
                              type: string
                            false:
                              type: string
                            no_with_veto:
                              type: string
                          type: object
                        is_expedited:
                          type: boolean
                        proposal_id:
                          format: uint64
                          type: string
                        status:
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          description: "ProposalStatus enumerates the valid statuses\
                            \ of a proposal.\n\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
                            \ PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal\
                            \ status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
                            \ defines a proposal status during the deposit\nperiod.\n\
                            \n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
                            \ defines a proposal status during the voting\nperiod.\n\
                            \n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines\
                            \ a proposal status of a proposal that has\npassed.\n\n\
                            \ - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
                            \ defines a proposal status of a proposal that has\nbeen\
                            \ rejected.\n\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED\
                            \ defines a proposal status of a proposal that has\nfailed."
                          enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                          type: string
                        submit_time:
                          format: date-time
                          type: string
                        total_deposit:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        voting_end_time:
                          format: date-time
                          type: string
                        voting_start_time:
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      operationId: Proposal
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
                properties:
                  proposal:
                    description: Proposal defines the core field members of a governance
                      proposal.
                    properties:
                      content:
                        description: "`Any` contains an arbitrary serialized protocol\
                          \ buffer message along with a\nURL that describes the type\
                          \ of the serialized message.\n\nProtobuf library provides\
                          \ support to pack/unpack Any values in the form\nof utility\
                          \ functions or additional generated methods of the Any type.\n\
                          \nExample 1: Pack and unpack a message in C++.\n\n\n   \
                          \ Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                          \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n   \
                          \ }\n\nExample 2: Pack and unpack a message in Java.\n\n\
                          \n    Foo foo = ...;\n    Any any = Any.pack(foo);\n   \
                          \ ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                          \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                          \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                          \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                          \      ...\n\n Example 4: Pack and unpack a message in Go\n\
                          \n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                          \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                          \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                          \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                          \ as the type URL and the unpack\nmethods only use the fully\
                          \ qualified type name after the last '/'\nin the type URL,\
                          \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                          \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                          \ `Any` value uses the regular\nrepresentation of the deserialized,\
                          \ embedded message, with an\nadditional field `@type` which\
                          \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                          \    message Person {\n      string first_name = 1;\n  \
                          \    string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                          : \"type.googleapis.com/google.profile.Person\",\n     \
                          \ \"firstName\": <string>,\n      \"lastName\": <string>\n\
                          \    }\n\nIf the embedded message type is well-known and\
                          \ has a custom JSON\nrepresentation, that representation\
                          \ will be embedded adding a field\n`value` which holds the\
                          \ custom JSON in addition to the `@type`\nfield. Example\
                          \ (for message [google.protobuf.Duration][]):\n\n\n    {\n\
                          \      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                          ,\n      \"value\": \"1.212s\"\n    }"
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      deposit_end_time:
                        format: date-time
                        type: string
                      final_tally_result:
                        description: TallyResult defines a standard tally for a governance
                          proposal.
                        properties:
                          true:
                            type: string
                          abstain:
                            type: string
                          false:
                            type: string
                          no_with_veto:
                            type: string
                        type: object
                      is_expedited:
                        type: boolean
                      proposal_id:
                        format: uint64
                        type: string
                      status:
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        description: "ProposalStatus enumerates the valid statuses\
                          \ of a proposal.\n\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED\
                          \ defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
                          \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status\
                          \ during the deposit\nperiod.\n\n - PROPOSAL_STATUS_VOTING_PERIOD:\
                          \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status\
                          \ during the voting\nperiod.\n\n - PROPOSAL_STATUS_PASSED:\
                          \ PROPOSAL_STATUS_PASSED defines a proposal status of a\
                          \ proposal that has\npassed.\n\n - PROPOSAL_STATUS_REJECTED:\
                          \ PROPOSAL_STATUS_REJECTED defines a proposal status of\
                          \ a proposal that has\nbeen rejected.\n\n - PROPOSAL_STATUS_FAILED:\
                          \ PROPOSAL_STATUS_FAILED defines a proposal status of a\
                          \ proposal that has\nfailed."
                        enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                        type: string
                      submit_time:
                        format: date-time
                        type: string
                      total_deposit:
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      voting_end_time:
                        format: date-time
                        type: string
                      voting_start_time:
                        format: date-time
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      operationId: Deposits
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
                properties:
                  deposits:
                    items:
                      description: 'Deposit defines an amount deposited by an account
                        address to an active

                        proposal.'
                      properties:
                        amount:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        depositor:
                          type: string
                        proposal_id:
                          format: uint64
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Deposit
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: path
        name: depositor
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDepositResponse is the response type for the Query/Deposit
                  RPC method.
                properties:
                  deposit:
                    description: 'Deposit defines an amount deposited by an account
                      address to an active

                      proposal.'
                    properties:
                      amount:
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      depositor:
                        type: string
                      proposal_id:
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryTallyResultResponse is the response type for the
                  Query/Tally RPC method.
                properties:
                  tally:
                    description: TallyResult defines a standard tally for a governance
                      proposal.
                    properties:
                      true:
                        type: string
                      abstain:
                        type: string
                      false:
                        type: string
                      no_with_veto:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      operationId: Votes
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVotesResponse is the response type for the Query/Votes
                  RPC method.
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  votes:
                    description: votes defined the queried votes.
                    items:
                      description: 'Vote defines a vote on a governance proposal.

                        A Vote consists of a proposal ID, the voter, and the vote
                        option.'
                      properties:
                        option:
                          default: VOTE_OPTION_UNSPECIFIED
                          description: 'Deprecated: Prefer to use `options` instead.
                            This field is set in queries

                            if and only if `len(options) == 1` and that option has
                            weight 1. In all

                            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
                          enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                          type: string
                        options:
                          items:
                            description: 'WeightedVoteOption defines a unit of vote
                              for vote split.


                              Since: cosmos-sdk 0.43'
                            properties:
                              option:
                                default: VOTE_OPTION_UNSPECIFIED
                                description: "VoteOption enumerates the valid vote\
                                  \ options for a given governance proposal.\n\n\n\
                                  \ - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED\
                                  \ defines a no-op vote option.\n - VOTE_OPTION_YES:\
                                  \ VOTE_OPTION_YES defines a yes vote option.\n -\
                                  \ VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines\
                                  \ an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO\
                                  \ defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
                                  \ VOTE_OPTION_NO_WITH_VETO defines a no with veto\
                                  \ vote option."
                                enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                                type: string
                              weight:
                                type: string
                            type: object
                          title: 'Since: cosmos-sdk 0.43'
                          type: array
                        proposal_id:
                          format: uint64
                          type: string
                        voter:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Vote
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        in: path
        name: proposal_id
        required: true
        schema:
          format: uint64
          type: string
      - description: voter defines the oter address for the proposals.
        in: path
        name: voter
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryVoteResponse is the response type for the Query/Vote
                  RPC method.
                properties:
                  vote:
                    description: 'Vote defines a vote on a governance proposal.

                      A Vote consists of a proposal ID, the voter, and the vote option.'
                    properties:
                      option:
                        default: VOTE_OPTION_UNSPECIFIED
                        description: 'Deprecated: Prefer to use `options` instead.
                          This field is set in queries

                          if and only if `len(options) == 1` and that option has weight
                          1. In all

                          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
                        enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                        type: string
                      options:
                        items:
                          description: 'WeightedVoteOption defines a unit of vote
                            for vote split.


                            Since: cosmos-sdk 0.43'
                          properties:
                            option:
                              default: VOTE_OPTION_UNSPECIFIED
                              description: "VoteOption enumerates the valid vote options\
                                \ for a given governance proposal.\n\n\n - VOTE_OPTION_UNSPECIFIED:\
                                \ VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n\
                                \ - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes\
                                \ vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN\
                                \ defines an abstain vote option.\n - VOTE_OPTION_NO:\
                                \ VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
                                \ VOTE_OPTION_NO_WITH_VETO defines a no with veto\
                                \ vote option."
                              enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                              type: string
                            weight:
                              type: string
                          type: object
                        title: 'Since: cosmos-sdk 0.43'
                        type: array
                      proposal_id:
                        format: uint64
                        type: string
                      voter:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gov
      - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      operationId: AnnualProvisions
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryAnnualProvisionsResponse is the response type for
                  the

                  Query/AnnualProvisions RPC method.'
                properties:
                  annual_provisions:
                    description: annual_provisions is the current minting annual provisions
                      value.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - mint
      - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      operationId: Inflation
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryInflationResponse is the response type for the
                  Query/Inflation RPC

                  method.'
                properties:
                  inflation:
                    description: inflation is the current minting inflation value.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - mint
      - Query
  /cosmos/mint/v1beta1/params:
    get:
      operationId: CosmosMintParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      blocks_per_year:
                        format: uint64
                        title: expected blocks per year
                        type: string
                      goal_bonded:
                        title: goal of percent bonded atoms
                        type: string
                      inflation_max:
                        title: maximum inflation rate
                        type: string
                      inflation_min:
                        title: minimum inflation rate
                        type: string
                      inflation_rate_change:
                        title: maximum annual change in inflation rate
                        type: string
                      mint_denom:
                        title: type of coin to mint
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - mint
      - Query
  /cosmos/params/v1beta1/params:
    get:
      operationId: Params
      parameters:
      - description: subspace defines the module to query the parameter for.
        in: query
        name: subspace
        required: false
        schema:
          type: string
      - description: key defines the key of the parameter in the subspace.
        in: query
        name: key
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
                properties:
                  param:
                    description: param defines the queried parameter.
                    properties:
                      key:
                        type: string
                      subspace:
                        type: string
                      value:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - params
      - Query
  /cosmos/slashing/v1beta1/params:
    get:
      operationId: SlashingParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: Params represents the parameters used for by the
                      slashing module.
                    properties:
                      downtime_jail_duration:
                        type: string
                      min_signed_per_window:
                        format: byte
                        type: string
                      signed_blocks_window:
                        format: int64
                        type: string
                      slash_fraction_double_sign:
                        format: byte
                        type: string
                      slash_fraction_downtime:
                        format: byte
                        type: string
                    type: object
                title: QueryParamsResponse is the response type for the Query/Params
                  RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - slashing
      - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      operationId: SigningInfos
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  info:
                    items:
                      description: 'ValidatorSigningInfo defines a validator''s signing
                        info for monitoring their

                        liveness activity.'
                      properties:
                        address:
                          type: string
                        index_offset:
                          description: 'Index which is incremented each time the validator
                            was a bonded

                            in a block and may have signed a precommit or not. This
                            in conjunction with the

                            `SignedBlocksWindow` param determines the index in the
                            `MissedBlocksBitArray`.'
                          format: int64
                          type: string
                        jailed_until:
                          description: Timestamp until which the validator is jailed
                            due to liveness downtime.
                          format: date-time
                          type: string
                        missed_blocks_counter:
                          description: 'A counter kept to avoid unnecessary array
                            reads.

                            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
                          format: int64
                          type: string
                        start_height:
                          format: int64
                          title: Height at which validator was first a candidate OR
                            was unjailed
                          type: string
                        tombstoned:
                          description: 'Whether or not a validator has been tombstoned
                            (killed out of validator set). It is set

                            once the validator commits an equivocation or for any
                            other configured misbehiavor.'
                          type: boolean
                      type: object
                    title: info is the signing info of all validators
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                title: 'QuerySigningInfosResponse is the response type for the Query/SigningInfos
                  RPC

                  method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - slashing
      - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      operationId: SigningInfo
      parameters:
      - description: cons_address is the address to query signing info of
        in: path
        name: cons_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  val_signing_info:
                    description: 'ValidatorSigningInfo defines a validator''s signing
                      info for monitoring their

                      liveness activity.'
                    properties:
                      address:
                        type: string
                      index_offset:
                        description: 'Index which is incremented each time the validator
                          was a bonded

                          in a block and may have signed a precommit or not. This
                          in conjunction with the

                          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.'
                        format: int64
                        type: string
                      jailed_until:
                        description: Timestamp until which the validator is jailed
                          due to liveness downtime.
                        format: date-time
                        type: string
                      missed_blocks_counter:
                        description: 'A counter kept to avoid unnecessary array reads.

                          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
                        format: int64
                        type: string
                      start_height:
                        format: int64
                        title: Height at which validator was first a candidate OR
                          was unjailed
                        type: string
                      tombstoned:
                        description: 'Whether or not a validator has been tombstoned
                          (killed out of validator set). It is set

                          once the validator commits an equivocation or for any other
                          configured misbehiavor.'
                        type: boolean
                    title: val_signing_info is the signing info of requested val cons
                      address
                    type: object
                title: 'QuerySigningInfoResponse is the response type for the Query/SigningInfo
                  RPC

                  method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - slashing
      - Query
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      operationId: DelegatorDelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegatorDelegationsResponse is response type for
                  the

                  Query/DelegatorDelegations RPC method.'
                properties:
                  delegation_responses:
                    description: delegation_responses defines all the delegations'
                      info of a delegator.
                    items:
                      description: 'DelegationResponse is equivalent to Delegation
                        except that it contains a

                        balance in addition to shares which is more suitable for client
                        responses.'
                      properties:
                        balance:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegation:
                          description: 'Delegation represents the bond with tokens
                            held by an account. It is

                            owned by one delegator, and is associated with the voting
                            power of one

                            validator.'
                          properties:
                            delegator_address:
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                              type: string
                            shares:
                              description: shares define the delegation shares received.
                              type: string
                            validator_address:
                              description: validator_address is the bech32-encoded
                                address of the validator.
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      operationId: Redelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      - description: src_validator_addr defines the validator address to redelegate
          from.
        in: query
        name: src_validator_addr
        required: false
        schema:
          type: string
      - description: dst_validator_addr defines the validator address to redelegate
          to.
        in: query
        name: dst_validator_addr
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryRedelegationsResponse is response type for the
                  Query/Redelegations RPC

                  method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  redelegation_responses:
                    items:
                      description: 'RedelegationResponse is equivalent to a Redelegation
                        except that its entries

                        contain a balance in addition to shares which is more suitable
                        for client

                        responses.'
                      properties:
                        entries:
                          items:
                            description: 'RedelegationEntryResponse is equivalent
                              to a RedelegationEntry except that it

                              contains a balance in addition to shares which is more
                              suitable for client

                              responses.'
                            properties:
                              balance:
                                type: string
                              redelegation_entry:
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                                properties:
                                  completion_time:
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                    type: string
                                  creation_height:
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                    type: string
                                  initial_balance:
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                    type: string
                                  shares_dst:
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                    type: string
                                type: object
                            type: object
                          type: array
                        redelegation:
                          description: 'Redelegation contains the list of a particular
                            delegator''s redelegating bonds

                            from a particular source validator to a particular destination
                            validator.'
                          properties:
                            delegator_address:
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                              type: string
                            entries:
                              description: entries are the redelegation entries.
                              items:
                                description: RedelegationEntry defines a redelegation
                                  object with relevant metadata.
                                properties:
                                  completion_time:
                                    description: completion_time defines the unix
                                      time for redelegation completion.
                                    format: date-time
                                    type: string
                                  creation_height:
                                    description: creation_height  defines the height
                                      which the redelegation took place.
                                    format: int64
                                    type: string
                                  initial_balance:
                                    description: initial_balance defines the initial
                                      balance when redelegation started.
                                    type: string
                                  shares_dst:
                                    description: shares_dst is the amount of destination-validator
                                      shares created by redelegation.
                                    type: string
                                type: object
                              type: array
                            validator_dst_address:
                              description: validator_dst_address is the validator
                                redelegation destination operator address.
                              type: string
                            validator_src_address:
                              description: validator_src_address is the validator
                                redelegation source operator address.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      operationId: DelegatorUnbondingDelegations
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryUnbondingDelegatorDelegationsResponse is response
                  type for the

                  Query/UnbondingDelegatorDelegations RPC method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  unbonding_responses:
                    items:
                      description: 'UnbondingDelegation stores all of a single delegator''s
                        unbonding bonds

                        for a single validator in an time-ordered list.'
                      properties:
                        delegator_address:
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                          type: string
                        entries:
                          description: entries are the unbonding delegation entries.
                          items:
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                            properties:
                              balance:
                                description: balance defines the tokens to receive
                                  at completion.
                                type: string
                              completion_time:
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                                type: string
                            type: object
                          type: array
                        validator_address:
                          description: validator_address is the bech32-encoded address
                            of the validator.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      operationId: StakingDelegatorValidators
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegatorValidatorsResponse is response type for
                  the

                  Query/DelegatorValidators RPC method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  validators:
                    description: validators defines the the validators' info of a
                      delegator.
                    items:
                      description: 'Validator defines a validator, together with the
                        total amount of the

                        Validator''s bond shares and their exchange rate to coins.
                        Slashing results in

                        a decrease in the exchange rate, allowing correct calculation
                        of future

                        undelegations without iterating over delegators. When coins
                        are delegated to

                        this validator, the validator is credited with a delegation
                        whose number of

                        bond shares is based on the amount of coins delegated divided
                        by the current

                        exchange rate. Voting power can be calculated as total bonded
                        shares

                        multiplied by exchange rate.'
                      properties:
                        commission:
                          description: commission defines the commission parameters.
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                              properties:
                                max_change_rate:
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                                  type: string
                                max_rate:
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                  type: string
                                rate:
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                  type: string
                              type: object
                            update_time:
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                              type: string
                          type: object
                        consensus_pubkey:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        delegator_shares:
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                          type: string
                        description:
                          description: description defines the description terms for
                            the validator.
                          properties:
                            details:
                              description: details define other optional details.
                              type: string
                            identity:
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                              type: string
                            moniker:
                              description: moniker defines a human-readable name for
                                the validator.
                              type: string
                            security_contact:
                              description: security_contact defines an optional email
                                for security contact.
                              type: string
                            website:
                              description: website defines an optional website link.
                              type: string
                          type: object
                        jailed:
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                          type: boolean
                        min_self_delegation:
                          description: min_self_delegation is the validator's self
                            declared minimum self delegation.
                          type: string
                        operator_address:
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                          type: string
                        status:
                          default: BOND_STATUS_UNSPECIFIED
                          description: status is the validator status (bonded/unbonding/unbonded).
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                          type: string
                        tokens:
                          description: tokens define the delegated tokens (incl. self-delegation).
                          type: string
                        unbonding_height:
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                          type: string
                        unbonding_time:
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      operationId: DelegatorValidator
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegatorValidatorResponse response type for the

                  Query/DelegatorValidator RPC method.'
                properties:
                  validator:
                    description: 'Validator defines a validator, together with the
                      total amount of the

                      Validator''s bond shares and their exchange rate to coins. Slashing
                      results in

                      a decrease in the exchange rate, allowing correct calculation
                      of future

                      undelegations without iterating over delegators. When coins
                      are delegated to

                      this validator, the validator is credited with a delegation
                      whose number of

                      bond shares is based on the amount of coins delegated divided
                      by the current

                      exchange rate. Voting power can be calculated as total bonded
                      shares

                      multiplied by exchange rate.'
                    properties:
                      commission:
                        description: commission defines the commission parameters.
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                            properties:
                              max_change_rate:
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                                type: string
                              max_rate:
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                                type: string
                              rate:
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                                type: string
                            type: object
                          update_time:
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                            type: string
                        type: object
                      consensus_pubkey:
                        description: "`Any` contains an arbitrary serialized protocol\
                          \ buffer message along with a\nURL that describes the type\
                          \ of the serialized message.\n\nProtobuf library provides\
                          \ support to pack/unpack Any values in the form\nof utility\
                          \ functions or additional generated methods of the Any type.\n\
                          \nExample 1: Pack and unpack a message in C++.\n\n\n   \
                          \ Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                          \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n   \
                          \ }\n\nExample 2: Pack and unpack a message in Java.\n\n\
                          \n    Foo foo = ...;\n    Any any = Any.pack(foo);\n   \
                          \ ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                          \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                          \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                          \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                          \      ...\n\n Example 4: Pack and unpack a message in Go\n\
                          \n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                          \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                          \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                          \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                          \ as the type URL and the unpack\nmethods only use the fully\
                          \ qualified type name after the last '/'\nin the type URL,\
                          \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                          \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                          \ `Any` value uses the regular\nrepresentation of the deserialized,\
                          \ embedded message, with an\nadditional field `@type` which\
                          \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                          \    message Person {\n      string first_name = 1;\n  \
                          \    string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                          : \"type.googleapis.com/google.profile.Person\",\n     \
                          \ \"firstName\": <string>,\n      \"lastName\": <string>\n\
                          \    }\n\nIf the embedded message type is well-known and\
                          \ has a custom JSON\nrepresentation, that representation\
                          \ will be embedded adding a field\n`value` which holds the\
                          \ custom JSON in addition to the `@type`\nfield. Example\
                          \ (for message [google.protobuf.Duration][]):\n\n\n    {\n\
                          \      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                          ,\n      \"value\": \"1.212s\"\n    }"
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      delegator_shares:
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                        type: string
                      description:
                        description: description defines the description terms for
                          the validator.
                        properties:
                          details:
                            description: details define other optional details.
                            type: string
                          identity:
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                            type: string
                          moniker:
                            description: moniker defines a human-readable name for
                              the validator.
                            type: string
                          security_contact:
                            description: security_contact defines an optional email
                              for security contact.
                            type: string
                          website:
                            description: website defines an optional website link.
                            type: string
                        type: object
                      jailed:
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                        type: boolean
                      min_self_delegation:
                        description: min_self_delegation is the validator's self declared
                          minimum self delegation.
                        type: string
                      operator_address:
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                        type: string
                      status:
                        default: BOND_STATUS_UNSPECIFIED
                        description: status is the validator status (bonded/unbonding/unbonded).
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                        type: string
                      tokens:
                        description: tokens define the delegated tokens (incl. self-delegation).
                        type: string
                      unbonding_height:
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                        type: string
                      unbonding_time:
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      operationId: HistoricalInfo
      parameters:
      - description: height defines at which height to query the historical info.
        in: path
        name: height
        required: true
        schema:
          format: int64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryHistoricalInfoResponse is response type for the
                  Query/HistoricalInfo RPC

                  method.'
                properties:
                  hist:
                    description: hist defines the historical info at the given height.
                    properties:
                      header:
                        description: Header defines the structure of a Tendermint
                          block header.
                        properties:
                          app_hash:
                            format: byte
                            type: string
                          chain_id:
                            type: string
                          consensus_hash:
                            format: byte
                            type: string
                          data_hash:
                            format: byte
                            type: string
                          evidence_hash:
                            format: byte
                            title: consensus info
                            type: string
                          height:
                            format: int64
                            type: string
                          last_block_id:
                            properties:
                              hash:
                                format: byte
                                type: string
                              part_set_header:
                                properties:
                                  hash:
                                    format: byte
                                    type: string
                                  total:
                                    format: int64
                                    type: integer
                                title: PartsetHeader
                                type: object
                            title: prev block info
                            type: object
                          last_commit_hash:
                            format: byte
                            title: hashes of block data
                            type: string
                          last_results_hash:
                            format: byte
                            type: string
                          next_validators_hash:
                            format: byte
                            type: string
                          proposer_address:
                            format: byte
                            type: string
                          time:
                            format: date-time
                            type: string
                          validators_hash:
                            format: byte
                            title: hashes from the app output from the prev block
                            type: string
                          version:
                            description: 'Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules
                              of the application''s

                              state transition machine.'
                            properties:
                              app:
                                format: uint64
                                type: string
                              block:
                                format: uint64
                                type: string
                            title: basic block info
                            type: object
                        type: object
                      valset:
                        items:
                          description: 'Validator defines a validator, together with
                            the total amount of the

                            Validator''s bond shares and their exchange rate to coins.
                            Slashing results in

                            a decrease in the exchange rate, allowing correct calculation
                            of future

                            undelegations without iterating over delegators. When
                            coins are delegated to

                            this validator, the validator is credited with a delegation
                            whose number of

                            bond shares is based on the amount of coins delegated
                            divided by the current

                            exchange rate. Voting power can be calculated as total
                            bonded shares

                            multiplied by exchange rate.'
                          properties:
                            commission:
                              description: commission defines the commission parameters.
                              properties:
                                commission_rates:
                                  description: commission_rates defines the initial
                                    commission rates to be used for creating a validator.
                                  properties:
                                    max_change_rate:
                                      description: max_change_rate defines the maximum
                                        daily increase of the validator commission,
                                        as a fraction.
                                      type: string
                                    max_rate:
                                      description: max_rate defines the maximum commission
                                        rate which validator can ever charge, as a
                                        fraction.
                                      type: string
                                    rate:
                                      description: rate is the commission rate charged
                                        to delegators, as a fraction.
                                      type: string
                                  type: object
                                update_time:
                                  description: update_time is the last time the commission
                                    rate was changed.
                                  format: date-time
                                  type: string
                              type: object
                            consensus_pubkey:
                              description: "`Any` contains an arbitrary serialized\
                                \ protocol buffer message along with a\nURL that describes\
                                \ the type of the serialized message.\n\nProtobuf\
                                \ library provides support to pack/unpack Any values\
                                \ in the form\nof utility functions or additional\
                                \ generated methods of the Any type.\n\nExample 1:\
                                \ Pack and unpack a message in C++.\n\n\n    Foo foo\
                                \ = ...;\n    Any any;\n    any.PackFrom(foo);\n \
                                \   ...\n    if (any.UnpackTo(&foo)) {\n      ...\n\
                                \    }\n\nExample 2: Pack and unpack a message in\
                                \ Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                                \    ...\n    if (any.is(Foo.class)) {\n      foo\
                                \ = any.unpack(Foo.class);\n    }\n\n Example 3: Pack\
                                \ and unpack a message in Python.\n\n    foo = Foo(...)\n\
                                \    any = Any()\n    any.Pack(foo)\n    ...\n   \
                                \ if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                                \      ...\n\n Example 4: Pack and unpack a message\
                                \ in Go\n\n     foo := &pb.Foo{...}\n     any, err\
                                \ := ptypes.MarshalAny(foo)\n     ...\n     foo :=\
                                \ &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                                \ foo); err != nil {\n       ...\n     }\n\nThe pack\
                                \ methods provided by protobuf library will by default\
                                \ use\n'type.googleapis.com/full.type.name' as the\
                                \ type URL and the unpack\nmethods only use the fully\
                                \ qualified type name after the last '/'\nin the type\
                                \ URL, for example \"foo.bar.com/x/y.z\" will yield\
                                \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                                \ of an `Any` value uses the regular\nrepresentation\
                                \ of the deserialized, embedded message, with an\n\
                                additional field `@type` which contains the type URL.\
                                \ Example:\n\n\n    package google.profile;\n    message\
                                \ Person {\n      string first_name = 1;\n      string\
                                \ last_name = 2;\n    }\n\n    {\n      \"@type\"\
                                : \"type.googleapis.com/google.profile.Person\",\n\
                                \      \"firstName\": <string>,\n      \"lastName\"\
                                : <string>\n    }\n\nIf the embedded message type\
                                \ is well-known and has a custom JSON\nrepresentation,\
                                \ that representation will be embedded adding a field\n\
                                `value` which holds the custom JSON in addition to\
                                \ the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                                \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                                ,\n      \"value\": \"1.212s\"\n    }"
                              properties:
                                type_url:
                                  description: "A URL/resource name that uniquely\
                                    \ identifies the type of the serialized\nprotocol\
                                    \ buffer message. This string must contain at\
                                    \ least\none \"/\" character. The last segment\
                                    \ of the URL's path must represent\nthe fully\
                                    \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                    \ The name should be in a canonical form\n(e.g.,\
                                    \ leading \".\" is not accepted).\n\nIn practice,\
                                    \ teams usually precompile into the binary all\
                                    \ types that they\nexpect it to use in the context\
                                    \ of Any. However, for URLs which use the\nscheme\
                                    \ `http`, `https`, or no scheme, one can optionally\
                                    \ set up a type\nserver that maps type URLs to\
                                    \ message definitions as follows:\n\n* If no scheme\
                                    \ is provided, `https` is assumed.\n* An HTTP\
                                    \ GET on the URL must yield a [google.protobuf.Type][]\n\
                                    \n  value in binary format, or produce an error.\n\
                                    * Applications are allowed to cache lookup results\
                                    \ based on the\n\n  URL, or have them precompiled\
                                    \ into a binary to avoid any\n  lookup. Therefore,\
                                    \ binary compatibility needs to be preserved\n\
                                    \  on changes to types. (Use versioned type names\
                                    \ to manage\n  breaking changes.)\n\nNote: this\
                                    \ functionality is not currently available in\
                                    \ the official\nprotobuf release, and it is not\
                                    \ used for type URLs beginning with\ntype.googleapis.com.\n\
                                    \nSchemes other than `http`, `https` (or the empty\
                                    \ scheme) might be\nused with implementation specific\
                                    \ semantics."
                                  type: string
                                value:
                                  description: Must be a valid serialized protocol
                                    buffer of the above specified type.
                                  format: byte
                                  type: string
                              type: object
                            delegator_shares:
                              description: delegator_shares defines total shares issued
                                to a validator's delegators.
                              type: string
                            description:
                              description: description defines the description terms
                                for the validator.
                              properties:
                                details:
                                  description: details define other optional details.
                                  type: string
                                identity:
                                  description: identity defines an optional identity
                                    signature (ex. UPort or Keybase).
                                  type: string
                                moniker:
                                  description: moniker defines a human-readable name
                                    for the validator.
                                  type: string
                                security_contact:
                                  description: security_contact defines an optional
                                    email for security contact.
                                  type: string
                                website:
                                  description: website defines an optional website
                                    link.
                                  type: string
                              type: object
                            jailed:
                              description: jailed defined whether the validator has
                                been jailed from bonded status or not.
                              type: boolean
                            min_self_delegation:
                              description: min_self_delegation is the validator's
                                self declared minimum self delegation.
                              type: string
                            operator_address:
                              description: operator_address defines the address of
                                the validator's operator; bech encoded in JSON.
                              type: string
                            status:
                              default: BOND_STATUS_UNSPECIFIED
                              description: status is the validator status (bonded/unbonding/unbonded).
                              enum:
                              - BOND_STATUS_UNSPECIFIED
                              - BOND_STATUS_UNBONDED
                              - BOND_STATUS_UNBONDING
                              - BOND_STATUS_BONDED
                              type: string
                            tokens:
                              description: tokens define the delegated tokens (incl.
                                self-delegation).
                              type: string
                            unbonding_height:
                              description: unbonding_height defines, if unbonding,
                                the height at which this validator has begun unbonding.
                              format: int64
                              type: string
                            unbonding_time:
                              description: unbonding_time defines, if unbonding, the
                                min time for the validator to complete unbonding.
                              format: date-time
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/params:
    get:
      operationId: StakingParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    properties:
                      bond_denom:
                        description: bond_denom defines the bondable coin denomination.
                        type: string
                      historical_entries:
                        description: historical_entries is the number of historical
                          entries to persist.
                        format: int64
                        type: integer
                      max_entries:
                        description: max_entries is the max entries for either unbonding
                          delegation or redelegation (per pair/trio).
                        format: int64
                        type: integer
                      max_validators:
                        description: max_validators is the maximum number of validators.
                        format: int64
                        type: integer
                      min_commission_rate:
                        title: min_commission_rate is the chain-wide minimum commission
                          rate that a validator can charge their delegators
                        type: string
                      min_self_delegation:
                        title: min_self_delegation is the chain-wide minimum amount
                          that a validator has to self delegate
                        type: string
                      unbonding_time:
                        description: unbonding_time is the time duration of unbonding.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/pool:
    get:
      operationId: StakingPool
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryPoolResponse is response type for the Query/Pool
                  RPC method.
                properties:
                  pool:
                    description: pool defines the pool info.
                    properties:
                      bonded_tokens:
                        type: string
                      not_bonded_tokens:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators:
    get:
      operationId: Validators
      parameters:
      - description: status enables to query for validators matching a given status.
        in: query
        name: status
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  validators:
                    description: validators contains all the queried validators.
                    items:
                      description: 'Validator defines a validator, together with the
                        total amount of the

                        Validator''s bond shares and their exchange rate to coins.
                        Slashing results in

                        a decrease in the exchange rate, allowing correct calculation
                        of future

                        undelegations without iterating over delegators. When coins
                        are delegated to

                        this validator, the validator is credited with a delegation
                        whose number of

                        bond shares is based on the amount of coins delegated divided
                        by the current

                        exchange rate. Voting power can be calculated as total bonded
                        shares

                        multiplied by exchange rate.'
                      properties:
                        commission:
                          description: commission defines the commission parameters.
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission
                                rates to be used for creating a validator.
                              properties:
                                max_change_rate:
                                  description: max_change_rate defines the maximum
                                    daily increase of the validator commission, as
                                    a fraction.
                                  type: string
                                max_rate:
                                  description: max_rate defines the maximum commission
                                    rate which validator can ever charge, as a fraction.
                                  type: string
                                rate:
                                  description: rate is the commission rate charged
                                    to delegators, as a fraction.
                                  type: string
                              type: object
                            update_time:
                              description: update_time is the last time the commission
                                rate was changed.
                              format: date-time
                              type: string
                          type: object
                        consensus_pubkey:
                          description: "`Any` contains an arbitrary serialized protocol\
                            \ buffer message along with a\nURL that describes the\
                            \ type of the serialized message.\n\nProtobuf library\
                            \ provides support to pack/unpack Any values in the form\n\
                            of utility functions or additional generated methods of\
                            \ the Any type.\n\nExample 1: Pack and unpack a message\
                            \ in C++.\n\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                            \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n \
                            \   }\n\nExample 2: Pack and unpack a message in Java.\n\
                            \n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                            \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                            \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                            \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                            \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                            \      ...\n\n Example 4: Pack and unpack a message in\
                            \ Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                            \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                            \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                            \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                            \ as the type URL and the unpack\nmethods only use the\
                            \ fully qualified type name after the last '/'\nin the\
                            \ type URL, for example \"foo.bar.com/x/y.z\" will yield\
                            \ type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation\
                            \ of an `Any` value uses the regular\nrepresentation of\
                            \ the deserialized, embedded message, with an\nadditional\
                            \ field `@type` which contains the type URL. Example:\n\
                            \n\n    package google.profile;\n    message Person {\n\
                            \      string first_name = 1;\n      string last_name\
                            \ = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                            ,\n      \"firstName\": <string>,\n      \"lastName\"\
                            : <string>\n    }\n\nIf the embedded message type is well-known\
                            \ and has a custom JSON\nrepresentation, that representation\
                            \ will be embedded adding a field\n`value` which holds\
                            \ the custom JSON in addition to the `@type`\nfield. Example\
                            \ (for message [google.protobuf.Duration][]):\n\n\n  \
                            \  {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                            ,\n      \"value\": \"1.212s\"\n    }"
                          properties:
                            type_url:
                              description: "A URL/resource name that uniquely identifies\
                                \ the type of the serialized\nprotocol buffer message.\
                                \ This string must contain at least\none \"/\" character.\
                                \ The last segment of the URL's path must represent\n\
                                the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                                \ The name should be in a canonical form\n(e.g., leading\
                                \ \".\" is not accepted).\n\nIn practice, teams usually\
                                \ precompile into the binary all types that they\n\
                                expect it to use in the context of Any. However, for\
                                \ URLs which use the\nscheme `http`, `https`, or no\
                                \ scheme, one can optionally set up a type\nserver\
                                \ that maps type URLs to message definitions as follows:\n\
                                \n* If no scheme is provided, `https` is assumed.\n\
                                * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                                \n  value in binary format, or produce an error.\n\
                                * Applications are allowed to cache lookup results\
                                \ based on the\n\n  URL, or have them precompiled\
                                \ into a binary to avoid any\n  lookup. Therefore,\
                                \ binary compatibility needs to be preserved\n  on\
                                \ changes to types. (Use versioned type names to manage\n\
                                \  breaking changes.)\n\nNote: this functionality\
                                \ is not currently available in the official\nprotobuf\
                                \ release, and it is not used for type URLs beginning\
                                \ with\ntype.googleapis.com.\n\nSchemes other than\
                                \ `http`, `https` (or the empty scheme) might be\n\
                                used with implementation specific semantics."
                              type: string
                            value:
                              description: Must be a valid serialized protocol buffer
                                of the above specified type.
                              format: byte
                              type: string
                          type: object
                        delegator_shares:
                          description: delegator_shares defines total shares issued
                            to a validator's delegators.
                          type: string
                        description:
                          description: description defines the description terms for
                            the validator.
                          properties:
                            details:
                              description: details define other optional details.
                              type: string
                            identity:
                              description: identity defines an optional identity signature
                                (ex. UPort or Keybase).
                              type: string
                            moniker:
                              description: moniker defines a human-readable name for
                                the validator.
                              type: string
                            security_contact:
                              description: security_contact defines an optional email
                                for security contact.
                              type: string
                            website:
                              description: website defines an optional website link.
                              type: string
                          type: object
                        jailed:
                          description: jailed defined whether the validator has been
                            jailed from bonded status or not.
                          type: boolean
                        min_self_delegation:
                          description: min_self_delegation is the validator's self
                            declared minimum self delegation.
                          type: string
                        operator_address:
                          description: operator_address defines the address of the
                            validator's operator; bech encoded in JSON.
                          type: string
                        status:
                          default: BOND_STATUS_UNSPECIFIED
                          description: status is the validator status (bonded/unbonding/unbonded).
                          enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                          type: string
                        tokens:
                          description: tokens define the delegated tokens (incl. self-delegation).
                          type: string
                        unbonding_height:
                          description: unbonding_height defines, if unbonding, the
                            height at which this validator has begun unbonding.
                          format: int64
                          type: string
                        unbonding_time:
                          description: unbonding_time defines, if unbonding, the min
                            time for the validator to complete unbonding.
                          format: date-time
                          type: string
                      type: object
                    type: array
                title: QueryValidatorsResponse is response type for the Query/Validators
                  RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      operationId: Validator
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  validator:
                    description: 'Validator defines a validator, together with the
                      total amount of the

                      Validator''s bond shares and their exchange rate to coins. Slashing
                      results in

                      a decrease in the exchange rate, allowing correct calculation
                      of future

                      undelegations without iterating over delegators. When coins
                      are delegated to

                      this validator, the validator is credited with a delegation
                      whose number of

                      bond shares is based on the amount of coins delegated divided
                      by the current

                      exchange rate. Voting power can be calculated as total bonded
                      shares

                      multiplied by exchange rate.'
                    properties:
                      commission:
                        description: commission defines the commission parameters.
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission
                              rates to be used for creating a validator.
                            properties:
                              max_change_rate:
                                description: max_change_rate defines the maximum daily
                                  increase of the validator commission, as a fraction.
                                type: string
                              max_rate:
                                description: max_rate defines the maximum commission
                                  rate which validator can ever charge, as a fraction.
                                type: string
                              rate:
                                description: rate is the commission rate charged to
                                  delegators, as a fraction.
                                type: string
                            type: object
                          update_time:
                            description: update_time is the last time the commission
                              rate was changed.
                            format: date-time
                            type: string
                        type: object
                      consensus_pubkey:
                        description: "`Any` contains an arbitrary serialized protocol\
                          \ buffer message along with a\nURL that describes the type\
                          \ of the serialized message.\n\nProtobuf library provides\
                          \ support to pack/unpack Any values in the form\nof utility\
                          \ functions or additional generated methods of the Any type.\n\
                          \nExample 1: Pack and unpack a message in C++.\n\n\n   \
                          \ Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                          \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n   \
                          \ }\n\nExample 2: Pack and unpack a message in Java.\n\n\
                          \n    Foo foo = ...;\n    Any any = Any.pack(foo);\n   \
                          \ ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                          \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                          \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                          \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                          \      ...\n\n Example 4: Pack and unpack a message in Go\n\
                          \n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                          \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                          \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                          \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                          \ as the type URL and the unpack\nmethods only use the fully\
                          \ qualified type name after the last '/'\nin the type URL,\
                          \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                          \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                          \ `Any` value uses the regular\nrepresentation of the deserialized,\
                          \ embedded message, with an\nadditional field `@type` which\
                          \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                          \    message Person {\n      string first_name = 1;\n  \
                          \    string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                          : \"type.googleapis.com/google.profile.Person\",\n     \
                          \ \"firstName\": <string>,\n      \"lastName\": <string>\n\
                          \    }\n\nIf the embedded message type is well-known and\
                          \ has a custom JSON\nrepresentation, that representation\
                          \ will be embedded adding a field\n`value` which holds the\
                          \ custom JSON in addition to the `@type`\nfield. Example\
                          \ (for message [google.protobuf.Duration][]):\n\n\n    {\n\
                          \      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                          ,\n      \"value\": \"1.212s\"\n    }"
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      delegator_shares:
                        description: delegator_shares defines total shares issued
                          to a validator's delegators.
                        type: string
                      description:
                        description: description defines the description terms for
                          the validator.
                        properties:
                          details:
                            description: details define other optional details.
                            type: string
                          identity:
                            description: identity defines an optional identity signature
                              (ex. UPort or Keybase).
                            type: string
                          moniker:
                            description: moniker defines a human-readable name for
                              the validator.
                            type: string
                          security_contact:
                            description: security_contact defines an optional email
                              for security contact.
                            type: string
                          website:
                            description: website defines an optional website link.
                            type: string
                        type: object
                      jailed:
                        description: jailed defined whether the validator has been
                          jailed from bonded status or not.
                        type: boolean
                      min_self_delegation:
                        description: min_self_delegation is the validator's self declared
                          minimum self delegation.
                        type: string
                      operator_address:
                        description: operator_address defines the address of the validator's
                          operator; bech encoded in JSON.
                        type: string
                      status:
                        default: BOND_STATUS_UNSPECIFIED
                        description: status is the validator status (bonded/unbonding/unbonded).
                        enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                        type: string
                      tokens:
                        description: tokens define the delegated tokens (incl. self-delegation).
                        type: string
                      unbonding_height:
                        description: unbonding_height defines, if unbonding, the height
                          at which this validator has begun unbonding.
                        format: int64
                        type: string
                      unbonding_time:
                        description: unbonding_time defines, if unbonding, the min
                          time for the validator to complete unbonding.
                        format: date-time
                        type: string
                    type: object
                title: QueryValidatorResponse is response type for the Query/Validator
                  RPC method
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      operationId: ValidatorDelegations
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  delegation_responses:
                    items:
                      description: 'DelegationResponse is equivalent to Delegation
                        except that it contains a

                        balance in addition to shares which is more suitable for client
                        responses.'
                      properties:
                        balance:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegation:
                          description: 'Delegation represents the bond with tokens
                            held by an account. It is

                            owned by one delegator, and is associated with the voting
                            power of one

                            validator.'
                          properties:
                            delegator_address:
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                              type: string
                            shares:
                              description: shares define the delegation shares received.
                              type: string
                            validator_address:
                              description: validator_address is the bech32-encoded
                                address of the validator.
                              type: string
                          type: object
                      type: object
                    type: array
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                title: 'QueryValidatorDelegationsResponse is response type for the

                  Query/ValidatorDelegations RPC method'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      operationId: Delegation
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryDelegationResponse is response type for the Query/Delegation
                  RPC method.
                properties:
                  delegation_response:
                    description: 'DelegationResponse is equivalent to Delegation except
                      that it contains a

                      balance in addition to shares which is more suitable for client
                      responses.'
                    properties:
                      balance:
                        description: 'Coin defines a token with a denomination and
                          an amount.


                          NOTE: The amount field is an Int which implements the custom
                          method

                          signatures required by gogoproto.'
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      delegation:
                        description: 'Delegation represents the bond with tokens held
                          by an account. It is

                          owned by one delegator, and is associated with the voting
                          power of one

                          validator.'
                        properties:
                          delegator_address:
                            description: delegator_address is the bech32-encoded address
                              of the delegator.
                            type: string
                          shares:
                            description: shares define the delegation shares received.
                            type: string
                          validator_address:
                            description: validator_address is the bech32-encoded address
                              of the validator.
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      operationId: UnbondingDelegation
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDelegationResponse is response type for the Query/UnbondingDelegation

                  RPC method.'
                properties:
                  unbond:
                    description: 'UnbondingDelegation stores all of a single delegator''s
                      unbonding bonds

                      for a single validator in an time-ordered list.'
                    properties:
                      delegator_address:
                        description: delegator_address is the bech32-encoded address
                          of the delegator.
                        type: string
                      entries:
                        description: entries are the unbonding delegation entries.
                        items:
                          description: UnbondingDelegationEntry defines an unbonding
                            object with relevant metadata.
                          properties:
                            balance:
                              description: balance defines the tokens to receive at
                                completion.
                              type: string
                            completion_time:
                              description: completion_time is the unix time for unbonding
                                completion.
                              format: date-time
                              type: string
                            creation_height:
                              description: creation_height is the height which the
                                unbonding took place.
                              format: int64
                              type: string
                            initial_balance:
                              description: initial_balance defines the tokens initially
                                scheduled to receive at completion.
                              type: string
                          type: object
                        type: array
                      validator_address:
                        description: validator_address is the bech32-encoded address
                          of the validator.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      operationId: ValidatorUnbondingDelegations
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryValidatorUnbondingDelegationsResponse is response
                  type for the

                  Query/ValidatorUnbondingDelegations RPC method.'
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  unbonding_responses:
                    items:
                      description: 'UnbondingDelegation stores all of a single delegator''s
                        unbonding bonds

                        for a single validator in an time-ordered list.'
                      properties:
                        delegator_address:
                          description: delegator_address is the bech32-encoded address
                            of the delegator.
                          type: string
                        entries:
                          description: entries are the unbonding delegation entries.
                          items:
                            description: UnbondingDelegationEntry defines an unbonding
                              object with relevant metadata.
                            properties:
                              balance:
                                description: balance defines the tokens to receive
                                  at completion.
                                type: string
                              completion_time:
                                description: completion_time is the unix time for
                                  unbonding completion.
                                format: date-time
                                type: string
                              creation_height:
                                description: creation_height is the height which the
                                  unbonding took place.
                                format: int64
                                type: string
                              initial_balance:
                                description: initial_balance defines the tokens initially
                                  scheduled to receive at completion.
                                type: string
                            type: object
                          type: array
                        validator_address:
                          description: validator_address is the bech32-encoded address
                            of the validator.
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - staking
      - Query
  /cosmos/tx/v1beta1/simulate:
    post:
      operationId: Simulate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cosmos.tx.v1beta1.SimulateRequest'
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'SimulateResponse is the response type for the

                  Service.SimulateRPC method.'
                properties:
                  gas_info:
                    description: gas_info is the information about gas used in the
                      simulation.
                    properties:
                      gas_used:
                        description: GasUsed is the amount of gas actually consumed.
                        format: uint64
                        type: string
                      gas_wanted:
                        description: GasWanted is the maximum units of work we allow
                          this tx to perform.
                        format: uint64
                        type: string
                    type: object
                  result:
                    description: result is the result of the simulation.
                    properties:
                      data:
                        description: 'Data is any data returned from message or handler
                          execution. It MUST be

                          length prefixed in order to separate data from multiple
                          message executions.'
                        format: byte
                        type: string
                      events:
                        description: 'Events contains a slice of Event objects that
                          were emitted during message

                          or handler execution.'
                        items:
                          description: 'Event allows application developers to attach
                            additional information to

                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx
                            and ResponseDeliverTx.

                            Later, transactions may be queried using these events.'
                          properties:
                            attributes:
                              items:
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                                properties:
                                  index:
                                    type: boolean
                                  key:
                                    format: byte
                                    type: string
                                  value:
                                    format: byte
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                        type: array
                      log:
                        description: Log contains the log information from message
                          or handler execution.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: Simulate simulates executing a transaction for estimating gas usage.
  /cosmos/tx/v1beta1/txs:
    get:
      operationId: GetTxsEvent
      parameters:
      - description: events is the list of transaction event type.
        explode: true
        in: query
        name: events
        required: false
        schema:
          items:
            type: string
          type: array
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      - description: " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
          \ sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC:\
          \ ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC\
          \ defines descending order"
        in: query
        name: order_by
        required: false
        schema:
          default: ORDER_BY_UNSPECIFIED
          enum:
          - ORDER_BY_UNSPECIFIED
          - ORDER_BY_ASC
          - ORDER_BY_DESC
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxsEventResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: GetTxsEvent fetches txs by event.
      tags:
      - tx
      - Query
    post:
      operationId: BroadcastTx
      requestBody:
        content:
          application/json:
            schema:
              description: 'BroadcastTxRequest is the request type for the Service.BroadcastTxRequest

                RPC method.'
              properties:
                mode:
                  default: BROADCAST_MODE_UNSPECIFIED
                  description: "BroadcastMode specifies the broadcast mode for the\
                    \ TxService.Broadcast RPC method.\n\n\n - BROADCAST_MODE_UNSPECIFIED:\
                    \ zero-value for mode ordering\n - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK\
                    \ defines a tx broadcasting mode where the client waits for\n\
                    the tx to be committed in a block.\n\n - BROADCAST_MODE_SYNC:\
                    \ BROADCAST_MODE_SYNC defines a tx broadcasting mode where the\
                    \ client waits for\na CheckTx execution response only.\n\n - BROADCAST_MODE_ASYNC:\
                    \ BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the\
                    \ client returns\nimmediately."
                  enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
                  type: string
                tx_bytes:
                  description: tx_bytes is the raw transaction.
                  format: byte
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'BroadcastTxResponse is the response type for the

                  Service.BroadcastTx method.'
                properties:
                  tx_response:
                    description: 'TxResponse defines a structure containing relevant
                      tx data and metadata. The

                      tags are stringified and the log is JSON decoded.'
                    properties:
                      code:
                        description: Response code.
                        format: int64
                        type: integer
                      codespace:
                        title: Namespace for the Code
                        type: string
                      data:
                        description: Result bytes, if any.
                        type: string
                      events:
                        description: 'Events defines all the events emitted by processing
                          a transaction. Note,

                          these events include those emitted by processing all the
                          messages and those

                          emitted from the ante handler. Whereas Logs contains the
                          events, with

                          additional metadata, emitted only by processing the messages.


                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
                        items:
                          description: 'Event allows application developers to attach
                            additional information to

                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx
                            and ResponseDeliverTx.

                            Later, transactions may be queried using these events.'
                          properties:
                            attributes:
                              items:
                                description: EventAttribute is a single key-value
                                  pair, associated with an event.
                                properties:
                                  index:
                                    type: boolean
                                  key:
                                    format: byte
                                    type: string
                                  value:
                                    format: byte
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                        type: array
                      gas_used:
                        description: Amount of gas consumed by transaction.
                        format: int64
                        type: string
                      gas_wanted:
                        description: Amount of gas requested for transaction.
                        format: int64
                        type: string
                      height:
                        format: int64
                        title: The block height
                        type: string
                      info:
                        description: Additional information. May be non-deterministic.
                        type: string
                      logs:
                        description: The output of the application's logger (typed).
                          May be non-deterministic.
                        items:
                          description: ABCIMessageLog defines a structure containing
                            an indexed tx ABCI message log.
                          properties:
                            events:
                              description: 'Events contains a slice of Event objects
                                that were emitted during some

                                execution.'
                              items:
                                description: 'StringEvent defines en Event object
                                  wrapper where all the attributes

                                  contain key/value pairs that are strings instead
                                  of raw bytes.'
                                properties:
                                  attributes:
                                    items:
                                      description: 'Attribute defines an attribute
                                        wrapper where the key and value are

                                        strings instead of raw bytes.'
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  type:
                                    type: string
                                type: object
                              type: array
                            log:
                              type: string
                            msg_index:
                              format: int64
                              type: integer
                          type: object
                        type: array
                      raw_log:
                        description: 'The output of the application''s logger (raw
                          string). May be

                          non-deterministic.'
                        type: string
                      timestamp:
                        description: 'Time of the previous block. For heights > 1,
                          it''s the weighted median of

                          the timestamps of the valid votes in the block.LastCommit.
                          For height == 1,

                          it''s genesis time.'
                        type: string
                      tx:
                        description: "`Any` contains an arbitrary serialized protocol\
                          \ buffer message along with a\nURL that describes the type\
                          \ of the serialized message.\n\nProtobuf library provides\
                          \ support to pack/unpack Any values in the form\nof utility\
                          \ functions or additional generated methods of the Any type.\n\
                          \nExample 1: Pack and unpack a message in C++.\n\n\n   \
                          \ Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                          \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n   \
                          \ }\n\nExample 2: Pack and unpack a message in Java.\n\n\
                          \n    Foo foo = ...;\n    Any any = Any.pack(foo);\n   \
                          \ ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                          \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                          \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                          \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                          \      ...\n\n Example 4: Pack and unpack a message in Go\n\
                          \n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                          \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                          \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                          \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                          \ as the type URL and the unpack\nmethods only use the fully\
                          \ qualified type name after the last '/'\nin the type URL,\
                          \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                          \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                          \ `Any` value uses the regular\nrepresentation of the deserialized,\
                          \ embedded message, with an\nadditional field `@type` which\
                          \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                          \    message Person {\n      string first_name = 1;\n  \
                          \    string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                          : \"type.googleapis.com/google.profile.Person\",\n     \
                          \ \"firstName\": <string>,\n      \"lastName\": <string>\n\
                          \    }\n\nIf the embedded message type is well-known and\
                          \ has a custom JSON\nrepresentation, that representation\
                          \ will be embedded adding a field\n`value` which holds the\
                          \ custom JSON in addition to the `@type`\nfield. Example\
                          \ (for message [google.protobuf.Duration][]):\n\n\n    {\n\
                          \      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                          ,\n      \"value\": \"1.212s\"\n    }"
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                      txhash:
                        description: The transaction hash.
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: BroadcastTx broadcast transaction.
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      operationId: GetTx
      parameters:
      - description: hash is the tx hash to query, encoded as a hex string.
        in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/cosmos.tx.v1beta1.GetTxResponse'
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: GetTx fetches a tx by hash.
      tags:
      - tx
      - Query
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      operationId: AppliedPlan
      parameters:
      - description: name is the name of the applied plan to query for.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryAppliedPlanResponse is the response type for the
                  Query/AppliedPlan RPC

                  method.'
                properties:
                  height:
                    description: height is the block height at which the plan was
                      applied.
                    format: int64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - upgrade
      - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      operationId: CurrentPlan
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryCurrentPlanResponse is the response type for the
                  Query/CurrentPlan RPC

                  method.'
                properties:
                  plan:
                    description: plan is the current upgrade plan.
                    properties:
                      height:
                        description: 'The height at which the upgrade must be performed.

                          Only used if Time is not set.'
                        format: int64
                        type: string
                      info:
                        title: 'Any application specific upgrade info to be included
                          on-chain

                          such as a git commit that validators could automatically
                          upgrade to'
                        type: string
                      name:
                        description: 'Sets the name for the upgrade. This name will
                          be used by the upgraded

                          version of the software to apply any special "on-upgrade"
                          commands during

                          the first BeginBlock method after the upgrade is applied.
                          It is also used

                          to detect whether a software version can handle a given
                          upgrade. If no

                          upgrade handler with this name has been set in the software,
                          it will be

                          assumed that the software is out-of-date when the upgrade
                          Time or Height is

                          reached and the software will exit.'
                        type: string
                      time:
                        description: 'Deprecated: Time based upgrades have been deprecated.
                          Time based upgrade logic

                          has been removed from the SDK.

                          If this field is not empty, an error will be thrown.'
                        format: date-time
                        type: string
                      upgraded_client_state:
                        description: "`Any` contains an arbitrary serialized protocol\
                          \ buffer message along with a\nURL that describes the type\
                          \ of the serialized message.\n\nProtobuf library provides\
                          \ support to pack/unpack Any values in the form\nof utility\
                          \ functions or additional generated methods of the Any type.\n\
                          \nExample 1: Pack and unpack a message in C++.\n\n\n   \
                          \ Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
                          \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n   \
                          \ }\n\nExample 2: Pack and unpack a message in Java.\n\n\
                          \n    Foo foo = ...;\n    Any any = Any.pack(foo);\n   \
                          \ ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                          \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                          \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n\
                          \    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                          \      ...\n\n Example 4: Pack and unpack a message in Go\n\
                          \n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                          \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                          \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                          \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                          \ as the type URL and the unpack\nmethods only use the fully\
                          \ qualified type name after the last '/'\nin the type URL,\
                          \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                          \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                          \ `Any` value uses the regular\nrepresentation of the deserialized,\
                          \ embedded message, with an\nadditional field `@type` which\
                          \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                          \    message Person {\n      string first_name = 1;\n  \
                          \    string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                          : \"type.googleapis.com/google.profile.Person\",\n     \
                          \ \"firstName\": <string>,\n      \"lastName\": <string>\n\
                          \    }\n\nIf the embedded message type is well-known and\
                          \ has a custom JSON\nrepresentation, that representation\
                          \ will be embedded adding a field\n`value` which holds the\
                          \ custom JSON in addition to the `@type`\nfield. Example\
                          \ (for message [google.protobuf.Duration][]):\n\n\n    {\n\
                          \      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                          ,\n      \"value\": \"1.212s\"\n    }"
                        properties:
                          type_url:
                            description: "A URL/resource name that uniquely identifies\
                              \ the type of the serialized\nprotocol buffer message.\
                              \ This string must contain at least\none \"/\" character.\
                              \ The last segment of the URL's path must represent\n\
                              the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                              \ The name should be in a canonical form\n(e.g., leading\
                              \ \".\" is not accepted).\n\nIn practice, teams usually\
                              \ precompile into the binary all types that they\nexpect\
                              \ it to use in the context of Any. However, for URLs\
                              \ which use the\nscheme `http`, `https`, or no scheme,\
                              \ one can optionally set up a type\nserver that maps\
                              \ type URLs to message definitions as follows:\n\n*\
                              \ If no scheme is provided, `https` is assumed.\n* An\
                              \ HTTP GET on the URL must yield a [google.protobuf.Type][]\n\
                              \n  value in binary format, or produce an error.\n*\
                              \ Applications are allowed to cache lookup results based\
                              \ on the\n\n  URL, or have them precompiled into a binary\
                              \ to avoid any\n  lookup. Therefore, binary compatibility\
                              \ needs to be preserved\n  on changes to types. (Use\
                              \ versioned type names to manage\n  breaking changes.)\n\
                              \nNote: this functionality is not currently available\
                              \ in the official\nprotobuf release, and it is not used\
                              \ for type URLs beginning with\ntype.googleapis.com.\n\
                              \nSchemes other than `http`, `https` (or the empty scheme)\
                              \ might be\nused with implementation specific semantics."
                            type: string
                          value:
                            description: Must be a valid serialized protocol buffer
                              of the above specified type.
                            format: byte
                            type: string
                        type: object
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - upgrade
      - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      parameters:
      - description: 'module_name is a field to query a specific module

          consensus version from state. Leaving this empty will

          fetch the full list of module versions from state.'
        in: query
        name: module_name
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryModuleVersionsResponse is the response type for
                  the Query/ModuleVersions

                  RPC method.


                  Since: cosmos-sdk 0.43'
                properties:
                  module_versions:
                    description: module_versions is a list of module names with their
                      consensus versions.
                    items:
                      description: 'ModuleVersion specifies a module and its consensus
                        version.


                        Since: cosmos-sdk 0.43'
                      properties:
                        name:
                          title: name of the app module
                          type: string
                        version:
                          format: uint64
                          title: consensus version of the app module
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - upgrade
      - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      operationId: UpgradedConsensusState
      parameters:
      - description: 'last height of the current chain must be sent in request

          as this is the height under which next consensus state is stored'
        in: path
        name: last_height
        required: true
        schema:
          format: int64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryUpgradedConsensusStateResponse is the response
                  type for the Query/UpgradedConsensusState

                  RPC method.'
                properties:
                  upgraded_consensus_state:
                    format: byte
                    title: 'Since: cosmos-sdk 0.43'
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - upgrade
      - Query
  /osmosis/epochs/v1beta1/current_epoch:
    get:
      operationId: CurrentEpoch
      parameters:
      - in: query
        name: identifier
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  current_epoch:
                    format: int64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - epochs
      - Query
  /osmosis/epochs/v1beta1/epochs:
    get:
      operationId: EpochInfos
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  epochs:
                    items:
                      description: 'EpochInfo is a struct that describes the data
                        going into

                        a timer defined by the x/epochs module.'
                      properties:
                        current_epoch:
                          description: 'current_epoch is the current epoch number,
                            or in other words,

                            how many times has the timer ''ticked''.

                            The first tick (current_epoch=1) is defined as

                            the first block whose blocktime is greater than the EpochInfo
                            start_time.'
                          format: int64
                          type: string
                        current_epoch_start_height:
                          format: int64
                          title: 'current_epoch_start_height is the block height at
                            which the current epoch

                            started. (The block height at which the timer last ticked)'
                          type: string
                        current_epoch_start_time:
                          description: 'current_epoch_start_time describes the start
                            time of the current timer

                            interval. The interval is (current_epoch_start_time,

                            current_epoch_start_time + duration] When the timer ticks,
                            this is set to

                            current_epoch_start_time = last_epoch_start_time + duration
                            only one timer

                            tick for a given identifier can occur per block.


                            NOTE! The current_epoch_start_time may diverge significantly
                            from the

                            wall-clock time the epoch began at. Wall-clock time of
                            epoch start may be

                            >> current_epoch_start_time. Suppose current_epoch_start_time
                            = 10,

                            duration = 5. Suppose the chain goes offline at t=14,
                            and comes back online

                            at t=30, and produces blocks at every successive time.
                            (t=31, 32, etc.)

                            * The t=30 block will start the epoch for (10, 15]

                            * The t=31 block will start the epoch for (15, 20]

                            * The t=32 block will start the epoch for (20, 25]

                            * The t=33 block will start the epoch for (25, 30]

                            * The t=34 block will start the epoch for (30, 35]

                            * The **t=36** block will start the epoch for (35, 40]'
                          format: date-time
                          type: string
                        duration:
                          description: 'duration is the time in between epoch ticks.

                            In order for intended behavior to be met, duration should

                            be greater than the chains expected block time.

                            Duration must be non-zero.'
                          type: string
                        epoch_counting_started:
                          description: 'epoch_counting_started is a boolean, that
                            indicates whether this

                            epoch timer has began yet.'
                          type: boolean
                        identifier:
                          description: identifier is a unique reference to this particular
                            timer.
                          type: string
                        start_time:
                          description: 'start_time is the time at which the timer
                            first ever ticks.

                            If start_time is in the future, the epoch will not begin
                            until the start

                            time.'
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - epochs
      - Query
  /osmosis/gamm/v1beta1/cfmm_concentrated_pool_links:
    get:
      operationId: CFMMConcentratedPoolLinks
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  migration_records:
                    properties:
                      balancer_to_concentrated_pool_links:
                        items:
                          description: 'BalancerToConcentratedPoolLink defines a single
                            link between a single

                            balancer pool and a single concentrated liquidity pool.
                            This link is used to

                            allow a balancer pool to migrate to a single canonical
                            full range

                            concentrated liquidity pool position

                            A balancer pool can be linked to a maximum of one cl pool,
                            and a cl pool can

                            be linked to a maximum of one balancer pool.'
                          properties:
                            balancer_pool_id:
                              format: uint64
                              type: string
                            cl_pool_id:
                              format: uint64
                              type: string
                          type: object
                        type: array
                    title: 'MigrationRecords contains all the links between balancer
                      and concentrated

                      pools'
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
      - concentrated-liquidity
  /osmosis/gamm/v1beta1/concentrated_pool_id_link_from_cfmm/{cfmm_pool_id}:
    get:
      operationId: ConcentratedPoolIdLinkFromCFMM
      parameters:
      - in: path
        name: cfmm_pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  concentrated_pool_id:
                    format: uint64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
      - concentrated-liquidity
  /osmosis/gamm/v1beta1/filtered_pools:
    get:
      operationId: PoolsWithFilter
      parameters:
      - description: 'String of the coins in single string seperated by comma. Ex)

          10uatom,100uosmo.'
        in: query
        name: min_liquidity
        required: false
        schema:
          type: string
      - in: query
        name: pool_type
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  pools:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/num_pools:
    get:
      operationId: NumPools
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  num_pools:
                    format: uint64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pool_type/{pool_id}:
    get:
      operationId: PoolType
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pool_type:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools:
    get:
      operationId: Pools
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: pagination defines the pagination in the response.
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                  pools:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}:
    get:
      operationId: Pool
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pool:
                    description: "`Any` contains an arbitrary serialized protocol\
                      \ buffer message along with a\nURL that describes the type of\
                      \ the serialized message.\n\nProtobuf library provides support\
                      \ to pack/unpack Any values in the form\nof utility functions\
                      \ or additional generated methods of the Any type.\n\nExample\
                      \ 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
                      \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
                      \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message\
                      \ in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                      \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                      \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n \
                      \   ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                      \      ...\n\n Example 4: Pack and unpack a message in Go\n\n\
                      \     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                      \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                      \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                      \ as the type URL and the unpack\nmethods only use the fully\
                      \ qualified type name after the last '/'\nin the type URL, for\
                      \ example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\"\
                      .\n\n\nJSON\n====\nThe JSON representation of an `Any` value\
                      \ uses the regular\nrepresentation of the deserialized, embedded\
                      \ message, with an\nadditional field `@type` which contains\
                      \ the type URL. Example:\n\n\n    package google.profile;\n\
                      \    message Person {\n      string first_name = 1;\n      string\
                      \ last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                      \    }\n\nIf the embedded message type is well-known and has\
                      \ a custom JSON\nrepresentation, that representation will be\
                      \ embedded adding a field\n`value` which holds the custom JSON\
                      \ in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                      \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                      ,\n      \"value\": \"1.212s\"\n    }"
                    properties:
                      type_url:
                        description: "A URL/resource name that uniquely identifies\
                          \ the type of the serialized\nprotocol buffer message. This\
                          \ string must contain at least\none \"/\" character. The\
                          \ last segment of the URL's path must represent\nthe fully\
                          \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                          \ The name should be in a canonical form\n(e.g., leading\
                          \ \".\" is not accepted).\n\nIn practice, teams usually\
                          \ precompile into the binary all types that they\nexpect\
                          \ it to use in the context of Any. However, for URLs which\
                          \ use the\nscheme `http`, `https`, or no scheme, one can\
                          \ optionally set up a type\nserver that maps type URLs to\
                          \ message definitions as follows:\n\n* If no scheme is provided,\
                          \ `https` is assumed.\n* An HTTP GET on the URL must yield\
                          \ a [google.protobuf.Type][]\n\n  value in binary format,\
                          \ or produce an error.\n* Applications are allowed to cache\
                          \ lookup results based on the\n\n  URL, or have them precompiled\
                          \ into a binary to avoid any\n  lookup. Therefore, binary\
                          \ compatibility needs to be preserved\n  on changes to types.\
                          \ (Use versioned type names to manage\n  breaking changes.)\n\
                          \nNote: this functionality is not currently available in\
                          \ the official\nprotobuf release, and it is not used for\
                          \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                          \ other than `http`, `https` (or the empty scheme) might\
                          \ be\nused with implementation specific semantics."
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                title: 'Deprecated: please use the alternative in x/poolmanager'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/exit_swap_share_amount_in:
    get:
      operationId: CalcExitPoolCoinsFromShares
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      - in: query
        name: share_in_amount
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  tokens_out:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/join_swap_exact_in:
    get:
      operationId: CalcJoinPoolShares
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  share_out_amount:
                    type: string
                  tokens_out:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/params:
    get:
      operationId: PoolParams
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: "`Any` contains an arbitrary serialized protocol\
                      \ buffer message along with a\nURL that describes the type of\
                      \ the serialized message.\n\nProtobuf library provides support\
                      \ to pack/unpack Any values in the form\nof utility functions\
                      \ or additional generated methods of the Any type.\n\nExample\
                      \ 1: Pack and unpack a message in C++.\n\n\n    Foo foo = ...;\n\
                      \    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo))\
                      \ {\n      ...\n    }\n\nExample 2: Pack and unpack a message\
                      \ in Java.\n\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
                      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
                      \    }\n\n Example 3: Pack and unpack a message in Python.\n\
                      \n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n \
                      \   ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n\
                      \      ...\n\n Example 4: Pack and unpack a message in Go\n\n\
                      \     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n\
                      \     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any,\
                      \ foo); err != nil {\n       ...\n     }\n\nThe pack methods\
                      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                      \ as the type URL and the unpack\nmethods only use the fully\
                      \ qualified type name after the last '/'\nin the type URL, for\
                      \ example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\"\
                      .\n\n\nJSON\n====\nThe JSON representation of an `Any` value\
                      \ uses the regular\nrepresentation of the deserialized, embedded\
                      \ message, with an\nadditional field `@type` which contains\
                      \ the type URL. Example:\n\n\n    package google.profile;\n\
                      \    message Person {\n      string first_name = 1;\n      string\
                      \ last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
                      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n\
                      \    }\n\nIf the embedded message type is well-known and has\
                      \ a custom JSON\nrepresentation, that representation will be\
                      \ embedded adding a field\n`value` which holds the custom JSON\
                      \ in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
                      \n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
                      ,\n      \"value\": \"1.212s\"\n    }"
                    properties:
                      type_url:
                        description: "A URL/resource name that uniquely identifies\
                          \ the type of the serialized\nprotocol buffer message. This\
                          \ string must contain at least\none \"/\" character. The\
                          \ last segment of the URL's path must represent\nthe fully\
                          \ qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                          \ The name should be in a canonical form\n(e.g., leading\
                          \ \".\" is not accepted).\n\nIn practice, teams usually\
                          \ precompile into the binary all types that they\nexpect\
                          \ it to use in the context of Any. However, for URLs which\
                          \ use the\nscheme `http`, `https`, or no scheme, one can\
                          \ optionally set up a type\nserver that maps type URLs to\
                          \ message definitions as follows:\n\n* If no scheme is provided,\
                          \ `https` is assumed.\n* An HTTP GET on the URL must yield\
                          \ a [google.protobuf.Type][]\n\n  value in binary format,\
                          \ or produce an error.\n* Applications are allowed to cache\
                          \ lookup results based on the\n\n  URL, or have them precompiled\
                          \ into a binary to avoid any\n  lookup. Therefore, binary\
                          \ compatibility needs to be preserved\n  on changes to types.\
                          \ (Use versioned type names to manage\n  breaking changes.)\n\
                          \nNote: this functionality is not currently available in\
                          \ the official\nprotobuf release, and it is not used for\
                          \ type URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                          \ other than `http`, `https` (or the empty scheme) might\
                          \ be\nused with implementation specific semantics."
                        type: string
                      value:
                        description: Must be a valid serialized protocol buffer of
                          the above specified type.
                        format: byte
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/prices:
    get:
      operationId: SpotPrice
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      - in: query
        name: base_asset_denom
        required: false
        schema:
          type: string
      - in: query
        name: quote_asset_denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QuerySpotPriceResponse defines the gRPC response structure
                  for a SpotPrice

                  query.'
                properties:
                  spot_price:
                    title: String of the Dec. Ex) 10.203uatom
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/total_pool_liquidity:
    get:
      operationId: TotalPoolLiquidity
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  liquidity:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                title: 'Deprecated: please use the alternative in x/poolmanager'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/pools/{pool_id}/total_shares:
    get:
      operationId: TotalShares
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  total_shares:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/total_liquidity:
    get:
      operationId: TotalLiquidity
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  liquidity:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/{pool_id}/estimate/swap_exact_amount_in:
    get:
      operationId: EstimateSwapExactAmountIn
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      - in: query
        name: sender
        required: false
        schema:
          type: string
      - in: query
        name: token_in
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  token_out_amount:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/gamm/v1beta1/{pool_id}/estimate/swap_exact_amount_out:
    get:
      operationId: EstimateSwapExactAmountOut
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      - in: query
        name: sender
        required: false
        schema:
          type: string
      - in: query
        name: token_out
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  token_in_amount:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - gamm
      - Query
  /osmosis/incentives/v1beta1/active_gauges:
    get:
      operationId: ActiveGauges
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    title: Active gagues only
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    title: Pagination defines pagination for the response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/active_gauges_per_denom:
    get:
      operationId: ActiveGaugesPerDenom
      parameters:
      - description: Desired denom when querying active gagues.
        in: query
        name: denom
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    title: Active gagues that match denom in query
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    title: Pagination defines pagination for the response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/gauge_by_id/{id}:
    get:
      operationId: GaugeByID
      parameters:
      - description: Gague ID being queried
        in: path
        name: id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  gauge:
                    description: 'Gauge is an object that stores and distributes yields
                      to recipients who

                      satisfy certain conditions. Currently gauges support conditions
                      around the

                      duration for which a given denom is locked.'
                    properties:
                      coins:
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: 'coins is the total amount of coins that have been
                          in the gauge

                          Can distribute multiple coin denoms'
                        type: array
                      distribute_to:
                        description: 'QueryCondition is a struct used for querying
                          locks upon different conditions.

                          Duration field and timestamp fields could be optional, depending
                          on the

                          LockQueryType.'
                        properties:
                          denom:
                            title: Denom represents the token denomination we are
                              looking to lock up
                            type: string
                          duration:
                            description: 'Duration is used to query locks with longer
                              duration than the specified

                              duration. Duration field must not be nil when the lock
                              query type is

                              `ByLockDuration`.'
                            type: string
                          lock_query_type:
                            default: ByDuration
                            description: 'LockQueryType defines the type of the lock
                              query that can

                              either be by duration or start time of the lock.'
                            enum:
                            - ByDuration
                            - ByTime
                            - NoLock
                            title: LockQueryType is a type of lock query, ByLockDuration
                              | ByLockTime
                            type: string
                          timestamp:
                            description: 'Timestamp is used by locks started before
                              the specified duration.

                              Timestamp field must not be nil when the lock query
                              type is `ByLockTime`.

                              Querying locks with timestamp is currently not implemented.'
                            format: date-time
                            type: string
                        title: 'distribute_to is where the gauge rewards are distributed
                          to.

                          This is queried via lock duration or by timestamp'
                        type: object
                      distributed_coins:
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: distributed_coins are coins that have been distributed
                          already
                        type: array
                      filled_epochs:
                        format: uint64
                        title: 'filled_epochs is the number of epochs distribution
                          has been completed on

                          already'
                        type: string
                      id:
                        format: uint64
                        title: id is the unique ID of a Gauge
                        type: string
                      is_perpetual:
                        description: 'is_perpetual is a flag to show if it''s a perpetual
                          or non-perpetual gauge

                          Non-perpetual gauges distribute their tokens equally per
                          epoch while the

                          gauge is in the active period. Perpetual gauges distribute
                          all their tokens

                          at a single time and only distribute their tokens again
                          once the gauge is

                          refilled, Intended for use with incentives that get refilled
                          daily.'
                        type: boolean
                      num_epochs_paid_over:
                        format: uint64
                        title: 'num_epochs_paid_over is the number of total epochs
                          distribution will be

                          completed over'
                        type: string
                      start_time:
                        format: date-time
                        title: start_time is the distribution start time
                        type: string
                    title: Gauge that corresponds to provided gague ID
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/gauges:
    get:
      operationId: Gauges
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    title: Upcoming and active gauges
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    title: Pagination defines pagination for the response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/lockable_durations:
    get:
      operationId: LockableDurations
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  lockable_durations:
                    items:
                      type: string
                    title: Time durations that users can lock coins for in order to
                      recieve rewards
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/module_to_distribute_coins:
    get:
      operationId: ModuleToDistributeCoins
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: Coins that have yet to be distributed
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/rewards_est/{owner}:
    get:
      operationId: RewardsEst
      parameters:
      - description: Address that is being queried for future estimated rewards
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Lock IDs included in future reward estimation.
        explode: true
        in: query
        name: lock_ids
        required: false
        schema:
          items:
            format: uint64
            type: string
          type: array
      - description: 'Upper time limit of reward estimation

          Lower limit is current epoch.'
        in: query
        name: end_epoch
        required: false
        schema:
          format: int64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: 'Estimated coin rewards that will be recieved at provided
                      address

                      from specified locks between current time and end epoch'
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/upcoming_gauges:
    get:
      operationId: UpcomingGauges
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    title: Gauges whose distribution is upcoming
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    title: Pagination defines pagination for the response
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/incentives/v1beta1/upcoming_gauges_per_denom:
    get:
      operationId: UpcomingGaugesPerDenom
      parameters:
      - description: Filter for upcoming gagues that match specific denom.
        in: query
        name: denom
        required: false
        schema:
          type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    title: Pagination defines pagination for the response
                    type: object
                  upcoming_gauges:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    title: Upcoming gagues that match denom in query
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - incentives
      - Query
  /osmosis/lockup/v1beta1/account_locked_coins/{owner}:
    get:
      operationId: AccountLockedCoins
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_duration/{owner}:
    get:
      operationId: AccountLockedDuration
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: duration
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_longer_duration/{owner}:
    get:
      operationId: AccountLockedLongerDuration
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: duration
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_longer_duration_denom/{owner}:
    get:
      operationId: AccountLockedLongerDurationDenom
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: duration
        required: false
        schema:
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_longer_duration_not_unlocking_only/{owner}:
    get:
      operationId: AccountLockedLongerDurationNotUnlockingOnly
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: duration
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_pasttime/{owner}:
    get:
      operationId: AccountLockedPastTime
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_pasttime_denom/{owner}:
    get:
      operationId: AccountLockedPastTimeDenom
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        required: false
        schema:
          format: date-time
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_locked_pasttime_not_unlocking_only/{owner}:
    get:
      operationId: AccountLockedPastTimeNotUnlockingOnly
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_unlockable_coins/{owner}:
    get:
      operationId: AccountUnlockableCoins
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_unlocked_before_time/{owner}:
    get:
      operationId: AccountUnlockedBeforeTime
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      - in: query
        name: timestamp
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  locks:
                    items:
                      description: 'PeriodLock is a single lock unit by period defined
                        by the x/lockup module.

                        It''s a record of a locked coin at a specific time. It stores
                        owner, duration,

                        unlock time and the number of coins locked. A state of a period
                        lock is

                        created upon lock creation, and deleted once the lock has
                        been matured after

                        the `duration` has passed since unbonding started.'
                      properties:
                        ID:
                          description: 'ID is the unique id of the lock.

                            The ID of the lock is decided upon lock creation, incrementing
                            by 1 for

                            every lock.'
                          format: uint64
                          type: string
                        coins:
                          description: Coins are the tokens locked within the lock,
                            kept in the module account.
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          type: array
                        duration:
                          description: 'Duration is the time needed for a lock to
                            mature after unlocking has

                            started.'
                          type: string
                        end_time:
                          description: 'EndTime refers to the time at which the lock
                            would mature and get deleted.

                            This value is first initialized when an unlock has started
                            for the lock,

                            end time being block time + duration.'
                          format: date-time
                          type: string
                        owner:
                          description: 'Owner is the account address of the lock owner.

                            Only the owner can modify the state of the lock.'
                          type: string
                        reward_receiver_address:
                          description: 'Reward Receiver Address is the address that
                            would be receiving rewards for

                            the incentives for the lock. This is set to owner by default
                            and can be

                            changed via separate msg.'
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/account_unlocking_coins/{owner}:
    get:
      operationId: AccountUnlockingCoins
      parameters:
      - in: path
        name: owner
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/lock_reward_receiver/{lock_id}:
    get:
      operationId: LockRewardReceiver
      parameters:
      - in: path
        name: lock_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  reward_receiver:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/locked_by_id/{lock_id}:
    get:
      operationId: LockedByID
      parameters:
      - in: path
        name: lock_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  lock:
                    description: 'PeriodLock is a single lock unit by period defined
                      by the x/lockup module.

                      It''s a record of a locked coin at a specific time. It stores
                      owner, duration,

                      unlock time and the number of coins locked. A state of a period
                      lock is

                      created upon lock creation, and deleted once the lock has been
                      matured after

                      the `duration` has passed since unbonding started.'
                    properties:
                      ID:
                        description: 'ID is the unique id of the lock.

                          The ID of the lock is decided upon lock creation, incrementing
                          by 1 for

                          every lock.'
                        format: uint64
                        type: string
                      coins:
                        description: Coins are the tokens locked within the lock,
                          kept in the module account.
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      duration:
                        description: 'Duration is the time needed for a lock to mature
                          after unlocking has

                          started.'
                        type: string
                      end_time:
                        description: 'EndTime refers to the time at which the lock
                          would mature and get deleted.

                          This value is first initialized when an unlock has started
                          for the lock,

                          end time being block time + duration.'
                        format: date-time
                        type: string
                      owner:
                        description: 'Owner is the account address of the lock owner.

                          Only the owner can modify the state of the lock.'
                        type: string
                      reward_receiver_address:
                        description: 'Reward Receiver Address is the address that
                          would be receiving rewards for

                          the incentives for the lock. This is set to owner by default
                          and can be

                          changed via separate msg.'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/locked_denom:
    get:
      operationId: LockedDenom
      parameters:
      - in: query
        name: denom
        required: false
        schema:
          type: string
      - in: query
        name: duration
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  amount:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/module_balance:
    get:
      operationId: ModuleBalance
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/module_locked_amount:
    get:
      operationId: ModuleLockedAmount
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/next_lock_id:
    get:
      operationId: NextLockID
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  lock_id:
                    format: uint64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/params:
    get:
      operationId: LockupParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    properties:
                      force_unlock_allowed_addresses:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/synthetic_lockup_by_lock_id/{lock_id}:
    get:
      operationId: SyntheticLockupByLockupID
      parameters:
      - in: path
        name: lock_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  synthetic_lock:
                    description: 'SyntheticLock is creating virtual lockup where new
                      denom is combination of

                      original denom and synthetic suffix. At the time of synthetic
                      lockup creation

                      and deletion, accumulation store is also being updated and on
                      querier side,

                      they can query as freely as native lockup.'
                    properties:
                      duration:
                        description: 'Duration is the duration for a synthetic lock
                          to mature

                          at the point of unbonding has started.'
                        type: string
                      end_time:
                        format: date-time
                        title: 'used for unbonding synthetic lockups, for active synthetic
                          lockups, this

                          value is set to uninitialized value'
                        type: string
                      synth_denom:
                        description: 'SynthDenom is the synthetic denom that is a
                          combination of

                          gamm share + bonding status + validator address.'
                        type: string
                      underlying_lock_id:
                        description: 'Underlying Lock ID is the underlying native
                          lock''s id for this synthetic

                          lockup. A synthetic lock MUST have an underlying lock.'
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/lockup/v1beta1/synthetic_lockups_by_lock_id/{lock_id}:
    get:
      operationId: SyntheticLockupsByLockupID
      parameters:
      - in: path
        name: lock_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  synthetic_locks:
                    items:
                      description: 'SyntheticLock is creating virtual lockup where
                        new denom is combination of

                        original denom and synthetic suffix. At the time of synthetic
                        lockup creation

                        and deletion, accumulation store is also being updated and
                        on querier side,

                        they can query as freely as native lockup.'
                      properties:
                        duration:
                          description: 'Duration is the duration for a synthetic lock
                            to mature

                            at the point of unbonding has started.'
                          type: string
                        end_time:
                          format: date-time
                          title: 'used for unbonding synthetic lockups, for active
                            synthetic lockups, this

                            value is set to uninitialized value'
                          type: string
                        synth_denom:
                          description: 'SynthDenom is the synthetic denom that is
                            a combination of

                            gamm share + bonding status + validator address.'
                          type: string
                        underlying_lock_id:
                          description: 'Underlying Lock ID is the underlying native
                            lock''s id for this synthetic

                            lockup. A synthetic lock MUST have an underlying lock.'
                          format: uint64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - lockup
      - Query
  /osmosis/mint/v1beta1/epoch_provisions:
    get:
      operationId: EpochProvisions
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryEpochProvisionsResponse is the response type for
                  the

                  Query/EpochProvisions RPC method.'
                properties:
                  epoch_provisions:
                    description: epoch_provisions is the current minting per epoch
                      provisions value.
                    format: byte
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - mint
      - Query
  /osmosis/mint/v1beta1/params:
    get:
      operationId: MintParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      distribution_proportions:
                        description: 'distribution_proportions defines the distribution
                          proportions of the minted

                          denom. In other words, defines which stakeholders will receive
                          the minted

                          denoms and how much.'
                        properties:
                          community_pool:
                            description: 'community_pool defines the proportion of
                              the minted mint_denom that is

                              to be allocated to the community pool.'
                            type: string
                          developer_rewards:
                            description: 'developer_rewards defines the proportion
                              of the minted mint_denom that is

                              to be allocated to developer rewards address.'
                            type: string
                          pool_incentives:
                            description: 'pool_incentives defines the proportion of
                              the minted mint_denom that is

                              to be allocated as pool incentives.'
                            type: string
                          staking:
                            description: 'staking defines the proportion of the minted
                              mint_denom that is to be

                              allocated as staking rewards.'
                            type: string
                        type: object
                      epoch_identifier:
                        description: epoch_identifier mint epoch identifier e.g. (day,
                          week).
                        type: string
                      genesis_epoch_provisions:
                        description: genesis_epoch_provisions epoch provisions from
                          the first epoch.
                        type: string
                      mint_denom:
                        description: mint_denom is the denom of the coin to mint.
                        type: string
                      minting_rewards_distribution_start_epoch:
                        format: int64
                        title: 'minting_rewards_distribution_start_epoch start epoch
                          to distribute minting

                          rewards'
                        type: string
                      reduction_factor:
                        description: 'reduction_factor is the reduction multiplier
                          to execute

                          at the end of each period set by reduction_period_in_epochs.'
                        type: string
                      reduction_period_in_epochs:
                        description: 'reduction_period_in_epochs the number of epochs
                          it takes

                          to reduce the rewards.'
                        format: int64
                        type: string
                      weighted_developer_rewards_receivers:
                        description: 'weighted_developer_rewards_receivers is the
                          address to receive developer

                          rewards with weights assignedt to each address. The final
                          amount that each

                          address receives is: epoch_provisions *

                          distribution_proportions.developer_rewards * Address''s
                          Weight.'
                        items:
                          description: 'WeightedAddress represents an address with
                            a weight assigned to it.

                            The weight is used to determine the proportion of the
                            total minted

                            tokens to be minted to the address.'
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - mint
      - Query
  /osmosis/pool-incentives/v1beta1/distr_info:
    get:
      operationId: DistrInfo
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  distr_info:
                    properties:
                      records:
                        items:
                          properties:
                            gauge_id:
                              format: uint64
                              type: string
                            weight:
                              type: string
                          type: object
                        type: array
                      total_weight:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/pool-incentives/v1beta1/external_incentive_gauges:
    get:
      operationId: ExternalIncentiveGauges
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  data:
                    items:
                      description: 'Gauge is an object that stores and distributes
                        yields to recipients who

                        satisfy certain conditions. Currently gauges support conditions
                        around the

                        duration for which a given denom is locked.'
                      properties:
                        coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: 'coins is the total amount of coins that have been
                            in the gauge

                            Can distribute multiple coin denoms'
                          type: array
                        distribute_to:
                          description: 'QueryCondition is a struct used for querying
                            locks upon different conditions.

                            Duration field and timestamp fields could be optional,
                            depending on the

                            LockQueryType.'
                          properties:
                            denom:
                              title: Denom represents the token denomination we are
                                looking to lock up
                              type: string
                            duration:
                              description: 'Duration is used to query locks with longer
                                duration than the specified

                                duration. Duration field must not be nil when the
                                lock query type is

                                `ByLockDuration`.'
                              type: string
                            lock_query_type:
                              default: ByDuration
                              description: 'LockQueryType defines the type of the
                                lock query that can

                                either be by duration or start time of the lock.'
                              enum:
                              - ByDuration
                              - ByTime
                              - NoLock
                              title: LockQueryType is a type of lock query, ByLockDuration
                                | ByLockTime
                              type: string
                            timestamp:
                              description: 'Timestamp is used by locks started before
                                the specified duration.

                                Timestamp field must not be nil when the lock query
                                type is `ByLockTime`.

                                Querying locks with timestamp is currently not implemented.'
                              format: date-time
                              type: string
                          title: 'distribute_to is where the gauge rewards are distributed
                            to.

                            This is queried via lock duration or by timestamp'
                          type: object
                        distributed_coins:
                          items:
                            description: 'Coin defines a token with a denomination
                              and an amount.


                              NOTE: The amount field is an Int which implements the
                              custom method

                              signatures required by gogoproto.'
                            properties:
                              amount:
                                type: string
                              denom:
                                type: string
                            type: object
                          title: distributed_coins are coins that have been distributed
                            already
                          type: array
                        filled_epochs:
                          format: uint64
                          title: 'filled_epochs is the number of epochs distribution
                            has been completed on

                            already'
                          type: string
                        id:
                          format: uint64
                          title: id is the unique ID of a Gauge
                          type: string
                        is_perpetual:
                          description: 'is_perpetual is a flag to show if it''s a
                            perpetual or non-perpetual gauge

                            Non-perpetual gauges distribute their tokens equally per
                            epoch while the

                            gauge is in the active period. Perpetual gauges distribute
                            all their tokens

                            at a single time and only distribute their tokens again
                            once the gauge is

                            refilled, Intended for use with incentives that get refilled
                            daily.'
                          type: boolean
                        num_epochs_paid_over:
                          format: uint64
                          title: 'num_epochs_paid_over is the number of total epochs
                            distribution will be

                            completed over'
                          type: string
                        start_time:
                          format: date-time
                          title: start_time is the distribution start time
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/pool-incentives/v1beta1/gauge-ids/{pool_id}:
    get:
      operationId: GaugeIds
      parameters:
      - in: path
        name: pool_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  gauge_ids_with_duration:
                    items:
                      properties:
                        duration:
                          type: string
                        gauge_id:
                          format: uint64
                          type: string
                        gauge_incentive_percentage:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/pool-incentives/v1beta1/incentivized_pools:
    get:
      operationId: IncentivizedPools
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  incentivized_pools:
                    items:
                      properties:
                        gauge_id:
                          format: uint64
                          type: string
                        lockable_duration:
                          type: string
                        pool_id:
                          format: uint64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/pool-incentives/v1beta1/lockable_durations:
    get:
      operationId: PoolLockableDurations
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  lockable_durations:
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/pool-incentives/v1beta1/params:
    get:
      operationId: PoolIncentivesParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    properties:
                      minted_denom:
                        description: 'minted_denom is the denomination of the coin
                          expected to be minted by the

                          minting module. Pool-incentives module doesn’t actually
                          mint the coin

                          itself, but rather manages the distribution of coins that
                          matches the

                          defined minted_denom.'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - pool-incentives
      - Query
  /osmosis/superfluid/v1beta1/account_delegated_cl_positions/{delegator_address}:
    get:
      operationId: UserConcentratedSuperfluidPositionsDelegated
      parameters:
      - in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  cl_pool_user_position_records:
                    items:
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        lock_id:
                          format: uint64
                          type: string
                        position_id:
                          format: uint64
                          type: string
                        synthetic_lock:
                          description: 'SyntheticLock is creating virtual lockup where
                            new denom is combination of

                            original denom and synthetic suffix. At the time of synthetic
                            lockup creation

                            and deletion, accumulation store is also being updated
                            and on querier side,

                            they can query as freely as native lockup.'
                          properties:
                            duration:
                              description: 'Duration is the duration for a synthetic
                                lock to mature

                                at the point of unbonding has started.'
                              type: string
                            end_time:
                              format: date-time
                              title: 'used for unbonding synthetic lockups, for active
                                synthetic lockups, this

                                value is set to uninitialized value'
                              type: string
                            synth_denom:
                              description: 'SynthDenom is the synthetic denom that
                                is a combination of

                                gamm share + bonding status + validator address.'
                              type: string
                            underlying_lock_id:
                              description: 'Underlying Lock ID is the underlying native
                                lock''s id for this synthetic

                                lockup. A synthetic lock MUST have an underlying lock.'
                              format: uint64
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/account_undelegating_cl_positions/{delegator_address}:
    get:
      operationId: UserConcentratedSuperfluidPositionsUndelegating
      parameters:
      - in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  cl_pool_user_position_records:
                    items:
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        lock_id:
                          format: uint64
                          type: string
                        position_id:
                          format: uint64
                          type: string
                        synthetic_lock:
                          description: 'SyntheticLock is creating virtual lockup where
                            new denom is combination of

                            original denom and synthetic suffix. At the time of synthetic
                            lockup creation

                            and deletion, accumulation store is also being updated
                            and on querier side,

                            they can query as freely as native lockup.'
                          properties:
                            duration:
                              description: 'Duration is the duration for a synthetic
                                lock to mature

                                at the point of unbonding has started.'
                              type: string
                            end_time:
                              format: date-time
                              title: 'used for unbonding synthetic lockups, for active
                                synthetic lockups, this

                                value is set to uninitialized value'
                              type: string
                            synth_denom:
                              description: 'SynthDenom is the synthetic denom that
                                is a combination of

                                gamm share + bonding status + validator address.'
                              type: string
                            underlying_lock_id:
                              description: 'Underlying Lock ID is the underlying native
                                lock''s id for this synthetic

                                lockup. A synthetic lock MUST have an underlying lock.'
                              format: uint64
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/all_assets:
    get:
      operationId: AllAssets
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  assets:
                    items:
                      properties:
                        asset_type:
                          default: SuperfluidAssetTypeNative
                          enum:
                          - SuperfluidAssetTypeNative
                          - SuperfluidAssetTypeLPShare
                          - SuperfluidAssetTypeConcentratedShare
                          title: 'AssetType indicates whether the superfluid asset
                            is a native token or an lp

                            share'
                          type: string
                        denom:
                          type: string
                      title: SuperfluidAsset stores the pair of superfluid asset type
                        and denom pair
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/all_intermediary_accounts:
    get:
      operationId: AllIntermediaryAccounts
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        in: query
        name: pagination.key
        required: false
        schema:
          format: byte
          type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        in: query
        name: pagination.offset
        required: false
        schema:
          format: uint64
          type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        in: query
        name: pagination.limit
        required: false
        schema:
          format: uint64
          type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        schema:
          type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  accounts:
                    items:
                      properties:
                        address:
                          type: string
                        denom:
                          type: string
                        gauge_id:
                          format: uint64
                          type: string
                        val_addr:
                          type: string
                      type: object
                    type: array
                  pagination:
                    description: "PageResponse is to be embedded in gRPC response\
                      \ messages where the\ncorresponding request message has used\
                      \ PageRequest.\n\n\n message SomeResponse {\n         repeated\
                      \ Bar results = 1;\n         PageResponse page = 2;\n }"
                    properties:
                      next_key:
                        format: byte
                        title: 'next_key is the key to be passed to PageRequest.key
                          to

                          query the next page most efficiently'
                        type: string
                      total:
                        format: uint64
                        title: 'total is total number of results available if PageRequest.count_total

                          was set, its value is undefined otherwise'
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/all_superfluid_delegations:
    get:
      operationId: TotalSuperfluidDelegations
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  total_delegations:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/asset_multiplier:
    get:
      operationId: AssetMultiplier
      parameters:
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  osmo_equivalent_multiplier:
                    description: 'The Osmo-Equivalent-Multiplier Record for epoch
                      N refers to the osmo worth we

                      treat an LP share as having, for all of epoch N. Eventually
                      this is intended

                      to be set as the Time-weighted-average-osmo-backing for the
                      entire duration

                      of epoch N-1. (Thereby locking whats in use for epoch N as based
                      on the prior

                      epochs rewards) However for now, this is not the TWAP but instead
                      the spot

                      price at the boundary. For different types of assets in the
                      future, it could

                      change.'
                    properties:
                      denom:
                        title: superfluid asset denom, can be LP token or native token
                        type: string
                      epoch_number:
                        format: int64
                        type: string
                      multiplier:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/asset_type:
    get:
      operationId: AssetType
      parameters:
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  asset_type:
                    default: SuperfluidAssetTypeNative
                    enum:
                    - SuperfluidAssetTypeNative
                    - SuperfluidAssetTypeLPShare
                    - SuperfluidAssetTypeConcentratedShare
                    title: 'SuperfluidAssetType indicates whether the superfluid asset
                      is

                      a native token, lp share of a pool, or concentrated share of
                      a pool'
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/connected_intermediary_account/{lock_id}:
    get:
      operationId: ConnectedIntermediaryAccount
      parameters:
      - in: path
        name: lock_id
        required: true
        schema:
          format: uint64
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  account:
                    properties:
                      address:
                        type: string
                      denom:
                        type: string
                      gauge_id:
                        format: uint64
                        type: string
                      val_addr:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/estimate_superfluid_delegation_amount_by_validator_denom:
    get:
      operationId: EstimateSuperfluidDelegatedAmountByValidatorDenom
      parameters:
      - in: query
        name: validator_address
        required: false
        schema:
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  total_delegated_coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/params:
    get:
      operationId: SuperfluidParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      minimum_risk_factor:
                        description: 'minimum_risk_factor is to be cut on OSMO equivalent
                          value of lp tokens for

                          superfluid staking, default: 5%. The minimum risk factor
                          works

                          to counter-balance the staked amount on chain''s exposure
                          to various asset

                          volatilities, and have base staking be ''resistant'' to
                          volatility.'
                        type: string
                    title: Params holds parameters for the superfluid module
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/superfluid_delegation_amount:
    get:
      operationId: SuperfluidDelegationAmount
      parameters:
      - in: query
        name: delegator_address
        required: false
        schema:
          type: string
      - in: query
        name: validator_address
        required: false
        schema:
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  amount:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/superfluid_delegations/{delegator_address}:
    get:
      operationId: SuperfluidDelegationsByDelegator
      parameters:
      - in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  superfluid_delegation_records:
                    items:
                      description: 'SuperfluidDelegationRecord is a struct used to
                        indicate superfluid

                        delegations of an account in the state machine in a user friendly
                        form.'
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegator_address:
                          type: string
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                  total_delegated_coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_equivalent_staked_amount:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/superfluid_delegations_by_validator_denom:
    get:
      operationId: SuperfluidDelegationsByValidatorDenom
      parameters:
      - in: query
        name: validator_address
        required: false
        schema:
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  superfluid_delegation_records:
                    items:
                      description: 'SuperfluidDelegationRecord is a struct used to
                        indicate superfluid

                        delegations of an account in the state machine in a user friendly
                        form.'
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegator_address:
                          type: string
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/superfluid_undelegations_by_delegator/{delegator_address}:
    get:
      operationId: SuperfluidUndelegationsByDelegator
      parameters:
      - in: path
        name: delegator_address
        required: true
        schema:
          type: string
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  superfluid_delegation_records:
                    items:
                      description: 'SuperfluidDelegationRecord is a struct used to
                        indicate superfluid

                        delegations of an account in the state machine in a user friendly
                        form.'
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegator_address:
                          type: string
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                  synthetic_locks:
                    items:
                      description: 'SyntheticLock is creating virtual lockup where
                        new denom is combination of

                        original denom and synthetic suffix. At the time of synthetic
                        lockup creation

                        and deletion, accumulation store is also being updated and
                        on querier side,

                        they can query as freely as native lockup.'
                      properties:
                        duration:
                          description: 'Duration is the duration for a synthetic lock
                            to mature

                            at the point of unbonding has started.'
                          type: string
                        end_time:
                          format: date-time
                          title: 'used for unbonding synthetic lockups, for active
                            synthetic lockups, this

                            value is set to uninitialized value'
                          type: string
                        synth_denom:
                          description: 'SynthDenom is the synthetic denom that is
                            a combination of

                            gamm share + bonding status + validator address.'
                          type: string
                        underlying_lock_id:
                          description: 'Underlying Lock ID is the underlying native
                            lock''s id for this synthetic

                            lockup. A synthetic lock MUST have an underlying lock.'
                          format: uint64
                          type: string
                      type: object
                    type: array
                  total_undelegated_coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/total_delegation_by_delegator/{delegator_address}:
    get:
      operationId: TotalDelegationByDelegator
      parameters:
      - in: path
        name: delegator_address
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  delegation_response:
                    items:
                      description: 'DelegationResponse is equivalent to Delegation
                        except that it contains a

                        balance in addition to shares which is more suitable for client
                        responses.'
                      properties:
                        balance:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegation:
                          description: 'Delegation represents the bond with tokens
                            held by an account. It is

                            owned by one delegator, and is associated with the voting
                            power of one

                            validator.'
                          properties:
                            delegator_address:
                              description: delegator_address is the bech32-encoded
                                address of the delegator.
                              type: string
                            shares:
                              description: shares define the delegation shares received.
                              type: string
                            validator_address:
                              description: validator_address is the bech32-encoded
                                address of the validator.
                              type: string
                          type: object
                      type: object
                    type: array
                  superfluid_delegation_records:
                    items:
                      description: 'SuperfluidDelegationRecord is a struct used to
                        indicate superfluid

                        delegations of an account in the state machine in a user friendly
                        form.'
                      properties:
                        delegation_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        delegator_address:
                          type: string
                        equivalent_staked_amount:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        validator_address:
                          type: string
                      type: object
                    type: array
                  total_delegated_coins:
                    items:
                      description: 'Coin defines a token with a denomination and an
                        amount.


                        NOTE: The amount field is an Int which implements the custom
                        method

                        signatures required by gogoproto.'
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  total_equivalent_staked_amount:
                    description: 'Coin defines a token with a denomination and an
                      amount.


                      NOTE: The amount field is an Int which implements the custom
                      method

                      signatures required by gogoproto.'
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/superfluid/v1beta1/unpool_whitelist:
    get:
      operationId: UnpoolWhitelist
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  pool_ids:
                    items:
                      format: uint64
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      description: "`Any` contains an arbitrary serialized protocol\
                        \ buffer message along with a\nURL that describes the type\
                        \ of the serialized message.\n\nProtobuf library provides\
                        \ support to pack/unpack Any values in the form\nof utility\
                        \ functions or additional generated methods of the Any type.\n\
                        \nExample 1: Pack and unpack a message in C++.\n\n\n    Foo\
                        \ foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n\
                        \    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample\
                        \ 2: Pack and unpack a message in Java.\n\n\n    Foo foo =\
                        \ ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class))\
                        \ {\n      foo = any.unpack(Foo.class);\n    }\n\n Example\
                        \ 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
                        \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
                        \      any.Unpack(foo)\n      ...\n\n Example 4: Pack and\
                        \ unpack a message in Go\n\n     foo := &pb.Foo{...}\n   \
                        \  any, err := ptypes.MarshalAny(foo)\n     ...\n     foo\
                        \ := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo);\
                        \ err != nil {\n       ...\n     }\n\nThe pack methods provided\
                        \ by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
                        \ as the type URL and the unpack\nmethods only use the fully\
                        \ qualified type name after the last '/'\nin the type URL,\
                        \ for example \"foo.bar.com/x/y.z\" will yield type\nname\
                        \ \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an\
                        \ `Any` value uses the regular\nrepresentation of the deserialized,\
                        \ embedded message, with an\nadditional field `@type` which\
                        \ contains the type URL. Example:\n\n\n    package google.profile;\n\
                        \    message Person {\n      string first_name = 1;\n    \
                        \  string last_name = 2;\n    }\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.profile.Person\",\n      \"\
                        firstName\": <string>,\n      \"lastName\": <string>\n   \
                        \ }\n\nIf the embedded message type is well-known and has\
                        \ a custom JSON\nrepresentation, that representation will\
                        \ be embedded adding a field\n`value` which holds the custom\
                        \ JSON in addition to the `@type`\nfield. Example (for message\
                        \ [google.protobuf.Duration][]):\n\n\n    {\n      \"@type\"\
                        : \"type.googleapis.com/google.protobuf.Duration\",\n    \
                        \  \"value\": \"1.212s\"\n    }"
                      properties:
                        type_url:
                          description: "A URL/resource name that uniquely identifies\
                            \ the type of the serialized\nprotocol buffer message.\
                            \ This string must contain at least\none \"/\" character.\
                            \ The last segment of the URL's path must represent\n\
                            the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
                            \ The name should be in a canonical form\n(e.g., leading\
                            \ \".\" is not accepted).\n\nIn practice, teams usually\
                            \ precompile into the binary all types that they\nexpect\
                            \ it to use in the context of Any. However, for URLs which\
                            \ use the\nscheme `http`, `https`, or no scheme, one can\
                            \ optionally set up a type\nserver that maps type URLs\
                            \ to message definitions as follows:\n\n* If no scheme\
                            \ is provided, `https` is assumed.\n* An HTTP GET on the\
                            \ URL must yield a [google.protobuf.Type][]\n\n  value\
                            \ in binary format, or produce an error.\n* Applications\
                            \ are allowed to cache lookup results based on the\n\n\
                            \  URL, or have them precompiled into a binary to avoid\
                            \ any\n  lookup. Therefore, binary compatibility needs\
                            \ to be preserved\n  on changes to types. (Use versioned\
                            \ type names to manage\n  breaking changes.)\n\nNote:\
                            \ this functionality is not currently available in the\
                            \ official\nprotobuf release, and it is not used for type\
                            \ URLs beginning with\ntype.googleapis.com.\n\nSchemes\
                            \ other than `http`, `https` (or the empty scheme) might\
                            \ be\nused with implementation specific semantics."
                          type: string
                        value:
                          description: Must be a valid serialized protocol buffer
                            of the above specified type.
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - superfluid
      - Query
  /osmosis/tokenfactory/v1beta1/denoms/{denom}/authority_metadata:
    get:
      operationId: DenomAuthorityMetadata
      parameters:
      - in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDenomAuthorityMetadataResponse defines the response
                  structure for the

                  DenomAuthorityMetadata gRPC query.'
                properties:
                  authority_metadata:
                    description: 'DenomAuthorityMetadata specifies metadata for addresses
                      that have specific

                      capabilities over a token factory denom. Right now there is
                      only one Admin

                      permission, but is planned to be extended to the future.'
                    properties:
                      admin:
                        title: Can be empty for no admin, or a valid osmosis address
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - tokenfactory
      - Query
  /osmosis/tokenfactory/v1beta1/denoms/{denom}/before_send_hook:
    get:
      operationId: BeforeSendHookAddress
      parameters:
      - in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryBeforeSendHookAddressResponse defines the response
                  structure for the

                  DenomBeforeSendHook gRPC query.'
                properties:
                  cosmwasm_address:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - tokenfactory
      - Query
  /osmosis/tokenfactory/v1beta1/denoms_from_creator/{creator}:
    get:
      operationId: DenomsFromCreator
      parameters:
      - in: path
        name: creator
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: 'QueryDenomsFromCreatorRequest defines the response structure
                  for the

                  DenomsFromCreator gRPC query.'
                properties:
                  denoms:
                    items:
                      type: string
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - tokenfactory
      - Query
  /osmosis/tokenfactory/v1beta1/params:
    get:
      operationId: TokenfactoryParams
      responses:
        '200':
          content:
            '*/*':
              schema:
                description: QueryParamsResponse is the response type for the Query/Params
                  RPC method.
                properties:
                  params:
                    description: params defines the parameters of the module.
                    properties:
                      denom_creation_fee:
                        description: 'DenomCreationFee defines the fee to be charged
                          on the creation of a new

                          denom. The fee is drawn from the MsgCreateDenom''s sender
                          account, and

                          transferred to the community pool.'
                        items:
                          description: 'Coin defines a token with a denomination and
                            an amount.


                            NOTE: The amount field is an Int which implements the
                            custom method

                            signatures required by gogoproto.'
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        type: array
                      denom_creation_gas_consume:
                        description: 'DenomCreationGasConsume defines the gas cost
                          for creating a new denom.

                          This is intended as a spam deterrence mechanism.


                          See: https://github.com/CosmWasm/token-factory/issues/11'
                        format: uint64
                        type: string
                    type: object
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - tokenfactory
      - Query
  /osmosis/txfees/v1beta1/base_denom:
    get:
      operationId: TxFeesBaseDenom
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  base_denom:
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - txfees
      - Query
  /osmosis/txfees/v1beta1/denom_pool_id/{denom}:
    get:
      operationId: DenomPoolId
      parameters:
      - in: path
        name: denom
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  poolID:
                    format: uint64
                    type: string
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - txfees
      - Query
  /osmosis/txfees/v1beta1/fee_tokens:
    get:
      operationId: FeeTokens
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  fee_tokens:
                    items:
                      description: 'FeeToken is a struct that specifies a coin denom,
                        and pool ID pair.

                        This marks the token as eligible for use as a tx fee asset
                        in Osmosis.

                        Its price in osmo is derived through looking at the provided
                        pool ID.

                        The pool ID must have osmo as one of its assets.'
                      properties:
                        denom:
                          type: string
                        poolID:
                          format: uint64
                          type: string
                      type: object
                    type: array
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - txfees
      - Query
  /osmosis/txfees/v1beta1/spot_price_by_denom:
    get:
      operationId: DenomSpotPrice
      parameters:
      - in: query
        name: denom
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                properties:
                  poolID:
                    format: uint64
                    type: string
                  spot_price:
                    type: string
                title: 'QueryDenomSpotPriceRequest defines grpc response structure
                  for querying spot

                  price for the specified tx fee denom'
                type: object
          description: A successful response.
        default:
          content:
            '*/*':
              schema:
                properties:
                  code:
                    format: int32
                    type: integer
                  details:
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  error:
                    type: string
                  message:
                    type: string
                type: object
          description: An unexpected error response.
      summary: ''
      tags:
      - txfees
      - Query
servers:
- description: Osmosis mainnet node
  url: https://lcd.osmosis.zone
- description: Osmosis testnet node
  url: https://lcd-test.osmosis.zone
