"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[9639],{84141:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"manual/node-run","title":"Run the Node","description":"Start your node","source":"@site/docs/dvpn-node-setup/manual/node-run.md","sourceDirName":"manual","slug":"/manual/node-run","permalink":"/dvpn-node-setup/manual/node-run","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Run the Node","description":"Start your node","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Node Configuration","permalink":"/dvpn-node-setup/manual/node-config"},"next":{"title":"Automated Setup","permalink":"/dvpn-node-setup/automated"}}');var s=t(74848),i=t(28453);const a={title:"Run the Node",description:"Start your node",sidebar_position:5},o=void 0,d={},c=[{value:"Run the Node Container",id:"run-the-node-container",level:2},{value:"After Starting the Node",id:"after-starting-the-node",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{title:"Important",type:"danger",children:[(0,s.jsxs)(n.p,{children:["Before starting the node, remember to send a few P2P (",(0,s.jsx)(n.strong,{children:"50"})," should suffice) to the operator address otherwise the node will not start!\nTo accomplish this, import the seed you generated or recovered in ",(0,s.jsx)(n.a,{href:"/dvpn-node-setup/manual/node-config#add-a-mnemonic",children:(0,s.jsx)(n.strong,{children:"this step"})})," into a wallet such as ",(0,s.jsx)(n.a,{href:"/get-started/wallets/leap/import-seed",children:(0,s.jsx)(n.strong,{children:"Leap"})})," or ",(0,s.jsx)(n.a,{href:"/get-started/wallets/keplr/import-seed",children:(0,s.jsx)(n.strong,{children:"Keplr"})}),"."]}),(0,s.jsxs)(n.p,{children:["If you are running your node for testing purposes you can use the ",(0,s.jsx)(n.a,{href:"https://busurnode.com/network/sentinel/faucet",children:(0,s.jsx)(n.strong,{children:"Node Faucet"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"run-the-node-container",children:"Run the Node Container"}),"\n",(0,s.jsx)(n.p,{children:"Start your node by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -d \\\n  --rm \\\n  --cap-drop ALL \\\n  --cap-add NET_ADMIN \\\n  --cap-add NET_RAW \\\n  --cap-add SYS_MODULE \\\n  --device /dev/net/tun \\\n  --sysctl net.ipv4.ip_forward=1 \\\n  --sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n  --sysctl net.ipv6.conf.all.forwarding=1 \\\n  --sysctl net.ipv6.conf.default.forwarding=1 \\\n  --volume "${VOLUME}" \\\n  --name "dvpnx" \\\n  --interactive \\\n  --tty \\\n  --sig-proxy=false \\\n  ${PUBLISH_PORT_ARGS} \\\n  sentinel-dvpnx start\n'})}),"\n",(0,s.jsx)(n.h2,{id:"after-starting-the-node",children:"After Starting the Node"}),"\n",(0,s.jsx)(n.p,{children:"Check if the node is running and visible to everyone. Open your browser and type the following URL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"https://ip_node:tcp_port\n"})}),"\n",(0,s.jsx)(n.p,{children:"Node logs. You can specify a different number of logs if you need to view more or fewer entries"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs -f -n 100 dvpnx\n"})}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Logs"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'2025-10-26T04:55:44Z INF Validating configuration\n2025-10-26T04:55:44Z INF Setting up node\n2025-10-26T04:55:44Z INF Setting up context\n2025-10-26T04:55:44Z INF Initializing context\n2025-10-26T04:55:44Z INF Setting up blockchain client\n2025-10-26T04:55:44Z INF Initializing blockchain client keyring.backend=test keyring.name=sentinel rpc.addr=https://rpc.sentinel.co:443 rpc.chain_id=sentinelhub-2 tx.from_name=key-1\n2025-10-26T04:55:44Z INF Setting up database\n2025-10-26T04:55:44Z INF Initializing database file=/root/.sentinel-dvpnx/data.db\n2025-10-26T04:55:44Z INF Setting up GeoIP client\n2025-10-26T04:55:44Z INF Initializing GeoIP client\n2025-10-26T04:55:44Z INF Setting up oracle client\n2025-10-26T04:55:44Z INF Initializing oracle client name=coingecko\n2025-10-26T04:55:44Z INF Setting up service\n2025-10-26T04:55:44Z INF Initializing service type=wireguard\n2025-10-26T04:55:44Z INF Checking service status\n2025-10-26T04:55:44Z INF Setting up account addr\n2025-10-26T04:55:44Z INF Retrieving addr for key name=key-1\n2025-10-26T04:55:44Z INF Querying account information addr=sent1x4faeeu8lqjnnjywa89j9xv34h0wm2yre96uc\n2025-10-26T04:55:45Z INF Setting up scheduler\n2025-10-26T04:55:45Z INF Initializing scheduler\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=5m0s name=best_rpc_addr\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=6h0m0s name=geoip_location\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=6h0m0s name=node_prices_update\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=55m0s name=node_status_update\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=1h55m0s name=session_usage_sync_with_blockchain\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=2s name=session_usage_sync_with_database\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=5s name=session_usage_validate\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=5m0s name=session_validate\n2025-10-26T04:55:45Z INF Registering scheduler worker interval=168h0m0s name=speedtest\n2025-10-26T04:55:45Z INF Setting up API server\n2025-10-26T04:55:45Z INF Initializing API server\n2025-10-26T04:55:45Z INF Starting node\n2025-10-26T04:55:45Z INF Node already registered addr=sentnode1x4faeeu8lqjnnjywa89j9xv34h0wm2y541aum2\n2025-10-26T04:55:45Z INF Updating node details gigabyte_prices=udvpn:0.002500000000000000,12500000 hourly_prices=udvpn:0.005000000000000000,25000000 remote_addrs=["123.456.7.8:19781"]\n2025-10-26T04:55:50Z INF Node details updated successfully addr=sentnode1x4faeeu8lqjnnjywa89j9xv34h0wm2y541aum2\n2025-10-26T04:55:50Z INF Starting service\n2025-10-26T04:55:50Z INF Starting scheduler\n2025-10-26T04:55:50Z INF Starting API server\n2025-10-26T04:55:50Z INF Node started successfully\n'})})})]}),"\n",(0,s.jsx)(n.p,{children:"To detach from logs, just press CTRL+C on your keyboard"}),"\n",(0,s.jsx)(n.p,{children:"Container list/details"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker ps -a\n"})}),"\n",(0,s.jsx)(n.p,{children:"Restart a node (it stops and starts the node)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker restart dvpnx\n"})}),"\n",(0,s.jsx)(n.p,{children:"Stop a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker stop dvpnx\n"})}),"\n",(0,s.jsx)(n.p,{children:"Start a stopped node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker start dvpnx\n"})}),"\n",(0,s.jsx)(n.p,{children:"Remove a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker rm -f dvpnx\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);