"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[9639],{84141:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"manual/node-run","title":"Run the Node","description":"Start your node","source":"@site/docs/dvpn-node-setup/manual/node-run.md","sourceDirName":"manual","slug":"/manual/node-run","permalink":"/dvpn-node-setup/manual/node-run","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Run the Node","description":"Start your node","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Node Configuration","permalink":"/dvpn-node-setup/manual/node-config"},"next":{"title":"(Optional) Enable IPv6","permalink":"/dvpn-node-setup/manual/ipv6"}}');var s=t(74848),r=t(28453);const d={title:"Run the Node",description:"Start your node",sidebar_position:5},i=void 0,a={},c=[{value:"Enabling Autorestart Function (Without using a Passphrase)",id:"enabling-autorestart-function-without-using-a-passphrase",level:2},{value:"Wireguard",id:"wireguard",level:3},{value:"V2Ray",id:"v2ray",level:3},{value:"Using a Passphrase (Without Autorestart Function)",id:"using-a-passphrase-without-autorestart-function",level:2},{value:"Wireguard",id:"wireguard-1",level:3},{value:"V2Ray",id:"v2ray-1",level:3},{value:"Start/Restart the Container",id:"startrestart-the-container",level:3},{value:"Attach to the container",id:"attach-to-the-container",level:3},{value:"Detach from the Docker Container",id:"detach-from-the-docker-container",level:3},{value:"Post Node Run Commands",id:"post-node-run-commands",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Running a node can be done in two ways: with or without the autorestart function. If you do not want to use it, you need to use a screen session to detach from the node after launching the docker run command."}),"\n",(0,s.jsxs)(n.admonition,{title:"Important",type:"danger",children:[(0,s.jsxs)(n.p,{children:["Before starting the node, remember to send a few P2P (",(0,s.jsx)(n.strong,{children:"50"})," should suffice) to the operator address otherwise the node will not start!\nTo accomplish this, import the seed you generated or recovered in ",(0,s.jsx)(n.a,{href:"/dvpn-node-setup/manual/node-config#add-a-mnemonic",children:(0,s.jsx)(n.strong,{children:"this step"})})," into a wallet such as ",(0,s.jsx)(n.a,{href:"/get-started/wallets/leap/import-seed",children:(0,s.jsx)(n.strong,{children:"Leap"})})," or ",(0,s.jsx)(n.a,{href:"/get-started/wallets/keplr/import-seed",children:(0,s.jsx)(n.strong,{children:"Keplr"})}),"."]}),(0,s.jsxs)(n.p,{children:["If you are running your node for testing purposes you can use the ",(0,s.jsx)(n.a,{href:"https://busurnode.com/network/sentinel/faucet",children:(0,s.jsx)(n.strong,{children:"Node Faucet"})})]})]}),"\n",(0,s.jsx)(n.h2,{id:"enabling-autorestart-function-without-using-a-passphrase",children:"Enabling Autorestart Function (Without using a Passphrase)"}),"\n",(0,s.jsxs)(n.p,{children:["To use autorestart function you must have set ",(0,s.jsx)(n.code,{children:"backend='test'"})," on ",(0,s.jsx)(n.code,{children:"config.toml"})," file. This is the easiest way, as it doesn't require the passphrase to be entered every time the node stops for any reason. However, it's worth noting that this solution is not recommended."]}),"\n",(0,s.jsx)(n.h3,{id:"wireguard",children:"Wireguard"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"wireguard.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<WIREGUARD_PORT>"})," with ",(0,s.jsx)(n.code,{children:"8888"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Run Command with Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -d \\\n    --name sentinel-dvpn-node \\\n    --restart unless-stopped \\\n    --volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n    --volume /lib/modules:/lib/modules \\\n    --cap-drop ALL \\\n    --cap-add NET_ADMIN \\\n    --cap-add NET_BIND_SERVICE \\\n    --cap-add NET_RAW \\\n    --cap-add SYS_MODULE \\\n    --sysctl net.ipv4.ip_forward=1 \\\n    --sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n    --sysctl net.ipv6.conf.all.forwarding=1 \\\n    --sysctl net.ipv6.conf.default.forwarding=1 \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <WIREGUARD_PORT>:<WIREGUARD_PORT>/udp \\\n    sentinel-dvpn-node process start\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"v2ray",children:"V2Ray"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"v2ray.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<V2RAY_PORT>"})," with ",(0,s.jsx)(n.code,{children:"9999"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Run Command with Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run -d \\\n    --restart unless-stopped \\\n    --volume "${HOME}/.sentinelnode:/root/.sentinelnode" \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <V2RAY_PORT>:<V2RAY_PORT>/tcp \\\n    sentinel-dvpn-node process start\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"using-a-passphrase-without-autorestart-function",children:"Using a Passphrase (Without Autorestart Function)"}),"\n",(0,s.jsx)(n.p,{children:"If you prefer not to initiate your node using the autorestart function, you should execute the docker run command with 2 additional flags."}),"\n",(0,s.jsx)(n.p,{children:"Depending on the protocol you have selected, run the corresponding command"}),"\n",(0,s.jsx)(n.h3,{id:"wireguard-1",children:"Wireguard"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"wireguard.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<WIREGUARD_PORT>"})," with ",(0,s.jsx)(n.code,{children:"8888"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Run Command without Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run --sig-proxy=false \\\n    --detach-keys="ctrl-q" \\\n    --name sentinel-dvpn-node \\\n    --interactive \\\n    --tty \\\n    --volume ${HOME}/.sentinelnode:/root/.sentinelnode \\\n    --volume /lib/modules:/lib/modules \\\n    --cap-drop ALL \\\n    --cap-add NET_ADMIN \\\n    --cap-add NET_BIND_SERVICE \\\n    --cap-add NET_RAW \\\n    --cap-add SYS_MODULE \\\n    --sysctl net.ipv4.ip_forward=1 \\\n    --sysctl net.ipv6.conf.all.disable_ipv6=0 \\\n    --sysctl net.ipv6.conf.all.forwarding=1 \\\n    --sysctl net.ipv6.conf.default.forwarding=1 \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <WIREGUARD_PORT>:<WIREGUARD_PORT>/udp \\\n    sentinel-dvpn-node process start\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"v2ray-1",children:"V2Ray"}),"\n",(0,s.jsxs)(n.p,{children:["To run the node, use the following command and remember to include the ports you chose in your ",(0,s.jsx)(n.code,{children:"config.toml"})," and ",(0,s.jsx)(n.code,{children:"v2ray.toml"})," files (in this example, replace ",(0,s.jsx)(n.code,{children:"<API_PORT>"})," with ",(0,s.jsx)(n.code,{children:"7777"})," and ",(0,s.jsx)(n.code,{children:"<V2RAY_PORT>"})," with ",(0,s.jsx)(n.code,{children:"9999"})," (without the ",(0,s.jsx)(n.code,{children:"'<'"})," and ",(0,s.jsx)(n.code,{children:"'>'"}),"):"]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Run Command without Autorestart"}),(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker run --sig-proxy=false \\\n    --detach-keys="ctrl-q" \\\n    --interactive \\\n    --tty \\\n    --volume "${HOME}/.sentinelnode:/root/.sentinelnode" \\\n    --publish <API_PORT>:<API_PORT>/tcp \\\n    --publish <V2RAY_PORT>:<V2RAY_PORT>/tcp \\\n    sentinel-dvpn-node process start\n'})})})]}),"\n",(0,s.jsx)(n.h3,{id:"startrestart-the-container",children:"Start/Restart the Container"}),"\n",(0,s.jsx)(n.p,{children:"To restart a running container and be prompted to type your passphrase execute"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker start -ai --detach-keys="ctrl-q" sentinel-dvpn-node\n'})}),"\n",(0,s.jsx)(n.h3,{id:"attach-to-the-container",children:"Attach to the container"}),"\n",(0,s.jsx)(n.p,{children:"To attach to a running container execute"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'docker attach --detach-keys="ctrl-q" sentinel-dvpn-node\n'})}),"\n",(0,s.jsx)(n.h3,{id:"detach-from-the-docker-container",children:"Detach from the Docker Container"}),"\n",(0,s.jsxs)(n.p,{children:["If you want to detach from a running container accessed with any of the previous commands (",(0,s.jsx)(n.code,{children:"run"}),", ",(0,s.jsx)(n.code,{children:"start/restart"})," or ",(0,s.jsx)(n.code,{children:"attach"}),") just press ",(0,s.jsx)(n.code,{children:"CTRL+Q"})," on your keyboard"]}),"\n",(0,s.jsx)(n.h2,{id:"post-node-run-commands",children:"Post Node Run Commands"}),"\n",(0,s.jsx)(n.p,{children:"Check if the node is running and visible to everyone. Open your browser and type the following URL"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"https://ip_node:tcp_port/status\n"})}),"\n",(0,s.jsx)(n.p,{children:"Node logs. You can specify a different number of logs if you need to view more or fewer entries"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker logs -f -n 100 sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"To detach from logs, just press CTRL+C on your keyboard"}),"\n",(0,s.jsx)(n.p,{children:"Container list/details"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker ps -a\n"})}),"\n",(0,s.jsx)(n.p,{children:"Restart a node (it stops and starts the node)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker restart sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Stop a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker stop sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Start a stopped node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker start sentinel-dvpn-node\n"})}),"\n",(0,s.jsx)(n.p,{children:"Remove a node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker rm -f sentinel-dvpn-node\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var o=t(96540);const s={},r=o.createContext(s);function d(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);