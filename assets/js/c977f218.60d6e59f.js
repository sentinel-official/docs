"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[9254],{80052:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"node-setup","title":"Full Node Setup","description":"Enable ports on Firewall","source":"@site/docs/full-node-setup/node-setup.md","sourceDirName":".","slug":"/node-setup","permalink":"/full-node-setup/node-setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Full Node Setup","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Golang Setup","permalink":"/full-node-setup/golang"},"next":{"title":"Run the Full Node","permalink":"/full-node-setup/node-run"}}');var t=s(74848),l=s(28453);const o={title:"Full Node Setup",sidebar_position:4},a="Install and Configure Full Node",r={},c=[{value:"Enable ports on Firewall",id:"enable-ports-on-firewall",level:2},{value:"Install Sentinel Hub",id:"install-sentinel-hub",level:2},{value:"Configure Sentinel Hub",id:"configure-sentinel-hub",level:2},{value:"Genesis File",id:"genesis-file",level:3},{value:"Edit the Node configuration file",id:"edit-the-node-configuration-file",level:3},{value:"Add a system unit file",id:"add-a-system-unit-file",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"install-and-configure-full-node",children:"Install and Configure Full Node"})}),"\n",(0,t.jsx)(n.h2,{id:"enable-ports-on-firewall",children:"Enable ports on Firewall"}),"\n",(0,t.jsx)(n.p,{children:"Set up these ports on your firewall:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ufw allow 26656/tcp\n"})}),"\n",(0,t.jsx)(n.p,{children:"Check firewall status to see if the port has been enabled"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ufw status\n"})}),"\n",(0,t.jsx)(n.h2,{id:"install-sentinel-hub",children:"Install Sentinel Hub"}),"\n",(0,t.jsxs)(n.p,{children:["To install Sentinel Hub, please download the latest version from the ",(0,t.jsx)(n.a,{href:"https://github.com/sentinel-official/hub/releases",children:"repository"})," and proceed by executing the following commands:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git clone https://github.com/sentinel-official/hub.git "${HOME}/sentinelhub"\ncd "${HOME}/sentinelhub"\ngit checkout vX.X.X\nmake install\n\n# For Ubuntu installation\nsudo ln -s "${GOBIN}/sentinelhub" /usr/bin/sentinelhub\n\n# For manual installation\nsudo ln -s "${GOBIN}/sentinelhub" /usr/local/bin/sentinelhub\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configure-sentinel-hub",children:"Configure Sentinel Hub"}),"\n",(0,t.jsx)(n.h3,{id:"genesis-file",children:"Genesis File"}),"\n",(0,t.jsx)(n.p,{children:"Let's initialize the Sentinel Hub using the Genesis file, a JSON file which defines the initial state of Sentinel blockchain. The state defined in the genesis file contains all the necessary information, like initial coin allocation, genesis time, default parameters, and more"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'sentinelhub init --chain-id sentinelhub-2 "Your Full Node Name"\ncurl -fsLS -o "${HOME}/genesis.zip" "https://raw.githubusercontent.com/sentinel-official/networks/main/sentinelhub-2/genesis.zip"\nunzip -d "${HOME}/.sentinelhub/config/" "${HOME}/genesis.zip"\nrm "${HOME}/genesis.zip"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You will be asked to replace the genesis file, type ",(0,t.jsx)(n.code,{children:"[A]ll"})]}),"\n",(0,t.jsxs)(n.p,{children:["In case you need a mirror because the official hosting site does not work, use this from ",(0,t.jsx)(n.code,{children:"Polkachu"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"wget -O genesis.json https://snapshots.polkachu.com/genesis/sentinel/genesis.json --inet4-only\nmv genesis.json ~/.sentinelhub/config\n"})}),"\n",(0,t.jsx)(n.h3,{id:"edit-the-node-configuration-file",children:"Edit the Node configuration file"}),"\n",(0,t.jsx)(n.p,{children:"Open the config.toml file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nano ${HOME}/.sentinelhub/config/config.toml\n"})}),"\n",(0,t.jsx)(n.p,{children:"Set seeds and peers separated by comma."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Seeds"}),": are initial entry points for new nodes joining the network and are typically used during the bootstrap phase. In this phase, a new node connects to them to obtain information about the network's topology and to discover other nodes to connect to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Peers"}),"*: are usually nodes that a given node wants to maintain a reliable and consistent connection with, often because they have specific roles in the network or are deemed important for communication."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The following seeds and peers are provided by ",(0,t.jsx)(n.a,{href:"https://busurnode.com/network/sentinel",children:"Busurnode"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="${HOME}/.sentinelhub/config/config.toml"',children:'[p2p]\nseeds = "a41a600ece63cd7ff7ff1a8a93002c9c46771c7b@seeds.busurnode.com:21056"\npersistent_peers = "69ad69d517326d38661325517d7bf7cce065b4eb@mizu.busur.net:21056,f309f97644f084819619c41acdfcd6cf56aebaa3@saki.busur.net:21056,a527530ec76a3aaac8e18af8b6e33ae1f8170210@chie.busur.net:21056"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you'd like to add or use other peers, you can find options from trusted sources like ",(0,t.jsx)(n.a,{href:"https://polkachu.com/live_peers/sentinel",children:"Polkachu"})," or ",(0,t.jsx)(n.a,{href:"https://autostake.com/networks/sentinel/",children:"AutoStake"})]}),"\n",(0,t.jsxs)(n.p,{children:["If you plan to use State Sync to run your node, simply set it to ",(0,t.jsx)(n.code,{children:"true"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"[statesync]\nenable = true\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enable Prometheus for data scraping"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'prometheus = true\n\n# Address to listen for Prometheus collector(s) connections\nprometheus_listen_addr = ":26660"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Open the Prometheus port 26660 on your Full Node firewall which will be accessible only from your monitor machine"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ufw allow from monitor_ip to full_node_ip port 26660\n"})}),"\n",(0,t.jsx)(n.p,{children:"Open the app.toml file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nano ${HOME}/.sentinelhub/config/app.toml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Establish minimum gas prices for udvpn and other supported IBC tokens. You can find the minimum gas prices for udvpn ",(0,t.jsx)(n.a,{href:"https://raw.githubusercontent.com/sentinel-official/networks/main/sentinelhub-2/minimum-gas-prices.txt",children:"here"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="${HOME}/.sentinelhub/config/app.toml"',children:'minimum-gas-prices = "0.01ibc/31FEE1A2A9F9C01113F90BD0BBCCE8FD6BBB8585FAF109A2101827DD1D5B95B8,0.1udvpn,0.01ibc/B1C0DDB14F25279A2026BC8794E12B259F8BDA546A3C5132CCAEE4431CE36783,0.01ibc/ED07A3391A112B175915CD8FAF43A2DA8E4790EDE12566649D0C2F97716B8518,0.01ibc/A8C2D23A1E6F95DA4E48BA349667E322BD7A6C996D8A4AAE8BA72E190F3D1477"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"add-a-system-unit-file",children:"Add a system unit file"}),"\n",(0,t.jsxs)(n.p,{children:["If you're using ",(0,t.jsx)(n.a,{href:"/full-node-setup/upgrades/cosmovisor",children:"Cosmovisor"}),", you can skip this step."]}),"\n",(0,t.jsx)(n.p,{children:"Open the sentinelhub.service with a text editor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/sentinelhub.service\n"})}),"\n",(0,t.jsx)(n.p,{children:"Paste the below text"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"sentinelhub.service"}),(0,t.jsx)("p",{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="/etc/systemd/system/sentinelhub.service"',children:"[Unit]\nDescription=Sentinel Hub Daemon\nAfter=network.target\n\n[Service]\nUser=sentinel\nType=simple\n\n# For Ubuntu installation\nExecStart=/usr/bin/sentinelhub start\n# For Manual installation\nExecStart=/usr/local/bin/sentinelhub start\n\nRestart=on-failure\nStartLimitInterval=0\nRestartSec=5\nLimitNOFILE=1048576\nLimitMEMLOCK=2048132\n\n[Install]\nWantedBy=multi-user.target\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"Let's make sure to assign ownership of all sentinelhub files to the current user (in our case, 'sentinel')"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo chown -R sentinel:sentinel ~/.sentinelhub\n"})}),"\n",(0,t.jsx)(n.p,{children:"Reload the systemd Daemon"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enable autostart of Sentinel Hub service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable sentinelhub.service\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);