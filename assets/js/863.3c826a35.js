"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[863],{10863:(e,t,i)=>{i.r(t),i.d(t,{dyte_ui_provider:()=>d});var s=i(98342),n=i(371),o=i(89275),a=i(98836);i(86979),i(13633);const d=class{constructor(e){(0,s.r)(this,e),this.statesUpdate=(0,s.c)(this,"dyteStatesUpdate",7),this.config=n.d,this.showSetupScreen=!1,this.noRenderUntilMeeting=!1,this.handleResize=()=>{this.size=(0,a.g)(this.host.clientWidth)},this.loadTheme=()=>{var e;if(this.config===n.d){const{config:e}=(0,o.g)(this.meeting.self.config,this.meeting);this.config=e}(null===(e=this.config)||void 0===e?void 0:e.designTokens)&&(0,o.p)(document.documentElement,this.config.designTokens)},this.roomJoinedListener=()=>{this.updateStates({meeting:"joined"})},this.waitlistedListener=()=>{this.updateStates({meeting:"waiting"})},this.roomLeftListener=({state:e})=>{"disconnected"!==e&&"failed"!==e&&this.updateStates({meeting:"ended",roomLeftState:e})},this.mediaPermissionUpdateListener=({kind:e,message:t})=>{if(["audio","video"].includes(e)&&("DENIED"===t||"SYSTEM_DENIED"===t)&&!0!==n.l.states.activeDebugger){const t={enabled:!0,kind:e};this.updateStates({activePermissionsMessage:t})}},this.socketConnectionUpdateListener=({state:e})=>{"failed"===e&&setTimeout((()=>{this.meeting.leave("disconnected")}),1e4)}}listenState(e){this.updateStates(e.detail)}updateStates(e){const t=Object.assign({},n.l.states);n.l.states=(0,o.d)(t,e),this.statesUpdate.emit(n.l.states)}connectedCallback(){"undefined"!=typeof window&&(this.authErrorListener=e=>{e.detail.message.includes("401")&&this.updateStates({meeting:"ended",roomLeftState:"unauthorized"})},window.addEventListener("dyteError",this.authErrorListener)),this.onMeetingChange(this.meeting),this.onIconPackChange(this.iconPack),this.onTChange(this.t),this.onConfigChange(this.config),this.onSizeChange(this.size),this.resizeObserver=new ResizeObserver((()=>this.handleResize())),this.resizeObserver.observe(this.host)}disconnectedCallback(){this.resizeObserver.disconnect(),window.removeEventListener("dyteError",this.authErrorListener),this.meeting&&(this.meeting.self.removeListener("roomLeft",this.roomLeftListener),this.meeting.self.removeListener("roomJoined",this.roomJoinedListener),this.meeting.self.removeListener("waitlisted",this.waitlistedListener),this.meeting.self.removeListener("mediaPermissionUpdate",this.mediaPermissionUpdateListener),this.meeting.meta.removeListener("socketConnectionUpdate",this.socketConnectionUpdateListener))}onMeetingChange(e){n.u.state.meeting=e,e&&(this.updateStates({viewType:e.meta.viewType}),this.loadTheme(),e.self.addListener("roomJoined",this.roomJoinedListener),e.self.addListener("waitlisted",this.waitlistedListener),e.self.addListener("roomLeft",this.roomLeftListener),e.self.addListener("mediaPermissionUpdate",this.mediaPermissionUpdateListener),e.meta.addListener("socketConnectionUpdate",this.socketConnectionUpdateListener),e.connectedMeetings.supportsConnectedMeetings&&e.connectedMeetings.once("changingMeeting",this.handleChangingMeeting),e.self.roomJoined?this.updateStates({meeting:"joined"}):this.showSetupScreen?this.updateStates({meeting:"setup"}):e.joinRoom(),window.removeEventListener("dyteError",this.authErrorListener))}onIconPackChange(e){n.u.state.iconPack=e}onTChange(e){n.u.state.t=e}onConfigChange(e){n.u.state.config=e}onSizeChange(e){n.u.state.size=e}handleChangingMeeting(e){this.updateStates({activeBreakoutRoomsManager:Object.assign(Object.assign({},n.l.states.activeBreakoutRoomsManager),{destinationMeetingId:e})})}render(){return(0,s.h)(s.H,{key:"5f67cfc77ed97b1c996a086441b793e643f7a40e"},this.noRenderUntilMeeting&&!this.meeting?null:(0,s.h)("slot",null))}get host(){return(0,s.a)(this)}static get watchers(){return{meeting:["onMeetingChange"],iconPack:["onIconPackChange"],t:["onTChange"],config:["onConfigChange"],size:["onSizeChange"]}}};d.style="dyte-ui-provider{display:block;width:100%;height:100%}"},98836:(e,t,i)=>{i.d(t,{g:()=>o});const s=768,n=1080,o=e=>e>=n?"lg":e>=s?"md":"sm"}}]);