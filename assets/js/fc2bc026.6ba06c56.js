"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[9375],{433:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"upgrades/cosmovisor/upgrade","title":"Binary Upgrade","description":"How to use Cosmovisor during an upgrade","source":"@site/docs/full-node-setup/upgrades/cosmovisor/upgrade.md","sourceDirName":"upgrades/cosmovisor","slug":"/upgrades/cosmovisor/upgrade","permalink":"/full-node-setup/upgrades/cosmovisor/upgrade","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Binary Upgrade","description":"How to use Cosmovisor during an upgrade","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Setup & Config","permalink":"/full-node-setup/upgrades/cosmovisor/setup-config"},"next":{"title":"Software Upgrade","permalink":"/full-node-setup/upgrades/software-update"}}');var i=s(74848),o=s(28453);const t={title:"Binary Upgrade",description:"How to use Cosmovisor during an upgrade",sidebar_position:3},a="Binary Upgrade",c={},d=[{value:"Consensus Breaking (Chain Upgrade)",id:"consensus-breaking-chain-upgrade",level:2},{value:"Non Consensus Breaking",id:"non-consensus-breaking",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"binary-upgrade",children:"Binary Upgrade"})}),"\n",(0,i.jsxs)(n.p,{children:["When the upgrade is available clone the Sentinel Hub ",(0,i.jsx)(n.a,{href:"https://github.com/sentinel-official/hub",children:"repository"}),", checkout at the new version and install it"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git clone https://github.com/sentinel-official/sentinelhub.git "${HOME}/sentinelhub"\ncd "${HOME}/sentinelhub"\ngit checkout <new_version>\nmake install\n'})}),"\n",(0,i.jsx)(n.p,{children:"An upgrade to the blockchain can either be consensus-breaking or non-consensus-breaking. The procedural steps to be followed depend on the type of consensus involved."}),"\n",(0,i.jsx)(n.h2,{id:"consensus-breaking-chain-upgrade",children:"Consensus Breaking (Chain Upgrade)"}),"\n",(0,i.jsxs)(n.p,{children:["Create the upgrade directory inside Cosmovisor with the name of the version (for the last upgrade was ",(0,i.jsx)(n.strong,{children:"v11"})," as you can see ",(0,i.jsx)(n.a,{href:"https://ping.pub/sentinel/gov/30",children:"here"})," under the section plan, tab name)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/.sentinelhub/cosmovisor/upgrades/<upgrade_name>/bin\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Copy ",(0,i.jsx)(n.code,{children:"sentinelhub"})," binary in it"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp ~/go/bin/sentinelhub ~/.sentinelhub/cosmovisor/upgrades/<upgrade_name>/bin\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check if the ",(0,i.jsx)(n.code,{children:"sentinelhub"})," binary upgrade was copied and if it is the correct version:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"~/.sentinelhub/cosmovisor/upgrades/<upgrade_name>/bin/sentinelhub version\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now that you have prepared and deployed the new binary, the remaining steps will be managed by Cosmovisor when the upgrade is scheduled to take place. Here's a breakdown of the process:"}),"\n",(0,i.jsxs)(n.p,{children:["When the designated block height is reached, the blockchain temporarily halts its operations. Following this, an ",(0,i.jsx)(n.code,{children:"upgrade-info.json"})," file is generated and put into the folder ",(0,i.jsx)(n.code,{children:".sentinelhub/cosmovisor/upgrades/<upgrade_name>/"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The content of this file will be the following, based on the last hub upgrade:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title=".sentinelhub/cosmovisor/upgrades/<upgrade_name>/"',children:'{"name":"v12_0_0","time":"0001-01-01T00:00:00Z","height":23997755}\n'})}),"\n",(0,i.jsx)(n.p,{children:"The Cosmovisor system identifies the existence of this file and triggers the required sequence of actions. These actions include pausing the node, inserting the relevant binary into the specified directory, and subsequently restarting the node."}),"\n",(0,i.jsx)(n.p,{children:"This carefully orchestrated sequence guarantees a seamless transition and successful execution of the blockchain upgrade."}),"\n",(0,i.jsx)(n.h2,{id:"non-consensus-breaking",children:"Non Consensus Breaking"}),"\n",(0,i.jsx)(n.p,{children:"The non-consensus breaking process involves the seamless replacement of the current sentinel binary with the updated version."}),"\n",(0,i.jsx)(n.p,{children:"Stop cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop cosmovisor.service\n"})}),"\n",(0,i.jsx)(n.p,{children:"Copy the newly created Sentinel Hub binary into Cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp go/bin/sentinelhub .sentinelhub/cosmovisor/current/bin/\n"})}),"\n",(0,i.jsx)(n.p,{children:"Verify that the cosmovisor version is current"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cosmovisor version\n"})}),"\n",(0,i.jsx)(n.p,{children:"Start cosmovisor"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl start cosmovisor\n"})}),"\n",(0,i.jsx)(n.p,{children:"Monitor the logs to confirm the successful execution of the process"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"journalctl -u cosmovisor.service -f --output=cat\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);