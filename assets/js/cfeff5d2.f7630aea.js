"use strict";(self.webpackChunksentinel_docs=self.webpackChunksentinel_docs||[]).push([[5696],{17713:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"commands/keys/multisig","title":"Multisig","description":"How to generate and manage a Multisig Key.","source":"@site/docs/sentinel-hub/commands/keys/multisig.md","sourceDirName":"commands/keys","slug":"/commands/keys/multisig","permalink":"/sentinel-hub/commands/keys/multisig","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Multisig","description":"How to generate and manage a Multisig Key.","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Key Management","permalink":"/sentinel-hub/commands/keys/"},"next":{"title":"Authz","permalink":"/sentinel-hub/commands/transactions/authz"}}');var i=s(74848),a=s(28453);const r={title:"Multisig",description:"How to generate and manage a Multisig Key.",sidebar_position:2},l="Multisig",o={},c=[{value:"Example: Multisig TX",id:"example-multisig-tx",level:2},{value:"Step 1: Generate Individual Keys",id:"step-1-generate-individual-keys",level:3},{value:"This is the output details of the <code>key_1</code>",id:"this-is-the-output-details-of-the-key_1",level:4},{value:"Step 2: Create the Multisig Key",id:"step-2-create-the-multisig-key",level:3},{value:"Step 3: Create the Multisig TX",id:"step-3-create-the-multisig-tx",level:3},{value:"Step 4: Sign the Transaction",id:"step-4-sign-the-transaction",level:3},{value:"Step 5: Multisign by Combining Signatures",id:"step-5-multisign-by-combining-signatures",level:3},{value:"Step 6: Broadcast the TX",id:"step-6-broadcast-the-tx",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"multisig",children:"Multisig"})}),"\n",(0,i.jsx)(n.p,{children:"A multisig account is a Sentinel account with a special key requiring more than one signature to approve transactions. This setup enhances account security and enables joint control by multiple parties. To create a multisig account, you must specify:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The number of signatures required (threshold)."}),"\n",(0,i.jsx)(n.li,{children:"The public keys of all participants."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Transactions made with a multisig account need individual signatures from the designated keys. These signatures are then combined into a multisignature. If the number of signatures is below the threshold, the multisignature becomes invalid."}),"\n",(0,i.jsx)(n.h2,{id:"example-multisig-tx",children:"Example: Multisig TX"}),"\n",(0,i.jsxs)(n.p,{children:["Here\u2019s a step-by-step guide to creating a multisig account named ",(0,i.jsx)(n.code,{children:"multisig-key"})," using three keys."]}),"\n",(0,i.jsx)(n.h3,{id:"step-1-generate-individual-keys",children:"Step 1: Generate Individual Keys"}),"\n",(0,i.jsxs)(n.p,{children:["Each participant must create their own key. In this example, the keys are named ",(0,i.jsx)(n.code,{children:"key_1"}),", ",(0,i.jsx)(n.code,{children:"key_2"}),", and ",(0,i.jsx)(n.code,{children:"key_3"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub keys add key_1\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsxs)("p",{children:[(0,i.jsxs)(n.h4,{id:"this-is-the-output-details-of-the-key_1",children:["This is the output details of the ",(0,i.jsx)(n.code,{children:"key_1"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'- name: key_1\n  type: local\n  address: sent16e34vs3zmp0fjr90rcq888c4padq7g6uh98zk3\n  pubkey: \'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A2azxghav4YItrKC0TYXPf2QX2GrDYgOjicNBS5DyPxK"}\'\n  mnemonic: ""\n\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\nbox yellow pottery flower vendor vivid cigar cream trigger gospel panther twelve donate demise gorilla vacuum grocery theme live kiss proof man follow cheese\n'})})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub keys add key_2\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'- name: key_2\n  type: local\n  address: sent1sd7hd45p5p8ls22a2em9ezly3v3yjr2dm7rqup\n  pubkey: \'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A6JIWSoDkRnryc+q1Eld8VIJdCTx71Panqa43tgPH45B"}\'\n  mnemonic: ""\n\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\nfloor tissue frequent fashion shell conduct raw glimpse lonely region pull help little state excuse supreme flight insane hurt empty blanket lecture plug upper\n'})})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub keys add key_3\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'- name: key_3\n  type: local\n  address: sent1r57hfyk2z6txmv7tmuc95erltrw46zfatgnpjt\n  pubkey: \'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AmFjwqac9h7/gawTExDSbNu5ObNPjxSb9D233gBa64CJ"}\'\n  mnemonic: ""\n\n\n**Important** write this mnemonic phrase in a safe place.\nIt is the only way to recover your account if you ever forget your password.\n\ndetect artefact lemon budget make beyond tape unaware toast mask volume gate crane viable axis utility wheat make home much royal flee depart spawn\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-2-create-the-multisig-key",children:"Step 2: Create the Multisig Key"}),"\n",(0,i.jsxs)(n.p,{children:["After generating the keys, combine their public keys to create the multisig key ",(0,i.jsx)(n.code,{children:"multisig-key"})," with a 2-of-3 threshold."]}),"\n",(0,i.jsx)(n.p,{children:"First, import all the public keys. Use the following commands to add each key:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sentinelhub keys add key_1 --pubkey=\'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A2azxghav4YItrKC0TYXPf2QX2GrDYgOjicNBS5DyPxK"}\'\nsentinelhub keys add key_2 --pubkey=\'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A6JIWSoDkRnryc+q1Eld8VIJdCTx71Panqa43tgPH45B"}\'\nsentinelhub keys add key_3 --pubkey=\'{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AmFjwqac9h7/gawTExDSbNu5ObNPjxSb9D233gBa64CJ"}\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"Next, create the multisig key using the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub keys add --multisig=key_1,key_2,key_3 --multisig-threshold=2 multisig-key\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'- name: multisig-key\n  type: multi\n  address: sent13c4medfuu9882c7sqjrt5egqp96l6f4sjd0efh\n  pubkey: \'{"@type":"/cosmos.crypto.multisig.LegacyAminoPubKey","threshold":2,"public_keys":[{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AmFjwqac9h7/gawTExDSbNu5ObNPjxSb9D233gBa64CJ"},{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A6JIWSoDkRnryc+q1Eld8VIJdCTx71Panqa43tgPH45B"},{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"A2azxghav4YItrKC0TYXPf2QX2GrDYgOjicNBS5DyPxK"}]}\'\n  mnemonic: ""\n'})})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"--multisig"})," flag lists the public keys you want to combine. These public keys will create a new multisig public key, which will be stored locally as ",(0,i.jsx)(n.code,{children:"multisig-key"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--multisig-threshold=2"})," is the minimum number of signatures required to authorize a transaction using the multisig key."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["By default, the order of keys in the ",(0,i.jsx)(n.code,{children:"--multisig"})," flag does not matter unless you use the ",(0,i.jsx)(n.code,{children:"--nosort"})," flag. For example, the following two commands will generate the same multisig key:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub keys add --multisig=key_1,key_2,key_3 --multisig-threshold=2 multisig-key\nsentinelhub keys add --multisig=key_1,key_2,key_3 --multisig-threshold=2 multisig-key\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Fund the Multisig Accoun"})}),"\n",(0,i.jsx)(n.p,{children:"Before creating transactions, ensure the multisig account has sufficient DVPN tokens."}),"\n",(0,i.jsx)(n.h3,{id:"step-3-create-the-multisig-tx",children:"Step 3: Create the Multisig TX"}),"\n",(0,i.jsxs)(n.p,{children:["We want to send 5 DVPN from our multisig account to ",(0,i.jsx)(n.code,{children:"sent1nygcr5p33plzq4akfxnl3nr7nf59gnshvtkzs6"}),". To do this, we'll create an offline transaction called ",(0,i.jsx)(n.code,{children:"unsigned.json,"})," which contains the unsigned transaction in JSON format. This file will then be shared with each signer, who will add their signature and return it to the transaction creator."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub tx bank send sent13c4medfuu9882c7sqjrt5egqp96l6f4sjd0efh \\\n    sent1nygcr5p33plzq4akfxnl3nr7nf59gnshvtkzs6 \\\n    5000000udvpn \\\n    --chain-id=sentinelhub-2 \\\n    --gas-prices=0.5udvpn \\\n    --gas=500000 \\\n    --generate-only \\\n    --offline \\\n    --account-number=1052698 \\\n    --sequence=0 \\\n    > unsigned.json\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"unsigned.json"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n   "body":{\n      "messages":[\n         {\n            "@type":"/cosmos.bank.v1beta1.MsgSend",\n            "from_address":"sent13c4medfuu9882c7sqjrt5egqp96l6f4sjd0efh",\n            "to_address":"sent1nygcr5p33plzq4akfxnl3nr7nf59gnshvtkzs6",\n            "amount":[\n               {\n                  "denom":"udvpn",\n                  "amount":"5000000"\n               }\n            ]\n         }\n      ],\n      "memo":"",\n      "timeout_height":"0",\n      "extension_options":[\n         \n      ],\n      "non_critical_extension_options":[\n         \n      ]\n   },\n   "auth_info":{\n      "signer_infos":[\n         \n      ],\n      "fee":{\n         "amount":[\n            {\n               "denom":"udvpn",\n               "amount":"250000"\n            }\n         ],\n         "gas_limit":"500000",\n         "payer":"",\n         "granter":""\n      }\n   },\n   "signatures":[\n      \n   ]\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-4-sign-the-transaction",children:"Step 4: Sign the Transaction"}),"\n",(0,i.jsxs)(n.p,{children:["The multisig transaction requires signatures from any two of the three key holders. In this example, the keys ",(0,i.jsx)(n.code,{children:"key_1"})," and ",(0,i.jsx)(n.code,{children:"key_3"})," will be used to sign the transaction."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub tx sign \\\n    unsigned.json \\\n    --multisig=multisig-key \\\n    --from=key_1 \\\n    --output-document=key_1-signed.json \\\n    --chain-id=sentinelhub-2 \\\n    --node 'https://rpc.sentineldao.com:443'\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"key_1-signed.json"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "signatures": [\n    {\n      "public_key": {\n        "@type": "/cosmos.crypto.secp256k1.PubKey",\n        "key": "A2azxghav4YItrKC0TYXPf2QX2GrDYgOjicNBS5DyPxK"\n      },\n      "data": {\n        "single": {\n          "mode": "SIGN_MODE_LEGACY_AMINO_JSON",\n          "signature": "/vD4D3/an4JLGUr9LI6G6zWv+AIVZsGLohq3eiHhrVZGJxs1M5fznPX/ABYQpvZ5mmP2OjO0TiiCxO2o05o+Ng=="\n        }\n      },\n      "sequence": "0"\n    }\n  ]\n}\n'})})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub tx sign \\\n    unsigned.json \\\n    --multisig=multisig-key \\\n    --from=key_3 \\\n    --output-document=key_3-signed.json \\\n    --chain-id=sentinelhub-2 \\\n    --node 'https://rpc.sentineldao.com:443'\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"key_3-signed.json"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "signatures": [\n    {\n      "public_key": {\n        "@type": "/cosmos.crypto.secp256k1.PubKey",\n        "key": "AmFjwqac9h7/gawTExDSbNu5ObNPjxSb9D233gBa64CJ"\n      },\n      "data": {\n        "single": {\n          "mode": "SIGN_MODE_LEGACY_AMINO_JSON",\n          "signature": "vfBZC78eDgnDV8euRDXRpYvf9SY9q0K6bQw5iHsmbV5ZfarEWdcF7ZNP4Ha0hwnjuLmJzy3rRKLRqjQkUTCyuA=="\n        }\n      },\n      "sequence": "0"\n    }\n  ]\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-5-multisign-by-combining-signatures",children:"Step 5: Multisign by Combining Signatures"}),"\n",(0,i.jsx)(n.p,{children:"Once you have the required signatures, combine them into a single signed transaction. This step finalizes the multisig transaction"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub tx multisign \\\n    unsigned.json \\\n    multisig-key \\\n    key_1-signed.json \\\n    key_3-signed.json \\\n    --output-document=signed.json \\\n    --chain-id=sentinelhub-2 \\\n    --node 'https://rpc.sentineldao.com:443' \\\n    > signed.json\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"signed.json"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "body": {\n    "messages": [\n      {\n        "@type": "/cosmos.bank.v1beta1.MsgSend",\n        "from_address": "sent13c4medfuu9882c7sqjrt5egqp96l6f4sjd0efh",\n        "to_address": "sent1nygcr5p33plzq4akfxnl3nr7nf59gnshvtkzs6",\n        "amount": [\n          {\n            "denom": "udvpn",\n            "amount": "5000000"\n          }\n        ]\n      }\n    ],\n    "memo": "",\n    "timeout_height": "0",\n    "extension_options": [],\n    "non_critical_extension_options": []\n  },\n  "auth_info": {\n    "signer_infos": [\n      {\n        "public_key": {\n          "@type": "/cosmos.crypto.multisig.LegacyAminoPubKey",\n          "threshold": 2,\n          "public_keys": [\n            {\n              "@type": "/cosmos.crypto.secp256k1.PubKey",\n              "key": "AmFjwqac9h7/gawTExDSbNu5ObNPjxSb9D233gBa64CJ"\n            },\n            {\n              "@type": "/cosmos.crypto.secp256k1.PubKey",\n              "key": "A6JIWSoDkRnryc+q1Eld8VIJdCTx71Panqa43tgPH45B"\n            },\n            {\n              "@type": "/cosmos.crypto.secp256k1.PubKey",\n              "key": "A2azxghav4YItrKC0TYXPf2QX2GrDYgOjicNBS5DyPxK"\n            }\n          ]\n        },\n        "mode_info": {\n          "multi": {\n            "bitarray": {\n              "extra_bits_stored": 3,\n              "elems": "oA=="\n            },\n            "mode_infos": [\n              {\n                "single": {\n                  "mode": "SIGN_MODE_LEGACY_AMINO_JSON"\n                }\n              },\n              {\n                "single": {\n                  "mode": "SIGN_MODE_LEGACY_AMINO_JSON"\n                }\n              }\n            ]\n          }\n        },\n        "sequence": "0"\n      }\n    ],\n    "fee": {\n      "amount": [\n        {\n          "denom": "udvpn",\n          "amount": "250000"\n        }\n      ],\n      "gas_limit": "500000",\n      "payer": "",\n      "granter": ""\n    }\n  },\n  "signatures": [\n    "CkC98FkLvx4OCcNXx65ENdGli9/1Jj2rQrptDDmIeyZtXll9qsRZ1wXtk0/gdrSHCeO4uYnPLetEotGqNCRRMLK4CkD+8PgPf9qfgksZSv0sjobrNa/4AhVmwYuiGrd6IeGtVkYnGzUzl/Oc9f8AFhCm9nmaY/Y6M7ROKILE7ajTmj42"\n  ]\n}\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"step-6-broadcast-the-tx",children:"Step 6: Broadcast the TX"}),"\n",(0,i.jsx)(n.p,{children:"Finally, broadcast the signed transaction to the blockchain network."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sentinelhub tx broadcast \\\n    signed.json \\\n    --node 'https://rpc.sentineldao.com:443'\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Output"}),(0,i.jsx)("p",{children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'code: 0\ncodespace: ""\ndata: ""\nevents: []\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: 5308DBB812FE3D7AC308C6B75044D3BCB085A9F72FC4FFE258421940E9842953\n'})})})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(96540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);